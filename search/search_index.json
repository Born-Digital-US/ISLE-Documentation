{
    "docs": [
        {
            "location": "/",
            "text": "Islandora Enterprise (ISLE)\n\n\nWelcome to the documentation for ISLE, a set of resources for building a fully functioning Islandora system quickly using a system building tool called \nDocker\n. This documentation aims to cover every feature of ISLE from end-to-end, covering as much detail as possible. If you are just getting started with ISLE, please review the [getting started guide] first.\n\n\nThe navigation to the left will take you through all the components of ISLE as well as various examples and step-by-step instructions for spinning up an Islandora instance using ISLE. For details about how ISLE came into being please read the [ISLE Executive Summary].\n\n\nContributors welcome!\n\n\n\n\nIf you have questions, please contact \nDavid Keiser-Clark\n or post them on the \nIsle Updates Group\n.",
            "title": "Home"
        },
        {
            "location": "/#islandora-enterprise-isle",
            "text": "Welcome to the documentation for ISLE, a set of resources for building a fully functioning Islandora system quickly using a system building tool called  Docker . This documentation aims to cover every feature of ISLE from end-to-end, covering as much detail as possible. If you are just getting started with ISLE, please review the [getting started guide] first.  The navigation to the left will take you through all the components of ISLE as well as various examples and step-by-step instructions for spinning up an Islandora instance using ISLE. For details about how ISLE came into being please read the [ISLE Executive Summary].",
            "title": "Islandora Enterprise (ISLE)"
        },
        {
            "location": "/#contributors-welcome",
            "text": "If you have questions, please contact  David Keiser-Clark  or post them on the  Isle Updates Group .",
            "title": "Contributors welcome!"
        },
        {
            "location": "/about/",
            "text": "Islandora Enterprise (ISLE)\n is a new project in development that will address one of the most significant pain-points in Islandora: installation and maintenance.\n\n\nIslandora\n is an open-source software \nframework\n designed to help institutions and organizations and their audiences collaboratively manage, and discover digital assets using a best-practices framework.\n\n\nISLE is an orchestrated group of Docker containers to be run on a server, laptop or cloud instance with a minimal suite of tools enabling an efficient deploy and release of an updated production-ready Islandora environment.\n\n\nISLE functions as both an initial installer and maintenance updater with the ability to build new production, staging and sandbox environments as distributable, lightweight and fast \u201ccontainers\u201d in a \nDocker Engine\n environment.\n\n\nThis process allows folks to choose between hosting:\n\n\n\n\nlocally on a laptop for development work\n\n\nlocally in an institutional data center\n\n\nin a cloud environment such as (\nAmazon Web Services\n).\n\n\n\n\nISLE\u2019s production-ready platform will be updated monthly with:\n\n\n\n\ncritical security patches\n\n\nfull stack software updates\n\n\na suite of commonly installed features and solution packs.\n\n\n\n\nISLE is designed to be an evolving but trusted environment to help create a managed process for migrating to the next major release of Islandora (termed CLAW).\n\n\nProject Overview\n\n\nISLE public repository: https://github.com/Islandora-Collaboration-Group/ISLE\n\n\nWhat is Islandora Enterprise (ISLE)?\n\n\nIslandora Enterprise (ISLE) is a new project in development that will address one of the most significant pain-points in Islandora: installation and maintenance.\n\n\nHow does it work?\n\n\nISLE separates an institution\u2019s customizations from core code, and moves that core code into containers that are easily updated, simplifying and largely automating the process of installation and updates/maintenance of Islandora. ISLE also bundles together the best shared modules into a common, production-ready and security-hardened platform.\n\n\nWhy is it needed?\n\n\nIslandora is a powerful digital repository comprised of more than 80 different open-source software libraries. This complex ecosystem makes Islandora difficult and expensive to install, maintain and customize. ISLE lowers the barrier to entry for new schools while allowing existing institutions to reallocate funds towards development or ingestion instead of maintenance.\n\n\nHigh Level Objective\n\n\nTo deliver a secure and production-ready Islandora stack (\u201cISLE\u201d) that reduces the involved support time and effort for installation, maintenance and customization.\n\n\nISLE Functional Definition\n\n\nBy ISLE, it is meant a system that will:  \n\n\n\n\nFunction as both an initial installer and maintenance updater for Islandora stacks with up-to-date components suitable for use as staging, development or production environments, as well as for use on personal computers for development work.\n\n\nConsist of a public, tagged set of Docker containers.\n\n\nInclude use of an orchestration tool such as Docker Composer.\n\n\nAllow for the replacement of older containers with newer versions.\n\n\nBe updated to include new component security patch releases within one calendar month.\n\n\nSupport institution-specific customizations (XSLTs/Islandora Transforms, Solr, schemas, config.xml, MODS configurations/forms, XACML policies) able to persist through container upgrades and replacements.\n\n\nThese will be stored in a git repository and a mechanism will be provided to reintegrate with the installed Docker containers as part of an upgrade.\n\n\n\n\n\n\nSupport for either institutional hosting or Amazon Web Services (AWS) for the Docker host server.\n\n\nSupport data store flexibility on institutional hosting or an AWS cloud environment.\n\n\nEncompass critical security patches, and full stack software updates, plus dependencies for commonly installed features and all available solution packs.\n\n\nInclude an integrated ISLE/Islandora test suite (expected to utilize TravisCI) to be utilized, developed in conjunction with the Islandora Foundation and the current Islandora release managers\n\n\nInclude documentation that covers end usage, a how-to guide to set up an initial ISLE installation, a how-to guide for an established installation to upgrade containers to the latest versions, and a functional description of mechanics, administrative system management and the process for future ISLE development\n\n\n\n\nISLE Documents\n\n\n\n\nISLE Executive Summary\n (a concise overview in plain English)\n\n\nISLE Specifications\n (based on the older, now closed, \nISLE MVP\n doc)\n\n\nISLE Supporters\n (list of institutions)",
            "title": "About"
        },
        {
            "location": "/about/#project-overview",
            "text": "ISLE public repository: https://github.com/Islandora-Collaboration-Group/ISLE",
            "title": "Project Overview"
        },
        {
            "location": "/about/#what-is-islandora-enterprise-isle",
            "text": "Islandora Enterprise (ISLE) is a new project in development that will address one of the most significant pain-points in Islandora: installation and maintenance.",
            "title": "What is Islandora Enterprise (ISLE)?"
        },
        {
            "location": "/about/#how-does-it-work",
            "text": "ISLE separates an institution\u2019s customizations from core code, and moves that core code into containers that are easily updated, simplifying and largely automating the process of installation and updates/maintenance of Islandora. ISLE also bundles together the best shared modules into a common, production-ready and security-hardened platform.",
            "title": "How does it work?"
        },
        {
            "location": "/about/#why-is-it-needed",
            "text": "Islandora is a powerful digital repository comprised of more than 80 different open-source software libraries. This complex ecosystem makes Islandora difficult and expensive to install, maintain and customize. ISLE lowers the barrier to entry for new schools while allowing existing institutions to reallocate funds towards development or ingestion instead of maintenance.",
            "title": "Why is it needed?"
        },
        {
            "location": "/about/#high-level-objective",
            "text": "To deliver a secure and production-ready Islandora stack (\u201cISLE\u201d) that reduces the involved support time and effort for installation, maintenance and customization.",
            "title": "High Level Objective"
        },
        {
            "location": "/about/#isle-functional-definition",
            "text": "By ISLE, it is meant a system that will:     Function as both an initial installer and maintenance updater for Islandora stacks with up-to-date components suitable for use as staging, development or production environments, as well as for use on personal computers for development work.  Consist of a public, tagged set of Docker containers.  Include use of an orchestration tool such as Docker Composer.  Allow for the replacement of older containers with newer versions.  Be updated to include new component security patch releases within one calendar month.  Support institution-specific customizations (XSLTs/Islandora Transforms, Solr, schemas, config.xml, MODS configurations/forms, XACML policies) able to persist through container upgrades and replacements.  These will be stored in a git repository and a mechanism will be provided to reintegrate with the installed Docker containers as part of an upgrade.    Support for either institutional hosting or Amazon Web Services (AWS) for the Docker host server.  Support data store flexibility on institutional hosting or an AWS cloud environment.  Encompass critical security patches, and full stack software updates, plus dependencies for commonly installed features and all available solution packs.  Include an integrated ISLE/Islandora test suite (expected to utilize TravisCI) to be utilized, developed in conjunction with the Islandora Foundation and the current Islandora release managers  Include documentation that covers end usage, a how-to guide to set up an initial ISLE installation, a how-to guide for an established installation to upgrade containers to the latest versions, and a functional description of mechanics, administrative system management and the process for future ISLE development",
            "title": "ISLE Functional Definition"
        },
        {
            "location": "/about/#isle-documents",
            "text": "ISLE Executive Summary  (a concise overview in plain English)  ISLE Specifications  (based on the older, now closed,  ISLE MVP  doc)  ISLE Supporters  (list of institutions)",
            "title": "ISLE Documents"
        },
        {
            "location": "/glossary/",
            "text": "ISLE Basics\n\n\nIn simple terms, ISLE is a set of resources that allow one to build a fully functioning Islandora system fairly quickly using a system building tool called \nDocker\n\n\nGlossary of Terms\n\n\nSystems\n\n\n\n\n\n\ncronjob\n - The software utility cron is a time-based job scheduler in Unix-like computer operating systems. People who set up and maintain software environments use cron to schedule jobs (commands or shell scripts) to run periodically at fixed times, dates, or intervals. It typically automates system maintenance or administration \nLearn more here\n. This is used by such utilities like \ntmpreaper\n and the Drupal site on the \napache\n container.\n\n\n\n\n\n\ndomain\n - A domain name is your website name for the IP address where Internet users can access your website. A domain name is used for finding and identifying computers on the Internet. Computers use IP addresses, which are a series of numbers. However, it is difficult for humans to remember strings of numbers. Because of this, domain names were developed and used to identify entities on the Internet rather than using IP addresses. \nLearn more about domains here\n or \nhere\n\n\n\n\n\n\ndhparam\n - A script to create this file can be found in the \n/config/isle-newsite-sample/proxy/config/ssl-certs\n directory. This file is used in conjunction with the nginx reverse proxy on the \nproxy\n container to further secure the communication / traffic between the external network (ISLE Host) and the internal ISLE network (other four containers.) The Diffie\u2013Hellman key exchange is an alternative to RSA-based key exchange using an ephemeral but slower Diffie-Hellman algorithm which generates session keys in such a way that only the two parties involved in the communication can obtain them. No one else can, even if they have access to the server's private key. After the session is complete, and both parties destroy the session keys, the only way to decrypt the communication is to break the session keys themselves. This protocol feature is known as Forward Secrecy. \nLearn more about Diffie-Hellman parameters\n\n\n\n\n\n\nenvironment\n - An ISLE environment can be a production, development or staging environment. However ISLE is flexible and can be named anything using any convention of the enduser's desire, one is not forced to do the following. Following a recommended workflow of \"code up, data down\" for Islandora development typically:\n\n\n\n\n\n\na \nproduction\n ISLE environment is a separate ISLE instance running all production (final and tested) potentially public facing code, themes, databases and a full amount of collection data or objects.\n\n\n\n\n\n\na \nstaging\n ISLE environment is a separate ISLE instance running all staging (final and tested) private (non-public) facing code, themes, databases and a full amount of collection data or objects.\n\n\n\n\nstaging\n should be an exact mirror of production (RAM, CPU, storage etc) with the exception of new code to be reviewed and tested internally prior to pushing to production.\n\n\n\n\n\n\n\n\na \ndevelopment\n ISLE environment is a separate ISLE instance running all development (experimental and untested) private (non-public) facing code, themes, databases and a limited amount of collection data or objects.\n\n\n\n\ndevelopment\n should not be a mirror of production and can be greatly limited and underpowered in its resource footprint e.g. less RAM, CPU, HD etc.  \n\n\n\n\n\n\n\n\n\n\n\n\nRoot User\n - the user name or account that by default has access to all commands and files on a Linux or other Unix-like operating system. It is also referred to as the root account, root, root user and the superuser. \nLearn more about root user\n\n\n\n\n\n\nsudo\n - short for \"substitute user do\" and it allows the user to have root permissions when entered in front of a command. \nLearn more about sudo\n\n\n\n\n\n\nSSL certificates\n - files that digitally bind a cryptographic key to an organization\u2019s web domain (URL). When installed on a web server, it can display a green padlock and \nhttps\n appears in the browser path which allow secure connections from a web server to a user's browser. Typically, SSL certificates are used to secure credit card transactions, data transfer and logins, and more. \nLearn more about SSL Certificates\n\n\n\n\n\n\nThese certificates are used in new or migrated ISLE sites by the \napache\n & \nproxy\n containers and copied into their respective new or migrated ISLE config directories.\n\n\n\n\n\n\nRead more about \nSSL Chaining\n\n\n\n\n\n\nIn order to provision a full chain SSL certificate for the \nproxy\n container config directory and usage.\n\n\n\n\n\n\nProvision full chain cert for Nginx link 1: \nhttps://support.comodo.com/index.php?/comodo/Knowledgebase/Article/View/1091/0/certificate-installation--nginx\n\n\n\n\n\n\nProvision full chain cert for Nginx link 2: \nhttps://futurestud.io/tutorials/how-to-configure-nginx-ssl-certifcate-chain\n\n\n\n\n\n\n\n\n\n\nIn order to determine if a \nSSL Certificate ChainFile\n is warranted for your \napache\n container config directory and usage. In most cases one can use the intermediate and root certs separately for the apache container.\n\n\n\n\n\n\n\n\n\n\nRead more about a \nSSL Certificate File\n   e.g. \n/certs/newsite-sample.pem\n used as an example in later documentation. This file is required in all setups.\n\n\n\n\n\n\nRead more about a \nSSL Certificate ChainFile\n e.g. \n/certs/newsite-sample-interm.pem\n used as an example in later documentation. This file may be \noptional\n in some setups but is generally recommended for use by the \napache\n container when available.\n\n\n\n\n\n\nRead more about a \nSSL Certificate Key File\n e.g. \n/certs/newsite-sample-key.pem\n used as an example in later documentation. This file is required in all setups.\n\n\n\n\n\n\n\n\n\n\nSSH\n - is a cryptographic network protocol for operating network services securely over an unsecured network. The best known example application is for remote login to computer systems by users. \nLearn more about SSH\n\n\n\n\n\n\n\n\nSolr\n\n\nPlease note:\n Online versions of the SOLR documentation are for 6.6+ or higher, ISLE currently users version 4.10.4 only.\n\n\nSolr - an open source enterprise search platform with the such features as full-text search, hit highlighting, faceted search, real-time indexing, dynamic clustering, database integration, NoSQL features[1] and rich document (e.g., Word, PDF) handling. Providing distributed search and index replication, Solr is designed for scalability and fault tolerance.\n\n\n\n\n\n\nLearn more about Solr here\n\n\n\n\n\n\nLearn more about using Solr 4.10.4\n\n\n\n\n\n\nCore\n - In Solr, the term core is used to refer to a single index and associated transaction log and configuration files (including the solrconfig.xml and Schema files, among others). Your Solr installation can have multiple cores if needed, which allows you to index data with different structures in the same server, and maintain more control over how your data is presented to different audiences.\n\n\n\n\n\n\nschema.xml\n - Solr organizes its data into documents, which consist of fields. The schema.xml file contains information about these fields, how they are analyzed and then filtered during searches. Different field types can contain different types of data so Solr uses the schema.xml file to determine how to build indexes from these input documents, and how to perform index and query time processing.\n\n\n\n\n\n\nsolr.xml\n - The solr.xml file specifies configuration options for each Solr core, including configuration options for multiple cores. The file also contains mappings for request URLs, and indicates which cores to load when the server starts.\n\n\n\n\n\n\nsolrconfig.xml\n - The solrconfig.xml file is the configuration file with the most parameters affecting Solr itself. In solrconfig.xml, you configure important features such as:\n\n\n\n\n\n\nrequest handlers, which process the requests to Solr, such as requests to add documents to the index or requests to return results for a query listeners\n\n\n\n\n\n\nprocesses that \"listen\" for particular query-related events. Listeners can be used to trigger the execution of special code, such as invoking some common queries to warm-up caches\n\n\n\n\n\n\nand much more...\n\n\n\n\n\n\n\n\n\n\nstopwords.txt\n - The stopwords.txt file is a configuration file that lists the words to be used by the Solr stop filter to be excluded from appearing or being used for searches. Examples of these common words are a large list that can include \"a\", \"the\", or \"is\" which in a page could easily appear hundreds of times or more. When a user performs a search, an algorithm calculates the relevancy of any document in the search index by counting the number of times a word appears in the text being searched and since words like \"the\" have no bearing on a document's actual relevancy; they are then excluded from this ranking algorithm's results.\n\n\n\n\n\n\n\n\nVirtualization\n\n\n\n\n\n\nVM\n: Virtual Machine - A virtual machine is a software computer that, similar to a physical computer, runs an operating system and applications comprised of specification and configuration files backed by the resources of a host (the physical computer).\n\n\n\n\n\n\nVirtualbox\n: \nVirtualBox\n is a general-purpose full virtualizer for x86 hardware, targeted at server, desktop and embedded use.\n\n\n\n\n\n\nVagrant\n: \nVagrant\n provides easy to configure, reproducible, and portable work environments. Vagrant works on Mac, Linux, Windows, and more. Within the ISLE project there is a vagrant folder.\n\n\n\n\n\n\nVagrantfile\n: \nVagrantfile\n used to describe the type of virtual machine required for the ISLE project, and how to configure and provision these virtual  machines. Vagrantfiles are called Vagrantfiles because the actual literal filename for the file is Vagrantfile. Vagrant is meant to run with one Vagrantfile per project which allows endusers to check out the code, run vagrant up, and be on their way. Vagrantfiles are used primarily for use on local workstations and laptops running a Ubuntu or CentOS ISLE Host server.\n\n\n\n\n\n\nDocker for Mac\n: \nDocker for Mac\n is an easy-to-install desktop app for building, debugging and testing Dockerized apps on a Mac. Docker for Mac is a complete development environment deeply integrated with the MacOS Hypervisor framework, networking and filesystem\n\n\n\n\n\n\n\n\nDocker\n\n\n\n\n\n\nDocker\n:  used to build ISLE - \nDocker\n is used to create containers (similar to virtual servers) based on pre-built images. A \"recipe\" file called docker-compose.yml orchestrates the setting up and networking of the containers.\n\n\n\n\n\n\nContainers\n: \nDocker containers\n are lightweight, stand-alone, executable packages of a piece of software that includes everything needed to run it: code, runtime, system tools, system libraries, settings. Each major component of Islandora runs in its own container.\n\n\n\n\n\n\nImages\n: \nDocker images\n - source for the containers - these are built with installed software and updated by ISLE developers and stored on Dockerhub. You can see what software is used in each of the image's Dockerfiles e.g. \napache/Dockerfile\n etc. This will contain additional information on official Docker images used as a Docker \nbase image\n\n\n\n\n\n\nDockerhub\n: \nwebsite / repository\n that provides access to the latest Docker images for the ISLE containers.\n\n\n\n\n\n\nISLE on GitHub\n: the ISLE repository on github.com contains documentation and configuration files necessary to build ISLE.\n\n\n\n\n\n\nHost Server\n: Also called \"the host\" - this is the base computer upon which the entire ISLE stack is built - this can be a virtual machine on a laptop (LOCAL), or\na server you connected to via ssh (REMOTE).\n\n\n\n\n\n\nVolume\n a Docker controlled place to hold data on the local file system. Used to persist data across containers.\n\n\n\n\n\n\nNetwork\n refers to a defined Docker network that is controlled by docker. This has powerful implications in production.\n\n\n\n\nISLE services: \nfedora\n, \nsolr\n, \napache\n, \nmysql\n, and \nproxy\n communicate using an internal private stack network. The service proxy also joins an insecure network that is accessible to the WAN (or for testing \"WAN\" likely means a smaller internal network). Why two networks? Swarms, scaling, replicating.\n\n\n\n\n\n\n\n\n\n\nDocumentation / Development\n\n\n\n\n\n\nTL;DR\n - \"Too long; didn't read.\" - used to indicate a large post, article etc. that has a brief summary of said post, article etc. as it might be too long to read.\n\n\n\n\n\n\nMarkdown\n is a lightweight markup language with plain text formatting syntax. Markdown allows you to write using an easy-to-read, easy-to-write plain text format, then convert it to structurally valid XHTML (or HTML).\n\n\n\n\nhttps://en.wikipedia.org/wiki/Markdown\n\n\nhttps://daringfireball.net/projects/markdown/syntax\n\n\nhttp://kirkstrobeck.github.io/whatismarkdown.com/\n\n\nhttps://help.github.com/categories/writing-on-github/\n\n\n\n\n\n\n\n\nYAML\n (YAML Ain't Markup Language) is a human-readable data serialization language. It is commonly used for configuration files, but could be used in many applications where data is being stored (e.g. debugging output) or transmitted (e.g. document headers).\n\n\n\n\nhttps://en.wikipedia.org/wiki/YAML\n\n\nhttp://yaml.org/\n\n\n\n\n\n\n\n\nCLI / cli\n - A command-line interface or command language interpreter (CLI), also known as command-line user interface, console user interface[1] and character user interface (CUI), is a means of interacting with a computer program where the user (or client) issues commands to the program in the form of successive lines of text (command lines). A program which handles the interface is called a command language interpreter or shell.\n\n\n\n\n\n\nGit\n - A free and open source distributed software version control system designed to handle everything from small to very large projects with speed and efficiency. Git is easy to learn and has a tiny footprint with lightning fast performance.\n\n\n\n\nhttps://git-scm.com/\n\n\nThe ISLE project and its documentation is hosted by an online git service called \nGithub.com\n\n\n\n\n\n\n\n\nGit branches\n - Branching means you diverge from the main line of development and continue to do work without messing with that main line. \nLearn more about branching here",
            "title": "Glossary of Terms and Variables"
        },
        {
            "location": "/glossary/#isle-basics",
            "text": "In simple terms, ISLE is a set of resources that allow one to build a fully functioning Islandora system fairly quickly using a system building tool called  Docker  Glossary of Terms",
            "title": "ISLE Basics"
        },
        {
            "location": "/glossary/#systems",
            "text": "cronjob  - The software utility cron is a time-based job scheduler in Unix-like computer operating systems. People who set up and maintain software environments use cron to schedule jobs (commands or shell scripts) to run periodically at fixed times, dates, or intervals. It typically automates system maintenance or administration  Learn more here . This is used by such utilities like  tmpreaper  and the Drupal site on the  apache  container.    domain  - A domain name is your website name for the IP address where Internet users can access your website. A domain name is used for finding and identifying computers on the Internet. Computers use IP addresses, which are a series of numbers. However, it is difficult for humans to remember strings of numbers. Because of this, domain names were developed and used to identify entities on the Internet rather than using IP addresses.  Learn more about domains here  or  here    dhparam  - A script to create this file can be found in the  /config/isle-newsite-sample/proxy/config/ssl-certs  directory. This file is used in conjunction with the nginx reverse proxy on the  proxy  container to further secure the communication / traffic between the external network (ISLE Host) and the internal ISLE network (other four containers.) The Diffie\u2013Hellman key exchange is an alternative to RSA-based key exchange using an ephemeral but slower Diffie-Hellman algorithm which generates session keys in such a way that only the two parties involved in the communication can obtain them. No one else can, even if they have access to the server's private key. After the session is complete, and both parties destroy the session keys, the only way to decrypt the communication is to break the session keys themselves. This protocol feature is known as Forward Secrecy.  Learn more about Diffie-Hellman parameters    environment  - An ISLE environment can be a production, development or staging environment. However ISLE is flexible and can be named anything using any convention of the enduser's desire, one is not forced to do the following. Following a recommended workflow of \"code up, data down\" for Islandora development typically:    a  production  ISLE environment is a separate ISLE instance running all production (final and tested) potentially public facing code, themes, databases and a full amount of collection data or objects.    a  staging  ISLE environment is a separate ISLE instance running all staging (final and tested) private (non-public) facing code, themes, databases and a full amount of collection data or objects.   staging  should be an exact mirror of production (RAM, CPU, storage etc) with the exception of new code to be reviewed and tested internally prior to pushing to production.     a  development  ISLE environment is a separate ISLE instance running all development (experimental and untested) private (non-public) facing code, themes, databases and a limited amount of collection data or objects.   development  should not be a mirror of production and can be greatly limited and underpowered in its resource footprint e.g. less RAM, CPU, HD etc.         Root User  - the user name or account that by default has access to all commands and files on a Linux or other Unix-like operating system. It is also referred to as the root account, root, root user and the superuser.  Learn more about root user    sudo  - short for \"substitute user do\" and it allows the user to have root permissions when entered in front of a command.  Learn more about sudo    SSL certificates  - files that digitally bind a cryptographic key to an organization\u2019s web domain (URL). When installed on a web server, it can display a green padlock and  https  appears in the browser path which allow secure connections from a web server to a user's browser. Typically, SSL certificates are used to secure credit card transactions, data transfer and logins, and more.  Learn more about SSL Certificates    These certificates are used in new or migrated ISLE sites by the  apache  &  proxy  containers and copied into their respective new or migrated ISLE config directories.    Read more about  SSL Chaining    In order to provision a full chain SSL certificate for the  proxy  container config directory and usage.    Provision full chain cert for Nginx link 1:  https://support.comodo.com/index.php?/comodo/Knowledgebase/Article/View/1091/0/certificate-installation--nginx    Provision full chain cert for Nginx link 2:  https://futurestud.io/tutorials/how-to-configure-nginx-ssl-certifcate-chain      In order to determine if a  SSL Certificate ChainFile  is warranted for your  apache  container config directory and usage. In most cases one can use the intermediate and root certs separately for the apache container.      Read more about a  SSL Certificate File    e.g.  /certs/newsite-sample.pem  used as an example in later documentation. This file is required in all setups.    Read more about a  SSL Certificate ChainFile  e.g.  /certs/newsite-sample-interm.pem  used as an example in later documentation. This file may be  optional  in some setups but is generally recommended for use by the  apache  container when available.    Read more about a  SSL Certificate Key File  e.g.  /certs/newsite-sample-key.pem  used as an example in later documentation. This file is required in all setups.      SSH  - is a cryptographic network protocol for operating network services securely over an unsecured network. The best known example application is for remote login to computer systems by users.  Learn more about SSH",
            "title": "Systems"
        },
        {
            "location": "/glossary/#solr",
            "text": "Please note:  Online versions of the SOLR documentation are for 6.6+ or higher, ISLE currently users version 4.10.4 only.  Solr - an open source enterprise search platform with the such features as full-text search, hit highlighting, faceted search, real-time indexing, dynamic clustering, database integration, NoSQL features[1] and rich document (e.g., Word, PDF) handling. Providing distributed search and index replication, Solr is designed for scalability and fault tolerance.    Learn more about Solr here    Learn more about using Solr 4.10.4    Core  - In Solr, the term core is used to refer to a single index and associated transaction log and configuration files (including the solrconfig.xml and Schema files, among others). Your Solr installation can have multiple cores if needed, which allows you to index data with different structures in the same server, and maintain more control over how your data is presented to different audiences.    schema.xml  - Solr organizes its data into documents, which consist of fields. The schema.xml file contains information about these fields, how they are analyzed and then filtered during searches. Different field types can contain different types of data so Solr uses the schema.xml file to determine how to build indexes from these input documents, and how to perform index and query time processing.    solr.xml  - The solr.xml file specifies configuration options for each Solr core, including configuration options for multiple cores. The file also contains mappings for request URLs, and indicates which cores to load when the server starts.    solrconfig.xml  - The solrconfig.xml file is the configuration file with the most parameters affecting Solr itself. In solrconfig.xml, you configure important features such as:    request handlers, which process the requests to Solr, such as requests to add documents to the index or requests to return results for a query listeners    processes that \"listen\" for particular query-related events. Listeners can be used to trigger the execution of special code, such as invoking some common queries to warm-up caches    and much more...      stopwords.txt  - The stopwords.txt file is a configuration file that lists the words to be used by the Solr stop filter to be excluded from appearing or being used for searches. Examples of these common words are a large list that can include \"a\", \"the\", or \"is\" which in a page could easily appear hundreds of times or more. When a user performs a search, an algorithm calculates the relevancy of any document in the search index by counting the number of times a word appears in the text being searched and since words like \"the\" have no bearing on a document's actual relevancy; they are then excluded from this ranking algorithm's results.",
            "title": "Solr"
        },
        {
            "location": "/glossary/#virtualization",
            "text": "VM : Virtual Machine - A virtual machine is a software computer that, similar to a physical computer, runs an operating system and applications comprised of specification and configuration files backed by the resources of a host (the physical computer).    Virtualbox :  VirtualBox  is a general-purpose full virtualizer for x86 hardware, targeted at server, desktop and embedded use.    Vagrant :  Vagrant  provides easy to configure, reproducible, and portable work environments. Vagrant works on Mac, Linux, Windows, and more. Within the ISLE project there is a vagrant folder.    Vagrantfile :  Vagrantfile  used to describe the type of virtual machine required for the ISLE project, and how to configure and provision these virtual  machines. Vagrantfiles are called Vagrantfiles because the actual literal filename for the file is Vagrantfile. Vagrant is meant to run with one Vagrantfile per project which allows endusers to check out the code, run vagrant up, and be on their way. Vagrantfiles are used primarily for use on local workstations and laptops running a Ubuntu or CentOS ISLE Host server.    Docker for Mac :  Docker for Mac  is an easy-to-install desktop app for building, debugging and testing Dockerized apps on a Mac. Docker for Mac is a complete development environment deeply integrated with the MacOS Hypervisor framework, networking and filesystem",
            "title": "Virtualization"
        },
        {
            "location": "/glossary/#docker",
            "text": "Docker :  used to build ISLE -  Docker  is used to create containers (similar to virtual servers) based on pre-built images. A \"recipe\" file called docker-compose.yml orchestrates the setting up and networking of the containers.    Containers :  Docker containers  are lightweight, stand-alone, executable packages of a piece of software that includes everything needed to run it: code, runtime, system tools, system libraries, settings. Each major component of Islandora runs in its own container.    Images :  Docker images  - source for the containers - these are built with installed software and updated by ISLE developers and stored on Dockerhub. You can see what software is used in each of the image's Dockerfiles e.g.  apache/Dockerfile  etc. This will contain additional information on official Docker images used as a Docker  base image    Dockerhub :  website / repository  that provides access to the latest Docker images for the ISLE containers.    ISLE on GitHub : the ISLE repository on github.com contains documentation and configuration files necessary to build ISLE.    Host Server : Also called \"the host\" - this is the base computer upon which the entire ISLE stack is built - this can be a virtual machine on a laptop (LOCAL), or\na server you connected to via ssh (REMOTE).    Volume  a Docker controlled place to hold data on the local file system. Used to persist data across containers.    Network  refers to a defined Docker network that is controlled by docker. This has powerful implications in production.   ISLE services:  fedora ,  solr ,  apache ,  mysql , and  proxy  communicate using an internal private stack network. The service proxy also joins an insecure network that is accessible to the WAN (or for testing \"WAN\" likely means a smaller internal network). Why two networks? Swarms, scaling, replicating.",
            "title": "Docker"
        },
        {
            "location": "/glossary/#documentation-development",
            "text": "TL;DR  - \"Too long; didn't read.\" - used to indicate a large post, article etc. that has a brief summary of said post, article etc. as it might be too long to read.    Markdown  is a lightweight markup language with plain text formatting syntax. Markdown allows you to write using an easy-to-read, easy-to-write plain text format, then convert it to structurally valid XHTML (or HTML).   https://en.wikipedia.org/wiki/Markdown  https://daringfireball.net/projects/markdown/syntax  http://kirkstrobeck.github.io/whatismarkdown.com/  https://help.github.com/categories/writing-on-github/     YAML  (YAML Ain't Markup Language) is a human-readable data serialization language. It is commonly used for configuration files, but could be used in many applications where data is being stored (e.g. debugging output) or transmitted (e.g. document headers).   https://en.wikipedia.org/wiki/YAML  http://yaml.org/     CLI / cli  - A command-line interface or command language interpreter (CLI), also known as command-line user interface, console user interface[1] and character user interface (CUI), is a means of interacting with a computer program where the user (or client) issues commands to the program in the form of successive lines of text (command lines). A program which handles the interface is called a command language interpreter or shell.    Git  - A free and open source distributed software version control system designed to handle everything from small to very large projects with speed and efficiency. Git is easy to learn and has a tiny footprint with lightning fast performance.   https://git-scm.com/  The ISLE project and its documentation is hosted by an online git service called  Github.com     Git branches  - Branching means you diverge from the main line of development and continue to do work without messing with that main line.  Learn more about branching here",
            "title": "Documentation / Development"
        },
        {
            "location": "/install_start_here/",
            "text": "Please select from one of the following four possible ISLE use cases.\n\n\nI would like to:\n\n\n\n\n\n\nTest ISLE\n\n\n\n\n\n\nSetup a new ISLE site\n\n\n\n\n\n\nMigrate to ISLE\n\n\n\n\n\n\nBuild ISLE (Maintainer)\n\n\n\n\n\n\n\n\nTest ISLE\n\n\nThe recommended non-production environments for using the prebuilt ISLE test site (\nisle.localdomain\n) are with the following type of laptops or workstations.\n\n\nPlease review the \nISLE Host Server OS requirements\n prior to any installation.\n\n\nPlease note:\n There is a \nGlossary\n with relevant terms to help guide installation.\n\n\nPlease follow the columns below from left to right, to select:\n\n\n\n\n\n\nDesktop OS\n is your laptop or desktop running a particular operating system \n(OS)\n\n\n\n\n\n\nISLE Host Server Install instructions\n is what you'll follow to host (\nrun\n) ISLE. This may involve additional steps for installing a virtualized OS (CentOS or Ubuntu).\n\n\n\n\n\n\nInstall ISLE Host Server Dependencies\n is the software you may need to run ISLE on a \nHost Platform\n whether you use CentOS or Ubuntu as the ISLE Host Server.\n\n\n\n\n\n\nISLE install instructions\n \n(for all OSes and Platform types)\n\n\n\n\n\n\nPlease note:\n\n\n\n\n\n\nDepending on the configuration you choose, you may have more or less instructions to follow.\n\n\n\n\n\n\nThe operating systems displayed below are the minimum supported. Do not go lower than what is recommended.\n\n\n\n\n\n\n\n\n\n\n\n\nDesktop OS\n\n\nISLE Host Server Install instructions\n\n\nInstall ISLE Host Server Dependencies\n\n\nISLE install instructions\n\n\n\n\n\n\n\n\n\n\nMacOS High Sierra\n\n\nDocker for Mac\n\n\nSkip to the next column\n\n\nTest ISLE\n\n\n\n\n\n\nMacOS High Sierra\n\n\nVagrant\n\n\nOn CentOS\n\n\nTest ISLE\n\n\n\n\n\n\n\n\n\n\nOn Ubuntu\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWindows 10\n\n\nDocker for Windows\n\n\nSkip to the next column\n\n\nTest ISLE\n\n\n\n\n\n\n\n\n\n\nCreate a new ISLE site or site(s)\n\n\nThe recommended environments for setting up a new ISLE site using a single or multiple ISLE environment setup (e.g. an ISLE host server running production, staging or development versions of one site) are with the following type of servers. (\nnot desktop or workstation\n)\n\n\nTypically new sites are used in production, staging or shared development environments.\n\n\n\n\n\n\nIf you are only going to setup one ISLE site within a single environment (e.g. production only) or run all of your ISLE environments on separate ISLE host servers or VMs please using the: \nNew ISLE Site - Single Env\n\n\n\n\n\n\nIf you are going to setup multiple ISLE sites using multiple environments (e.g. dev, stage, and prod etc.) on one ISLE Host server or VM please using the: \nNew ISLE Sites - Multi Envs\n\n\n\n\nPlease note: setting up multiple ISLE sites and environments on one ISLE host server will require adequate resources.\n\n\nA good rule of thumb is to take the specifications outlined in the \nISLE Host Server OS requirements\n and divide by three as an initial concept. Bear in mind, that any \ndev\n environment doesn't need as much resource but any potential \nstage\n and \nprod\n environments should mirror each other in resource usage and setup.\n\n\n\n\n\n\n\n\nPlease review the \nISLE Host Server OS requirements\n prior to any installation.\n\n\nPlease note:\n There is a \nGlossary\n with relevant terms to help guide installation.\n\n\nPlease follow the columns below from left to right, to select:\n\n\n\n\nHost Platform Install instructions\n is how you can setup your cloud hosting or server environment for an ISLE Host Server.\n\n\nInstall ISLE Host Server Dependencies\n is the software you may need to run ISLE on a \nHost Platform\n whether you use CentOS or Ubuntu as the ISLE Host Server.\n\n\nISLE install instructions\n (\nfor all OSes and Platform types\n)\n\n\n\n\nPlease note:\n\n\n\n\n\n\nDepending on the configuration you choose, you may have more or less instructions to follow.\n\n\n\n\n\n\nThe operating systems displayed below are the minimum supported. Do not go lower than what is recommended.\n\n\n\n\n\n\n\n\n\n\n\n\nHosting Platform\n\n\nInstall ISLE Host Server Dependencies\n\n\nISLE new site(s) install instructions\n\n\n\n\n\n\n\n\n\n\nAmazon (AWS)\n\n\nOn CentOS\n\n\nNew ISLE Site - Single Env\n\n\n\n\n\n\n\n\nOn Ubuntu\n\n\nNew ISLE Sites - Multi Env\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGoogle (GCP)\n\n\nOn CentOS\n\n\nNew ISLE Site - Single Env\n\n\n\n\n\n\n\n\nOn Ubuntu\n\n\nNew ISLE Sites - Multi Env\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nServer / VM\n\n\nOn CentOS\n\n\nNew ISLE Site - Single Env\n\n\n\n\n\n\n\n\nOn Ubuntu\n\n\nNew ISLE Sites - Multi Env\n\n\n\n\n\n\n\n\n\n\nMigrate to ISLE\n\n\nThe recommended environments for migrating a current production Islandora site to a new ISLE environment are with the following type of servers. (\nnot desktop or workstation\n)\n\n\nTypically migrated sites are used in production, staging or shared development environments.\n\n\nPlease review the \nISLE Host Server OS requirements\n prior to any installation.\n\n\nPlease note:\n There is a \nGlossary\n with relevant terms to help guide installation.\n\n\nPlease follow the columns below from left to right, to select:\n\n\n\n\nHost Platform Install instructions\n is how you can setup your cloud hosting or server environment for an ISLE Host Server.\n\n\nInstall ISLE Host Server Dependencies\n is the software you may need to run ISLE on a \nHost Platform\n whether you use CentOS or Ubuntu as the ISLE Host Server.\n\n\nISLE install instructions\n (\nfor all OSes and Platform types\n)\n\n\n\n\nPlease note:\n\n\n\n\n\n\nDepending on the configuration you choose, you may have more or less instructions to follow.\n\n\n\n\n\n\nThe operating systems displayed below are the minimum supported. Do not go lower than what is recommended.\n\n\n\n\n\n\n\n\n\n\n\n\nHosting Platform\n\n\nInstall ISLE Host Server Dependencies\n\n\nISLE install instructions\n\n\n\n\n\n\n\n\n\n\nAmazon (AWS)\n\n\nOn CentOS\n\n\nMigrate to ISLE\n\n\n\n\n\n\n\n\nOn Ubuntu\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGoogle (GCP)\n\n\nOn CentOS\n\n\nMigrate to ISLE\n\n\n\n\n\n\n\n\nOn Ubuntu\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nServer / VM\n\n\nOn CentOS\n\n\nMigrate to ISLE\n\n\n\n\n\n\n\n\nOn Ubuntu\n\n\n\n\n\n\n\n\n\n\nBuild ISLE (Maintainer)\n\n\nThe recommended environments for building ISLE images are with the following types of laptop or workstation.\n\n\nPlease review the \nISLE Host Server OS requirements\n prior to any installation.\n\n\nPlease note:\n There is a \nGlossary\n with relevant terms to help guide installation.\n\n\nPlease follow the columns below from left to right, to select:\n\n\n\n\n\n\nDesktop OS\n is your laptop or desktop running a particular operating system \n(OS)\n\n\n\n\n\n\nISLE Host Server Install instructions\n is what you'll follow to host (\nrun\n) ISLE. This may involve additional steps for installing a virtualized OS (CentOS or Ubuntu).\n\n\n\n\n\n\nInstall ISLE Host Server Dependencies\n is the software you may need to run ISLE on a \nHost Platform\n whether you use CentOS or Ubuntu as the ISLE Host Server.\n\n\n\n\n\n\nISLE install instructions\n \n(for all OSes and Platform types)\n\n\n\n\n\n\nPlease note:\n\n\n\n\n\n\nDepending on the configuration you choose, you may have more or less instructions to follow.\n\n\n\n\n\n\nThe operating systems displayed below are the minimum supported. Do not go lower than what is recommended.\n\n\n\n\n\n\n\n\n\n\n\n\nDesktop OS\n\n\nISLE Host Server Install instructions\n\n\nInstall ISLE Host Server Dependencies\n\n\nISLE install instructions\n\n\n\n\n\n\n\n\n\n\nMacOS High Sierra\n\n\nDocker for Mac\n\n\nSkip to the next column\n\n\nBuild ISLE\n\n\n\n\n\n\nMacOS High Sierra\n\n\nVagrant\n\n\nOn CentOS\n\n\nBuild ISLE\n\n\n\n\n\n\n\n\n\n\nOn Ubuntu\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWindows 10\n\n\nDocker for Windows\n\n\nSkip to the next column\n\n\nBuild ISLE",
            "title": "Installation Start Here"
        },
        {
            "location": "/install_start_here/#test-isle",
            "text": "The recommended non-production environments for using the prebuilt ISLE test site ( isle.localdomain ) are with the following type of laptops or workstations.  Please review the  ISLE Host Server OS requirements  prior to any installation.  Please note:  There is a  Glossary  with relevant terms to help guide installation.  Please follow the columns below from left to right, to select:    Desktop OS  is your laptop or desktop running a particular operating system  (OS)    ISLE Host Server Install instructions  is what you'll follow to host ( run ) ISLE. This may involve additional steps for installing a virtualized OS (CentOS or Ubuntu).    Install ISLE Host Server Dependencies  is the software you may need to run ISLE on a  Host Platform  whether you use CentOS or Ubuntu as the ISLE Host Server.    ISLE install instructions   (for all OSes and Platform types)    Please note:    Depending on the configuration you choose, you may have more or less instructions to follow.    The operating systems displayed below are the minimum supported. Do not go lower than what is recommended.       Desktop OS  ISLE Host Server Install instructions  Install ISLE Host Server Dependencies  ISLE install instructions      MacOS High Sierra  Docker for Mac  Skip to the next column  Test ISLE    MacOS High Sierra  Vagrant  On CentOS  Test ISLE      On Ubuntu           Windows 10  Docker for Windows  Skip to the next column  Test ISLE",
            "title": "Test ISLE"
        },
        {
            "location": "/install_start_here/#create-a-new-isle-site-or-sites",
            "text": "The recommended environments for setting up a new ISLE site using a single or multiple ISLE environment setup (e.g. an ISLE host server running production, staging or development versions of one site) are with the following type of servers. ( not desktop or workstation )  Typically new sites are used in production, staging or shared development environments.    If you are only going to setup one ISLE site within a single environment (e.g. production only) or run all of your ISLE environments on separate ISLE host servers or VMs please using the:  New ISLE Site - Single Env    If you are going to setup multiple ISLE sites using multiple environments (e.g. dev, stage, and prod etc.) on one ISLE Host server or VM please using the:  New ISLE Sites - Multi Envs   Please note: setting up multiple ISLE sites and environments on one ISLE host server will require adequate resources.  A good rule of thumb is to take the specifications outlined in the  ISLE Host Server OS requirements  and divide by three as an initial concept. Bear in mind, that any  dev  environment doesn't need as much resource but any potential  stage  and  prod  environments should mirror each other in resource usage and setup.     Please review the  ISLE Host Server OS requirements  prior to any installation.  Please note:  There is a  Glossary  with relevant terms to help guide installation.  Please follow the columns below from left to right, to select:   Host Platform Install instructions  is how you can setup your cloud hosting or server environment for an ISLE Host Server.  Install ISLE Host Server Dependencies  is the software you may need to run ISLE on a  Host Platform  whether you use CentOS or Ubuntu as the ISLE Host Server.  ISLE install instructions  ( for all OSes and Platform types )   Please note:    Depending on the configuration you choose, you may have more or less instructions to follow.    The operating systems displayed below are the minimum supported. Do not go lower than what is recommended.       Hosting Platform  Install ISLE Host Server Dependencies  ISLE new site(s) install instructions      Amazon (AWS)  On CentOS  New ISLE Site - Single Env     On Ubuntu  New ISLE Sites - Multi Env         Google (GCP)  On CentOS  New ISLE Site - Single Env     On Ubuntu  New ISLE Sites - Multi Env         Server / VM  On CentOS  New ISLE Site - Single Env     On Ubuntu  New ISLE Sites - Multi Env",
            "title": "Create a new ISLE site or site(s)"
        },
        {
            "location": "/install_start_here/#migrate-to-isle",
            "text": "The recommended environments for migrating a current production Islandora site to a new ISLE environment are with the following type of servers. ( not desktop or workstation )  Typically migrated sites are used in production, staging or shared development environments.  Please review the  ISLE Host Server OS requirements  prior to any installation.  Please note:  There is a  Glossary  with relevant terms to help guide installation.  Please follow the columns below from left to right, to select:   Host Platform Install instructions  is how you can setup your cloud hosting or server environment for an ISLE Host Server.  Install ISLE Host Server Dependencies  is the software you may need to run ISLE on a  Host Platform  whether you use CentOS or Ubuntu as the ISLE Host Server.  ISLE install instructions  ( for all OSes and Platform types )   Please note:    Depending on the configuration you choose, you may have more or less instructions to follow.    The operating systems displayed below are the minimum supported. Do not go lower than what is recommended.       Hosting Platform  Install ISLE Host Server Dependencies  ISLE install instructions      Amazon (AWS)  On CentOS  Migrate to ISLE     On Ubuntu          Google (GCP)  On CentOS  Migrate to ISLE     On Ubuntu          Server / VM  On CentOS  Migrate to ISLE     On Ubuntu",
            "title": "Migrate to ISLE"
        },
        {
            "location": "/install_start_here/#build-isle-maintainer",
            "text": "The recommended environments for building ISLE images are with the following types of laptop or workstation.  Please review the  ISLE Host Server OS requirements  prior to any installation.  Please note:  There is a  Glossary  with relevant terms to help guide installation.  Please follow the columns below from left to right, to select:    Desktop OS  is your laptop or desktop running a particular operating system  (OS)    ISLE Host Server Install instructions  is what you'll follow to host ( run ) ISLE. This may involve additional steps for installing a virtualized OS (CentOS or Ubuntu).    Install ISLE Host Server Dependencies  is the software you may need to run ISLE on a  Host Platform  whether you use CentOS or Ubuntu as the ISLE Host Server.    ISLE install instructions   (for all OSes and Platform types)    Please note:    Depending on the configuration you choose, you may have more or less instructions to follow.    The operating systems displayed below are the minimum supported. Do not go lower than what is recommended.       Desktop OS  ISLE Host Server Install instructions  Install ISLE Host Server Dependencies  ISLE install instructions      MacOS High Sierra  Docker for Mac  Skip to the next column  Build ISLE    MacOS High Sierra  Vagrant  On CentOS  Build ISLE      On Ubuntu           Windows 10  Docker for Windows  Skip to the next column  Build ISLE",
            "title": "Build ISLE (Maintainer)"
        },
        {
            "location": "/01_installation_host_server/host_server_system_specifications/",
            "text": "ISLE will (using Docker) install and manage a set of virtual \"servers\" (containers) that will run all the components of Islandora. Docker requires a host server upon which to do this.\n\n\nThis \nhost server\n can be a virtual machine (VM) on your desktop or on the cloud, it can also be a physical server. An SSH connection with a user that has root or admin privileges is necessary. If an IT department is doing this initial setup, see below for sample language to use in requesting the server.\n\n\nThe basic requirements for this host machine vary depending on intended use. A VM on a desktop computer will be sufficient to set up a test or development instance.\n\n\nSpecifications for Desktop or Laptops\n\n\nDesktop: A laptop or workstation running Docker, Docker Compose and ISLE.\n\n\n\n\n8 - 16 GB RAM is recommended\n\n\nMinimum 1 - 2 CPUs (w/ 1 - 4 cores each)  \n\n\n128 - 500GB for the Desktop OS\n\n\nSufficient HD space to hold a test collection\n\n\nMacOS High Sierra 10.13.x\n\n\nWindows 10 Home or Pro\n\n\nUbuntu 16.04+ Desktop\n\n\n\n\nSpecifications for Production Servers\n\n\nHowever, if the intent is a new or migrated site that will see actual production use then it is recommended that increased processor speed, memory, and storage space will be required.\n\n\nServer Specifications\n\n\n\n\nUbuntu 16.04 LTS or CentOS 7.x running on a server or VM\n\n\nMinimum 2 CPU's (w/ 1 - 4 cores each)\n\n\nSufficient HD or attached storage to hold your collection\n\n\n30 - 50GB for the Server OS & overhead\n\n\n16 - 32 GB of RAM is recommended\n\n\n\n\n* \nUbuntu 16.04 and CentOS 7.x have been tested with ISLE - \ncurrently RHELS does not support Docker Community Edition (CE), see Note about Red Hat section below\n\n\nNote about Red Hat (warning)\n\n\nAt this time, Red Hat Enterprise Server 7 has been tested but there is a distinct lack of clarity as to what version of Docker is running and/or is supported.\n\n\nIt appears that unless a license for Docker EE is purchased, the project owners do not recommend using Red Hat at this time due to unanticipated cost.\n\n\nCurrently ISLE has only been built, tested and supported using the free edition of Docker Community Edition (\ndocker-ce\n).\n\n\n\n\n\n\nChallenge 1:\n \nDocker Community Edition not clearly supported on or by Red Hat\n\n\n\n\nhttps://docs.docker.com/install/\n (see matrix)\n\n\nhttps://www.docker.com/community-edition\n\n\n\n\n\n\n\n\nChallenge 2:\n \nRed Hat seems to direct endusers to pay for Docker EE license instead of using Docker Community Edition\n\n\n\n\nhttps://www.docker.com/enterprise-edition\n\n\n\n\n\n\n\n\nChallenge 3:\n \nChoices for alternate free Docker versions supported by Red Hat are not clear in features comparison or support roadmap.\n\n\n\n\nhttps://docs.docker.com/release-notes/docker-ce/\n\n\nhttps://access.redhat.com/articles/2317361\n\n\n\n\n\n\n\n\n\n\nNote about Production Host Storage (optional)\n\n\nWhile \nISLE\n and its configs, images, software etc are typically cloned to \n/opt/ISLE\n and controlled from that location some data can be stored in \n/var/docker\n.\n\n\nPlease ensure that both the host server's \n/opt\n and \n/var\n directories are on disks, mounts or storage systems that can accommodate at least 200 GB in size. In some cases, institutions during the Alpha testing of ISLE increased the size of the host server's \nopt\n directory by:\n\n\n\n\nPotentially increasing the overall size of the host server VM beyond 200GB\n\n\nAttaching separate storage capacity directly to the \n/opt\n and \n/var\n directories\n\n\n\n\nSample Request to an IT department (optional)\n\n\nDear IT Dept,\n\n\nOur digital collections team will be testing a Docker implementation of the Islandora digital repository system called \nISLE\n.\n\n\nWe require access to a server meeting the following specifications:\n\n\n\n\nUbuntu 16.04 LTS or CentOS 7.x running on a server or VM\n\n\nMinimum 2 CPU's (w/1-4 cores each)\n\n\nSufficient HD or attached storage to hold your collection\n\n\n30 - 50GB for the Server OS & overhead\n\n\n16 - 32 GB of RAM\n\n\n\n\nOur team will either need root access, or a user called \"islandora\" that has sudo privileges.\n\n\nWe will need the following software which we can install following the instructions at \nthis link\n\n\n\n\nGit, Docker, Docker-Compose, openssl, git, htop, ntp, curl\n\n\n\n\nThank you,\n\nRequesting Dept.",
            "title": "Host Server Specifications"
        },
        {
            "location": "/01_installation_host_server/host_server_system_specifications/#specifications-for-desktop-or-laptops",
            "text": "Desktop: A laptop or workstation running Docker, Docker Compose and ISLE.   8 - 16 GB RAM is recommended  Minimum 1 - 2 CPUs (w/ 1 - 4 cores each)    128 - 500GB for the Desktop OS  Sufficient HD space to hold a test collection  MacOS High Sierra 10.13.x  Windows 10 Home or Pro  Ubuntu 16.04+ Desktop",
            "title": "Specifications for Desktop or Laptops"
        },
        {
            "location": "/01_installation_host_server/host_server_system_specifications/#specifications-for-production-servers",
            "text": "However, if the intent is a new or migrated site that will see actual production use then it is recommended that increased processor speed, memory, and storage space will be required.  Server Specifications   Ubuntu 16.04 LTS or CentOS 7.x running on a server or VM  Minimum 2 CPU's (w/ 1 - 4 cores each)  Sufficient HD or attached storage to hold your collection  30 - 50GB for the Server OS & overhead  16 - 32 GB of RAM is recommended   *  Ubuntu 16.04 and CentOS 7.x have been tested with ISLE -  currently RHELS does not support Docker Community Edition (CE), see Note about Red Hat section below",
            "title": "Specifications for Production Servers"
        },
        {
            "location": "/01_installation_host_server/host_server_system_specifications/#note-about-red-hat-warning",
            "text": "At this time, Red Hat Enterprise Server 7 has been tested but there is a distinct lack of clarity as to what version of Docker is running and/or is supported.  It appears that unless a license for Docker EE is purchased, the project owners do not recommend using Red Hat at this time due to unanticipated cost.  Currently ISLE has only been built, tested and supported using the free edition of Docker Community Edition ( docker-ce ).    Challenge 1:   Docker Community Edition not clearly supported on or by Red Hat   https://docs.docker.com/install/  (see matrix)  https://www.docker.com/community-edition     Challenge 2:   Red Hat seems to direct endusers to pay for Docker EE license instead of using Docker Community Edition   https://www.docker.com/enterprise-edition     Challenge 3:   Choices for alternate free Docker versions supported by Red Hat are not clear in features comparison or support roadmap.   https://docs.docker.com/release-notes/docker-ce/  https://access.redhat.com/articles/2317361",
            "title": "Note about Red Hat (warning)"
        },
        {
            "location": "/01_installation_host_server/host_server_system_specifications/#note-about-production-host-storage-optional",
            "text": "While  ISLE  and its configs, images, software etc are typically cloned to  /opt/ISLE  and controlled from that location some data can be stored in  /var/docker .  Please ensure that both the host server's  /opt  and  /var  directories are on disks, mounts or storage systems that can accommodate at least 200 GB in size. In some cases, institutions during the Alpha testing of ISLE increased the size of the host server's  opt  directory by:   Potentially increasing the overall size of the host server VM beyond 200GB  Attaching separate storage capacity directly to the  /opt  and  /var  directories",
            "title": "Note about Production Host Storage (optional)"
        },
        {
            "location": "/01_installation_host_server/host_server_system_specifications/#sample-request-to-an-it-department-optional",
            "text": "Dear IT Dept,  Our digital collections team will be testing a Docker implementation of the Islandora digital repository system called  ISLE .  We require access to a server meeting the following specifications:   Ubuntu 16.04 LTS or CentOS 7.x running on a server or VM  Minimum 2 CPU's (w/1-4 cores each)  Sufficient HD or attached storage to hold your collection  30 - 50GB for the Server OS & overhead  16 - 32 GB of RAM   Our team will either need root access, or a user called \"islandora\" that has sudo privileges.  We will need the following software which we can install following the instructions at  this link   Git, Docker, Docker-Compose, openssl, git, htop, ntp, curl   Thank you, \nRequesting Dept.",
            "title": "Sample Request to an IT department (optional)"
        },
        {
            "location": "/01_installation_host_server/install_on_centos/",
            "text": "CentOS\n server version to use: \n7.x+\n\n\nThis is a detailed operating system-specific guide including commands to copy/paste for all the software you may need to run ISLE on a \nCentOS\n ISLE Host Server.\n\n\nCalled \"the host\" - this is the base computer upon which the entire ISLE stack is built - this can be a virtual machine on a laptop or a server you connected to via ssh.\n\n\nThe following setup will be the same if you are setting up an ISLE host server:\n\n\n\n\n\n\non your laptop / desktop using Vagrant or Virtualbox VM for the test site (isle.localdomain).\n\n\n\n\n\n\nor using a physical server or cloud hosted setup e.g. (AWS or GCP) to run an ISLE Host server for a new site or a migrated site.\n\n\n\n\n\n\nIn all these cases you'll be establishing a CentOS server with the following dependencies below.\n\n\nInstall process overview\n\n\n\n\nInstall server prerequisites\n\n\nInstall Docker\n\n\nCreate islandora user and group\n\n\nSetup SSH access for islandora user on VM / server (Part 1)\n\n\n(optional) Create ssh keys on enduser's laptop / workstation\n\n\n\n\n\n\nSetup SSH access for islandora user on VM / server (Part 2)\n\n\n(optional) Create ssh keys on enduser's laptop / workstation\n\n\n\n\n\n\nCreate Docker group\n\n\nAdd islandora user to wheel group\n\n\nInstall Docker-Compose\n\n\n(optional) Alternative install method for Docker-compose\n\n\n\n\n\n\nStart up and enable Docker\n\n\nClone ISLE repository\n\n\nNext steps\n\n\n\n\nStep 1: Install server prerequisites\n\n\n\n\n\n\nOpen a terminal on your local laptop or workstation and ssh to the CentOS server / VM:\n\n\n\n\n\n\nYou need to become root first\n\n\n\n\nsudo su\n  \n\n\n\n\n\n\n\n\nAdd the RHEL/CENTOS epel-release package repository first\n\n\n\n\nyum install -y epel-release\n\n\n\n\n\n\n\n\nInstall the following:\n\n\n\n\nyum install -y openssl git htop ntp wget curl nano\n\n\n\n\n\n\n\n\nStep 2: Install Docker\n\n\n\n\n\n\nyum install -y yum-utils device-mapper-persistent-data lvm2\n\n\n\n\n\n\nyum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n\n\n\n\n\n\nyum install -y docker-ce\n\n\n\n\n\n\nStep 3: Create islandora user and group\n\n\n\n\n\n\ngroupadd -g 10000 islandora\n\n\n\n\n\n\nuseradd -m -d /home/islandora -s /bin/bash -u 10000 -g 10000 islandora\n\n\n\n\n\n\npasswd <somepassword>\n\n\n\n\n\n\nPlease change \n<somepassword>\n to something else.\n\n\n\n\n\n\nEnter \n<somepassword>\n for password\n\n\n\n\n\n\nRe-enter \n<somepassword>\n to confirm\n\n\n\n\n\n\n\n\n\n\nAdd islandora user to sudoers\n\n\n\n\necho \"islandora ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/islandora\n\n\n\n\n\n\n\n\nStep 4a: Setup SSH access for islandora user on VM / server (Part 1)\n\n\nCreate a ssh key for the islandora user \n(this will also enable us to push code out to a repository later)\n\n\n\n\n\n\nmkdir -p /home/islandora/.ssh\n\n\n\n\n\n\nchmod -Rv 700 /home/islandora/.ssh\n\n\n\n\n\n\nchown -Rv islandora:islandora /home/islandora/.ssh\n\n\n\n\n\n\ncd /home/islandora/.ssh\n\n\n\n\n\n\nsu islandora\n\n\n\n\n\n\nssh-keygen -t RSA -b 4096 -C \"ISLE Islandora\" -f /home/islandora/.ssh/\n  \n\n\n\n\nFollow the prompts to save your key.  You do not need to specify a password to secure your key in development;  in production you must protect your keys with strong passwords.\n\n\nHit the \nEnter / Return\n key at all of the prompts.\n\n\nThere should be no need to enter a file name. \n(However some users may find when prompted they may need to enter: \nid_rsa\n)\n\n\n\n\n\n\nDo not enter a passphrase when asked twice, simply hit the \nEnter / Return\n key and move on.\n\n\n\n\n\n\n\n\nExample Output\n\n\nssh-keygen -t RSA -b 4096 -C \"ISLE Islandora\" -f /home/islandora/.ssh/\n\n   Generating public/private rsa key pair.\n\n   Enter file in which to save the key (/home/islandora/.ssh/id_rsa):\n\n   Enter passphrase (empty for no passphrase):\n\n   Enter same passphrase again:\n\n   Your identification has been saved in /home/islandora/.ssh/id_rsa.\n\n   Your public key has been saved in /home/islandora/.ssh/id_rsa.pub.\n\n   The key fingerprint is:\n   SHA256:rTCG6wCablwrIkQTGcrcaChmTZEYAwNrNBLNxLIds+I islandora@isle-host-macos\n   The key's randomart image is:\n   +---[RSA 2048]----+\n   |O%*oo            |\n   |O*&.             |\n   |=%.*             |\n   |Ooo  .   .       |\n   |+.. . + S .      |\n   |.E . o o .       |\n   |= o o   .        |\n   |++ +             |\n   |+.. .            |\n   +----[SHA256]-----+\n\n\n\n\n\n\n\n\nIf you would like to login to the host machine using key-pairs, please ensure the following first.\n\n\n\n\n\n\nCheck if your laptop / workstation has existing ssh keys. If you do not know, use the \nCreate ssh keys on enduser's laptop / workstation (optional)\n section below before advancing to \nPart 2\n.\n\n\n\n\n\n\nIf you already have existing SSH keys, move onto the \nSetup SSH access for islandora user on VM / server (Part 2)\n section.\n\n\n\n\n\n\n\n\n(optional) Create ssh keys on enduser's laptop / workstation\n\n\nSome endusers may or may not have created local SSH keys on their laptop or workstation prior to the next step. Please use the instructions below if this is the case.\n\n\n\n\n\n\nCreating ssh keys on MacOS High Sierra\n\n\n\n\n\n\nCreating ssh keys on Windows 10\n\n\n\n\n\n\nCreating ssh keys on Ubuntu Desktop 16.04\n\n\n\n\n\n\n\n\nStep 4b: Setup SSH access for islandora user on VM / server (Part 2)\n\n\n\n\n\n\nIf you would like to login to the host machine using key-pairs, continued from \n(Part 1)\n. Copy in the existing ssh key from the enduser's laptop /workstation. This is entirely dependent on the local computer being used to connect to the Islandora server. In some cases, cloud hosting based servers e.g. Google Cloud Platform may have different requirements. This will allow key based ssh access for the enduser.\n\n\n\n\n\n\nEnduser's laptop /workstation running \nMacOS example\n:\n\n\n* Open a terminal and enter: `cat /Users/enduser/.ssh/id_rsa.pub` & copy the key to the clipboard. (_On the enduser laptop not the VM_)\n\n\n\n\n\n\n\nEnduser's laptop /workstation running \nWindows example\n:\n\n\n\n\n\n\nOpen the Command Prompt application and enter \nnotepad C:\\Users\\enduser\\.ssh\\id_rsa.pub\n & copy the key to the clipboard. (\nOn the enduser laptop not the VM\n)\n\n\n\n\n\n\n\n\n\n\nEnduser's laptop /workstation running \nUbuntu Desktop example\n:\n\n\n* Open a terminal and enter: `cat /home/enduser/.ssh/id_rsa.pub` & copy the key to the clipboard. (_On the enduser laptop not the VM_)\n\n\n\n\n\n\n\n\n\n\n\nFor all OS types, copy and paste this value exactly into the \n/home/islandora/.ssh/authorized_keys\n file using the \nnano\n tool on the CentOS VM (\nOn the CentOS VM not the enduser laptop\n)\n\n\n\n\nnano /home/islandora/.ssh/authorized_keys\n\n\nHit the \nCntrl\n key and then the \no\n key to write to the file.\n\n\n\n\nHi the \nCntrl\n key and then the \nx\n key to exit the file.\n\n\n\n\n\n\nExit out of the ssh session from the host server as the root user \nexit\n\n\n\n\n\n\nssh back in as \nislandora\n to test if that process worked.\n\n\n\n\n\n\nExample\n\n\n   ssh islandora@isle-host-server.com\n\n   -or-\n\n   ssh islandora@10.10.10.130\n\n\n\n\n\n\n(optional) Note for Vagrant and local VM users only\n\n\nFor local VM and Vagrant users only, not steps to follow in a production environment\n\n\nShould the enduser have difficulty adding the .ssh key for the islandora user or if the enduser doesn't even have a local id_rsa.pub file, that step above can be avoided.\n\n\nSimply continue to access the local ISLE Host VM via opening a terminal on the enduser laptop or workstation.\n\n\n\n\n\n\ncd /pathto/ISLE/vagrant/\n\n\n\n\n\n\nvagrant ssh\n\n\n\n\n\n\nsudo su\n\n\n\n\n\n\nsu islandora\n\n\n\n\n\n\nThis process will switch one to islandora with out having to use a password.\n\n\n\n\nStep 5: Create Docker group\n\n\n\n\n\n\nOpen a terminal and ssh back into the CentOS Host Server/VM as the \nislandora\n user and \nbecome root again.\n\n\n\n\nsudo su\n  \n\n\n\n\n\n\n\n\nCreate the Docker group. (\nYou may receive a notice that group docker already exist. This fine. Proceed with instructions.\n)\n\n\n\n\ngroupadd docker\n  \n\n\n\n\nAdd the islandora user to the new docker group\n\n\n\n\nusermod -aG docker islandora\n  \n\n\n\n\nStep 6: Add islandora user to wheel group\n\n\n\n\nusermod -aG wheel islandora\n\n\n\n\nStep 7: Install Docker-Compose\n\n\n\n\nCopy and paste the command below\n\n\n\n\n\n  curl -L https://github.com/docker/compose/releases/download/1.20.1/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose\n\n\n\n\n\n\n\n\n\nchmod +x /usr/local/bin/docker-compose\n\n\n\n\n\n\nTest the Installation\n\n\n\n\ndocker-compose --version\n\n\n\n\n\n\n\n\nExample output:\n\n\ndocker-compose version 1.20.1, build 1719ceb\n\n\n\n\n\n\n(optional) Alternative install method for Docker-compose\n\n\nIn case the commands in the steps above fail, please use this alternative install.\n\n\n\n\n\n\nAs always, ensure you're the root user.\n\n\n\n\nsudo su\n  \n\n\n\n\n\n\n\n\nInstall Python Pip (package manager for Python Scripting Language)\n\n\n\n\nyum install -y python-pip\n\n\n\n\n\n\n\n\nUpgrade Python to latest version\n\n\n\n\nyum upgrade python*\n\n\n\n\n\n\n\n\nUpgrade Python Pip\n\n\n\n\npip install --upgrade pip\n\n\n\n\n\n\n\n\nInstall Docker compose\n\n\n\n\npip install docker-compose\n\n\n\n\n\n\n\n\n\n\nStep 8: Start up and enable Docker\n\n\n\n\n\n\nEnable the Docker service to start on host server boot\n\n\n\n\nsystemctl enable docker.service\n\n\n\n\n\n\n\n\nStart the Docker service\n\n\n\n\nsystemctl start docker\n\n\n\n\n\n\n\n\nStep 9: Clone ISLE repository\n\n\n\n\n\n\nPlease note:\n In some Linux Distributions, one might need to create the \n/opt\n directory \n(optional)\n   \n\n\n\n\n\n\nOne can \nls -lha /\n to see if an \n/opt\n directory exists  \n\n\n\n\n\n\nIf missing, \nmkdir /opt\n  \n\n\n\n\n\n\nIf not missing, proceed to next step.  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncd /opt\n\n\n\n\n\n\ngit clone https://github.com/Islandora-Collaboration-Group/ISLE.git\n\n\n\n\n\n\nThis process will take 2 - 4 minutes depending on internet bandwidth\n\n\n\n\n\n\nchown -Rv islandora:islandora ISLE\n\n\n\n\n\n\ncd /opt/ISLE\n\n\n\n\n\n\nNext steps\n\n\n\n\nReturn to the \nInstall Start Here section\n for additional instructions.",
            "title": "Install ISLE Host Server Dependencies on CentOS"
        },
        {
            "location": "/01_installation_host_server/install_on_centos/#install-process-overview",
            "text": "Install server prerequisites  Install Docker  Create islandora user and group  Setup SSH access for islandora user on VM / server (Part 1)  (optional) Create ssh keys on enduser's laptop / workstation    Setup SSH access for islandora user on VM / server (Part 2)  (optional) Create ssh keys on enduser's laptop / workstation    Create Docker group  Add islandora user to wheel group  Install Docker-Compose  (optional) Alternative install method for Docker-compose    Start up and enable Docker  Clone ISLE repository  Next steps",
            "title": "Install process overview"
        },
        {
            "location": "/01_installation_host_server/install_on_centos/#step-1-install-server-prerequisites",
            "text": "Open a terminal on your local laptop or workstation and ssh to the CentOS server / VM:    You need to become root first   sudo su        Add the RHEL/CENTOS epel-release package repository first   yum install -y epel-release     Install the following:   yum install -y openssl git htop ntp wget curl nano",
            "title": "Step 1: Install server prerequisites"
        },
        {
            "location": "/01_installation_host_server/install_on_centos/#step-2-install-docker",
            "text": "yum install -y yum-utils device-mapper-persistent-data lvm2    yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo    yum install -y docker-ce",
            "title": "Step 2: Install Docker"
        },
        {
            "location": "/01_installation_host_server/install_on_centos/#step-3-create-islandora-user-and-group",
            "text": "groupadd -g 10000 islandora    useradd -m -d /home/islandora -s /bin/bash -u 10000 -g 10000 islandora    passwd <somepassword>    Please change  <somepassword>  to something else.    Enter  <somepassword>  for password    Re-enter  <somepassword>  to confirm      Add islandora user to sudoers   echo \"islandora ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/islandora",
            "title": "Step 3: Create islandora user and group"
        },
        {
            "location": "/01_installation_host_server/install_on_centos/#step-4a-setup-ssh-access-for-islandora-user-on-vm-server-part-1",
            "text": "Create a ssh key for the islandora user  (this will also enable us to push code out to a repository later)    mkdir -p /home/islandora/.ssh    chmod -Rv 700 /home/islandora/.ssh    chown -Rv islandora:islandora /home/islandora/.ssh    cd /home/islandora/.ssh    su islandora    ssh-keygen -t RSA -b 4096 -C \"ISLE Islandora\" -f /home/islandora/.ssh/      Follow the prompts to save your key.  You do not need to specify a password to secure your key in development;  in production you must protect your keys with strong passwords.  Hit the  Enter / Return  key at all of the prompts.  There should be no need to enter a file name.  (However some users may find when prompted they may need to enter:  id_rsa )    Do not enter a passphrase when asked twice, simply hit the  Enter / Return  key and move on.     Example Output  ssh-keygen -t RSA -b 4096 -C \"ISLE Islandora\" -f /home/islandora/.ssh/\n\n   Generating public/private rsa key pair.\n\n   Enter file in which to save the key (/home/islandora/.ssh/id_rsa):\n\n   Enter passphrase (empty for no passphrase):\n\n   Enter same passphrase again:\n\n   Your identification has been saved in /home/islandora/.ssh/id_rsa.\n\n   Your public key has been saved in /home/islandora/.ssh/id_rsa.pub.\n\n   The key fingerprint is:\n   SHA256:rTCG6wCablwrIkQTGcrcaChmTZEYAwNrNBLNxLIds+I islandora@isle-host-macos\n   The key's randomart image is:\n   +---[RSA 2048]----+\n   |O%*oo            |\n   |O*&.             |\n   |=%.*             |\n   |Ooo  .   .       |\n   |+.. . + S .      |\n   |.E . o o .       |\n   |= o o   .        |\n   |++ +             |\n   |+.. .            |\n   +----[SHA256]-----+    If you would like to login to the host machine using key-pairs, please ensure the following first.    Check if your laptop / workstation has existing ssh keys. If you do not know, use the  Create ssh keys on enduser's laptop / workstation (optional)  section below before advancing to  Part 2 .    If you already have existing SSH keys, move onto the  Setup SSH access for islandora user on VM / server (Part 2)  section.",
            "title": "Step 4a: Setup SSH access for islandora user on VM / server (Part 1)"
        },
        {
            "location": "/01_installation_host_server/install_on_centos/#optional-create-ssh-keys-on-endusers-laptop-workstation",
            "text": "Some endusers may or may not have created local SSH keys on their laptop or workstation prior to the next step. Please use the instructions below if this is the case.    Creating ssh keys on MacOS High Sierra    Creating ssh keys on Windows 10    Creating ssh keys on Ubuntu Desktop 16.04",
            "title": "(optional) Create ssh keys on enduser's laptop / workstation"
        },
        {
            "location": "/01_installation_host_server/install_on_centos/#step-4b-setup-ssh-access-for-islandora-user-on-vm-server-part-2",
            "text": "If you would like to login to the host machine using key-pairs, continued from  (Part 1) . Copy in the existing ssh key from the enduser's laptop /workstation. This is entirely dependent on the local computer being used to connect to the Islandora server. In some cases, cloud hosting based servers e.g. Google Cloud Platform may have different requirements. This will allow key based ssh access for the enduser.    Enduser's laptop /workstation running  MacOS example :  * Open a terminal and enter: `cat /Users/enduser/.ssh/id_rsa.pub` & copy the key to the clipboard. (_On the enduser laptop not the VM_)    Enduser's laptop /workstation running  Windows example :    Open the Command Prompt application and enter  notepad C:\\Users\\enduser\\.ssh\\id_rsa.pub  & copy the key to the clipboard. ( On the enduser laptop not the VM )      Enduser's laptop /workstation running  Ubuntu Desktop example :  * Open a terminal and enter: `cat /home/enduser/.ssh/id_rsa.pub` & copy the key to the clipboard. (_On the enduser laptop not the VM_)      For all OS types, copy and paste this value exactly into the  /home/islandora/.ssh/authorized_keys  file using the  nano  tool on the CentOS VM ( On the CentOS VM not the enduser laptop )   nano /home/islandora/.ssh/authorized_keys  Hit the  Cntrl  key and then the  o  key to write to the file.   Hi the  Cntrl  key and then the  x  key to exit the file.    Exit out of the ssh session from the host server as the root user  exit    ssh back in as  islandora  to test if that process worked.    Example     ssh islandora@isle-host-server.com\n\n   -or-\n\n   ssh islandora@10.10.10.130",
            "title": "Step 4b: Setup SSH access for islandora user on VM / server (Part 2)"
        },
        {
            "location": "/01_installation_host_server/install_on_centos/#optional-note-for-vagrant-and-local-vm-users-only",
            "text": "For local VM and Vagrant users only, not steps to follow in a production environment  Should the enduser have difficulty adding the .ssh key for the islandora user or if the enduser doesn't even have a local id_rsa.pub file, that step above can be avoided.  Simply continue to access the local ISLE Host VM via opening a terminal on the enduser laptop or workstation.    cd /pathto/ISLE/vagrant/    vagrant ssh    sudo su    su islandora    This process will switch one to islandora with out having to use a password.",
            "title": "(optional) Note for Vagrant and local VM users only"
        },
        {
            "location": "/01_installation_host_server/install_on_centos/#step-5-create-docker-group",
            "text": "Open a terminal and ssh back into the CentOS Host Server/VM as the  islandora  user and  become root again.   sudo su        Create the Docker group. ( You may receive a notice that group docker already exist. This fine. Proceed with instructions. )   groupadd docker      Add the islandora user to the new docker group   usermod -aG docker islandora",
            "title": "Step 5: Create Docker group"
        },
        {
            "location": "/01_installation_host_server/install_on_centos/#step-6-add-islandora-user-to-wheel-group",
            "text": "usermod -aG wheel islandora",
            "title": "Step 6: Add islandora user to wheel group"
        },
        {
            "location": "/01_installation_host_server/install_on_centos/#step-7-install-docker-compose",
            "text": "Copy and paste the command below   \n  curl -L https://github.com/docker/compose/releases/download/1.20.1/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose    chmod +x /usr/local/bin/docker-compose    Test the Installation   docker-compose --version     Example output:  docker-compose version 1.20.1, build 1719ceb",
            "title": "Step 7: Install Docker-Compose"
        },
        {
            "location": "/01_installation_host_server/install_on_centos/#optional-alternative-install-method-for-docker-compose",
            "text": "In case the commands in the steps above fail, please use this alternative install.    As always, ensure you're the root user.   sudo su        Install Python Pip (package manager for Python Scripting Language)   yum install -y python-pip     Upgrade Python to latest version   yum upgrade python*     Upgrade Python Pip   pip install --upgrade pip     Install Docker compose   pip install docker-compose",
            "title": "(optional) Alternative install method for Docker-compose"
        },
        {
            "location": "/01_installation_host_server/install_on_centos/#step-8-start-up-and-enable-docker",
            "text": "Enable the Docker service to start on host server boot   systemctl enable docker.service     Start the Docker service   systemctl start docker",
            "title": "Step 8: Start up and enable Docker"
        },
        {
            "location": "/01_installation_host_server/install_on_centos/#step-9-clone-isle-repository",
            "text": "Please note:  In some Linux Distributions, one might need to create the  /opt  directory  (optional)        One can  ls -lha /  to see if an  /opt  directory exists      If missing,  mkdir /opt       If not missing, proceed to next step.          cd /opt    git clone https://github.com/Islandora-Collaboration-Group/ISLE.git    This process will take 2 - 4 minutes depending on internet bandwidth    chown -Rv islandora:islandora ISLE    cd /opt/ISLE",
            "title": "Step 9: Clone ISLE repository"
        },
        {
            "location": "/01_installation_host_server/install_on_centos/#next-steps",
            "text": "Return to the  Install Start Here section  for additional instructions.",
            "title": "Next steps"
        },
        {
            "location": "/01_installation_host_server/install_on_ubuntu/",
            "text": "Ubuntu\n server version to use: \n16.04 LTS\n\n\nThis is a detailed operating system-specific guide including commands to copy/paste for all the software you may need to run ISLE on a \nUbuntu\n ISLE Host Server.\n\n\nCalled \"the host\" - this is the base computer upon which the entire ISLE stack is built - this can be a virtual machine on a laptop or a server you connected to via ssh.\n\n\nThe following setup will be the same if you are setting up an ISLE host server:\n\n\n\n\n\n\non your laptop / desktop using Vagrant or Virtualbox VM for the test site (isle.localdomain).\n\n\n\n\n\n\nor using a physical server or cloud hosted setup e.g. (AWS or GCP) to run an ISLE Host server for a new site or a migrated site.\n\n\n\n\n\n\nIn all these cases you'll be establishing a Ubuntu server with the following dependencies below.\n\n\nInstall process overview\n\n\n\n\nInstall server prerequisites\n\n\nInstall Docker\n\n\nCreate islandora user and group\n\n\nSetup SSH access for islandora user on VM / server (Part 1)\n\n\n(optional) Create ssh keys on enduser's laptop / workstation\n\n\n\n\n\n\nSetup SSH access for islandora user on VM / server (Part 2)\n\n\n(optional) Create ssh keys on enduser's laptop / workstation\n\n\n\n\n\n\nCreate Docker group\n\n\nAdd islandora user to wheel group\n\n\nInstall Docker-Compose\n\n\n(optional) Alternative install method for Docker-compose\n\n\n\n\n\n\nClone ISLE repository\n\n\nNext steps\n\n\n\n\nStep 1: Install server prerequisites\n\n\n\n\n\n\nOpen a terminal on your local laptop or workstation and ssh to the CentOS server / VM:\n\n\n\n\n\n\nYou need to become root first\n\n\n\n\nIf you are not already root, use either \nsudo -s\n or \nsudo su\n to become root.\n\n\n\n\n\n\n\n\nInstall the following:\n\n\n\n\n\n\napt-get update\n\n\n\n\n\n\napt-get upgrade\n\n\n\n\n\n\napt-get install -y openssl git htop ntp wget curl nano apt-transport-https ca-certificates software-properties-common\n\n\n\n\n\n\n\n\n\n\nStep 2: Install Docker\n\n\n\n\n\n\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\n  \n\n\n\n\n\n\nadd-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\n  \n\n\n\n\n\n\napt-get update\n  \n\n\n\n\n\n\napt-get install -y docker-ce\n  \n\n\n\n\n\n\nCheck if Docker is running \nsystemctl status docker\n  \n\n\n\n\n\n\nStep 3: Create islandora user and group\n\n\n\n\n\n\ngroupadd -g 10000 islandora\n\n\n\n\n\n\nuseradd -m -d /home/islandora -s /bin/bash -u 10000 -g 10000 islandora\n\n\n\n\n\n\npasswd <somepassword>\n\n\n\n\n\n\nPlease change \n<somepassword>\n to something else.\n\n\n\n\n\n\nEnter \n<somepassword>\n for password\n\n\n\n\n\n\nRe-enter \n<somepassword>\n to confirm\n\n\n\n\n\n\n\n\n\n\nAdd islandora user to sudoers\n\n\n\n\necho \"islandora ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/islandora\n\n\n\n\n\n\n\n\nStep 4a: Setup SSH access for islandora user on VM / server (Part 1)\n\n\nCreate a ssh key for the islandora user \n(this will also enable us to push code out to a repository later)\n\n\n\n\n\n\nmkdir -p /home/islandora/.ssh\n\n\n\n\n\n\nchmod -Rv 700 /home/islandora/.ssh\n\n\n\n\n\n\nchown -Rv islandora:islandora /home/islandora/.ssh\n\n\n\n\n\n\ncd /home/islandora/.ssh\n\n\n\n\n\n\nsu islandora\n\n\n\n\n\n\nssh-keygen -t RSA -b 4096 -C \"ISLE Islandora\" -f /home/islandora/.ssh/\n  \n\n\n\n\nFollow the prompts to save your key.  You do not need to specify a password to secure your key in development;  in production you must protect your keys with strong passwords.\n\n\nHit the \nEnter / Return\n key at all of the prompts.\n\n\nThere should be no need to enter a file name. \n(However some users may find when prompted they may need to enter: \nid_rsa\n)\n\n\n\n\n\n\nDo not enter a passphrase when asked twice, simply hit the \nEnter / Return\n key and move on.\n\n\n\n\n\n\n\n\nExample Output\n\n\nssh-keygen -t RSA -b 4096 -C \"ISLE Islandora\" -f /home/islandora/.ssh/\n\n   Generating public/private rsa key pair.\n\n   Enter file in which to save the key (/home/islandora/.ssh/id_rsa):\n\n   Enter passphrase (empty for no passphrase):\n\n   Enter same passphrase again:\n\n   Your identification has been saved in /home/islandora/.ssh/id_rsa.\n\n   Your public key has been saved in /home/islandora/.ssh/id_rsa.pub.\n\n   The key fingerprint is:\n   SHA256:rTCG6wCablwrIkQTGcrcaChmTZEYAwNrNBLNxLIds+I islandora@isle-host-macos\n   The key's randomart image is:\n   +---[RSA 2048]----+\n   |O%*oo            |\n   |O*&.             |\n   |=%.*             |\n   |Ooo  .   .       |\n   |+.. . + S .      |\n   |.E . o o .       |\n   |= o o   .        |\n   |++ +             |\n   |+.. .            |\n   +----[SHA256]-----+\n\n\n\n\n\n\n\n\nIf you would like to login to the host machine using key-pairs, please ensure the following first.\n\n\n\n\n\n\nCheck if your laptop / workstation has existing ssh keys. If you do not know, use the \nCreate ssh keys on enduser's laptop / workstation (optional)\n section below before advancing to \nPart 2\n.\n\n\n\n\n\n\nIf you already have existing SSH keys, move onto the \nSetup SSH access for islandora user on VM / server (Part 2)\n section.\n\n\n\n\n\n\n\n\n(optional) Create ssh keys on enduser's laptop / workstation\n\n\nSome endusers may or may not have created local SSH keys on their laptop or workstation prior to the next step. Please use the instructions below if this is the case.\n\n\n\n\n\n\nCreating ssh keys on MacOS High Sierra\n\n\n\n\n\n\nCreating ssh keys on Windows 10\n\n\n\n\n\n\nCreating ssh keys on Ubuntu Desktop 16.04\n\n\n\n\n\n\n\n\nStep 4b: Setup SSH access for islandora user on VM / server (Part 2)\n\n\n\n\n\n\nIf you would like to login to the host machine using key-pairs, continued from \n(Part 1)\n. Copy in the existing ssh key from the enduser's laptop /workstation. This is entirely dependent on the local computer being used to connect to the Islandora server. In some cases, cloud hosting based servers e.g. Google Cloud Platform may have different requirements. This will allow key based ssh access for the enduser.\n\n\n\n\n\n\nEnduser's laptop /workstation running \nMacOS example\n:\n\n\n\n\nOpen a terminal and enter: \ncat /Users/enduser/.ssh/id_rsa.pub\n & copy the key to the clipboard. (\nOn the enduser laptop not the VM\n)\n\n\n\n\n\n\n\n\nEnduser's laptop /workstation running \nWindows example\n:\n\n\n\n\nOpen the Command Prompt application and enter \nnotepad C:\\Users\\enduser\\.ssh\\id_rsa.pub\n & copy the key to the clipboard. (\nOn the enduser laptop not the VM\n)\n\n\n\n\n\n\n\n\nEnduser's laptop /workstation running \nUbuntu Desktop example\n:\n\n\n\n\nOpen a terminal and enter: \ncat /home/enduser/.ssh/id_rsa.pub\n & copy the key to the clipboard. (\nOn the enduser laptop not the VM\n)\n\n\n\n\n\n\n\n\n\n\n\n\nFor all OS types, copy and paste this value exactly into the \n/home/islandora/.ssh/authorized_keys\n file using the \nnano\n tool on the CentOS VM (\nOn the CentOS VM not the enduser laptop\n)\n\n\n\n\nnano /home/islandora/.ssh/authorized_keys\n\n\nHit the \nCntrl\n key and then the \no\n key to write to the file.\n\n\n\n\nHi the \nCntrl\n key and then the \nx\n key to exit the file.\n\n\n\n\n\n\nExit out of the ssh session from the host server as the root user \nexit\n\n\n\n\n\n\nssh back in as \nislandora\n to test if that process worked.\n\n\n\n\n\n\nExample\n\n\n   ssh islandora@isle-host-server.com\n\n   -or-\n\n   ssh islandora@10.10.10.130\n\n\n\n\n\n\n(optional) Note for Vagrant and local VM users only\n\n\nFor local VM and Vagrant users only, not steps to follow in a production environment\n\n\nShould the enduser have difficulty adding the .ssh key for the islandora user or if the enduser doesn't even have a local id_rsa.pub file, that step above can be avoided.\n\n\nSimply continue to access the local ISLE Host VM via opening a terminal on the enduser laptop or workstation.\n\n\n\n\n\n\ncd /pathto/ISLE/vagrant/\n\n\n\n\n\n\nvagrant ssh\n\n\n\n\n\n\nsudo su\n\n\n\n\n\n\nsu islandora\n\n\n\n\n\n\nThis process will switch one to islandora with out having to use a password.\n\n\n\n\nStep 5: Create Docker group\n\n\n\n\n\n\nOpen a terminal and ssh back into the CentOS Host Server/VM as the \nislandora\n user and \nbecome root again.\n\n\n\n\n\n\nsudo su\n  \n\n\n\n\n\n\nCreate the Docker group. (\nYou may receive a notice that group docker already exist. This fine. Proceed with instructions.\n)\n\n\n\n\ngroupadd docker\n  \n\n\n\n\nAdd the islandora user to the new docker group\n\n\n\n\nusermod -aG docker islandora\n  \n\n\n\n\nStep 6: Add islandora user to wheel group\n\n\n\n\nusermod -aG wheel islandora\n\n\n\n\nStep 7: Install Docker-Compose\n\n\n\n\nCopy and paste the command below\n\n\n\n\n\n  curl -L https://github.com/docker/compose/releases/download/1.20.1/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose\n\n\n\n\n\n\n\n\n\nchmod +x /usr/local/bin/docker-compose\n\n\n\n\n\n\nTest the Installation\n\n\n\n\ndocker-compose --version\n\n\n\n\n\n\n\n\nExample output:\n\n\ndocker-compose version 1.20.1, build 1719ceb\n\n\n\n\n\n\n(optional) Alternative install method for Docker-compose\n\n\nIn case the commands in the steps above fail, please use this alternative install.\n\n\n\n\n\n\nAs always, ensure you're the root user.\n\n\n\n\nsudo su\n  \n\n\n\n\n\n\n\n\nInstall Python Pip (package manager for Python Scripting Language)\n\n\n\n\napt-get install -y python-pip\n\n\n\n\n\n\n\n\nUpgrade Python to latest version\n\n\n\n\napt-get upgrade python*\n\n\n\n\n\n\n\n\nUpgrade Python Pip\n\n\n\n\npip install --upgrade pip\n\n\n\n\n\n\n\n\nInstall Docker compose\n\n\n\n\npip install docker-compose\n\n\n\n\n\n\n\n\n\n\nStep 8: Clone ISLE repository\n\n\n\n\n\n\nPlease note:\n In some Linux Distributions, one might need to create the \n/opt\n directory \n(optional)\n   \n\n\n\n\n\n\nOne can \nls -lha /\n to see if an \n/opt\n directory exists  \n\n\n\n\n\n\nIf missing, \nmkdir /opt\n  \n\n\n\n\n\n\nIf not missing, proceed to next step.  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncd /opt\n\n\n\n\n\n\ngit clone https://github.com/Islandora-Collaboration-Group/ISLE.git\n\n\n\n\n\n\nThis process will take 2 - 4 minutes depending on internet bandwidth\n\n\n\n\n\n\nchown -Rv islandora:islandora ISLE\n\n\n\n\n\n\ncd /opt/ISLE\n\n\n\n\n\n\nNext steps\n\n\n\n\nReturn to the \nInstall Start Here section\n for additional instructions.",
            "title": "Install ISLE Host Server Dependencies on Ubuntu"
        },
        {
            "location": "/01_installation_host_server/install_on_ubuntu/#install-process-overview",
            "text": "Install server prerequisites  Install Docker  Create islandora user and group  Setup SSH access for islandora user on VM / server (Part 1)  (optional) Create ssh keys on enduser's laptop / workstation    Setup SSH access for islandora user on VM / server (Part 2)  (optional) Create ssh keys on enduser's laptop / workstation    Create Docker group  Add islandora user to wheel group  Install Docker-Compose  (optional) Alternative install method for Docker-compose    Clone ISLE repository  Next steps",
            "title": "Install process overview"
        },
        {
            "location": "/01_installation_host_server/install_on_ubuntu/#step-1-install-server-prerequisites",
            "text": "Open a terminal on your local laptop or workstation and ssh to the CentOS server / VM:    You need to become root first   If you are not already root, use either  sudo -s  or  sudo su  to become root.     Install the following:    apt-get update    apt-get upgrade    apt-get install -y openssl git htop ntp wget curl nano apt-transport-https ca-certificates software-properties-common",
            "title": "Step 1: Install server prerequisites"
        },
        {
            "location": "/01_installation_host_server/install_on_ubuntu/#step-2-install-docker",
            "text": "curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -       add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"       apt-get update       apt-get install -y docker-ce       Check if Docker is running  systemctl status docker",
            "title": "Step 2: Install Docker"
        },
        {
            "location": "/01_installation_host_server/install_on_ubuntu/#step-3-create-islandora-user-and-group",
            "text": "groupadd -g 10000 islandora    useradd -m -d /home/islandora -s /bin/bash -u 10000 -g 10000 islandora    passwd <somepassword>    Please change  <somepassword>  to something else.    Enter  <somepassword>  for password    Re-enter  <somepassword>  to confirm      Add islandora user to sudoers   echo \"islandora ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/islandora",
            "title": "Step 3: Create islandora user and group"
        },
        {
            "location": "/01_installation_host_server/install_on_ubuntu/#step-4a-setup-ssh-access-for-islandora-user-on-vm-server-part-1",
            "text": "Create a ssh key for the islandora user  (this will also enable us to push code out to a repository later)    mkdir -p /home/islandora/.ssh    chmod -Rv 700 /home/islandora/.ssh    chown -Rv islandora:islandora /home/islandora/.ssh    cd /home/islandora/.ssh    su islandora    ssh-keygen -t RSA -b 4096 -C \"ISLE Islandora\" -f /home/islandora/.ssh/      Follow the prompts to save your key.  You do not need to specify a password to secure your key in development;  in production you must protect your keys with strong passwords.  Hit the  Enter / Return  key at all of the prompts.  There should be no need to enter a file name.  (However some users may find when prompted they may need to enter:  id_rsa )    Do not enter a passphrase when asked twice, simply hit the  Enter / Return  key and move on.     Example Output  ssh-keygen -t RSA -b 4096 -C \"ISLE Islandora\" -f /home/islandora/.ssh/\n\n   Generating public/private rsa key pair.\n\n   Enter file in which to save the key (/home/islandora/.ssh/id_rsa):\n\n   Enter passphrase (empty for no passphrase):\n\n   Enter same passphrase again:\n\n   Your identification has been saved in /home/islandora/.ssh/id_rsa.\n\n   Your public key has been saved in /home/islandora/.ssh/id_rsa.pub.\n\n   The key fingerprint is:\n   SHA256:rTCG6wCablwrIkQTGcrcaChmTZEYAwNrNBLNxLIds+I islandora@isle-host-macos\n   The key's randomart image is:\n   +---[RSA 2048]----+\n   |O%*oo            |\n   |O*&.             |\n   |=%.*             |\n   |Ooo  .   .       |\n   |+.. . + S .      |\n   |.E . o o .       |\n   |= o o   .        |\n   |++ +             |\n   |+.. .            |\n   +----[SHA256]-----+    If you would like to login to the host machine using key-pairs, please ensure the following first.    Check if your laptop / workstation has existing ssh keys. If you do not know, use the  Create ssh keys on enduser's laptop / workstation (optional)  section below before advancing to  Part 2 .    If you already have existing SSH keys, move onto the  Setup SSH access for islandora user on VM / server (Part 2)  section.",
            "title": "Step 4a: Setup SSH access for islandora user on VM / server (Part 1)"
        },
        {
            "location": "/01_installation_host_server/install_on_ubuntu/#optional-create-ssh-keys-on-endusers-laptop-workstation",
            "text": "Some endusers may or may not have created local SSH keys on their laptop or workstation prior to the next step. Please use the instructions below if this is the case.    Creating ssh keys on MacOS High Sierra    Creating ssh keys on Windows 10    Creating ssh keys on Ubuntu Desktop 16.04",
            "title": "(optional) Create ssh keys on enduser's laptop / workstation"
        },
        {
            "location": "/01_installation_host_server/install_on_ubuntu/#step-4b-setup-ssh-access-for-islandora-user-on-vm-server-part-2",
            "text": "If you would like to login to the host machine using key-pairs, continued from  (Part 1) . Copy in the existing ssh key from the enduser's laptop /workstation. This is entirely dependent on the local computer being used to connect to the Islandora server. In some cases, cloud hosting based servers e.g. Google Cloud Platform may have different requirements. This will allow key based ssh access for the enduser.    Enduser's laptop /workstation running  MacOS example :   Open a terminal and enter:  cat /Users/enduser/.ssh/id_rsa.pub  & copy the key to the clipboard. ( On the enduser laptop not the VM )     Enduser's laptop /workstation running  Windows example :   Open the Command Prompt application and enter  notepad C:\\Users\\enduser\\.ssh\\id_rsa.pub  & copy the key to the clipboard. ( On the enduser laptop not the VM )     Enduser's laptop /workstation running  Ubuntu Desktop example :   Open a terminal and enter:  cat /home/enduser/.ssh/id_rsa.pub  & copy the key to the clipboard. ( On the enduser laptop not the VM )       For all OS types, copy and paste this value exactly into the  /home/islandora/.ssh/authorized_keys  file using the  nano  tool on the CentOS VM ( On the CentOS VM not the enduser laptop )   nano /home/islandora/.ssh/authorized_keys  Hit the  Cntrl  key and then the  o  key to write to the file.   Hi the  Cntrl  key and then the  x  key to exit the file.    Exit out of the ssh session from the host server as the root user  exit    ssh back in as  islandora  to test if that process worked.    Example     ssh islandora@isle-host-server.com\n\n   -or-\n\n   ssh islandora@10.10.10.130",
            "title": "Step 4b: Setup SSH access for islandora user on VM / server (Part 2)"
        },
        {
            "location": "/01_installation_host_server/install_on_ubuntu/#optional-note-for-vagrant-and-local-vm-users-only",
            "text": "For local VM and Vagrant users only, not steps to follow in a production environment  Should the enduser have difficulty adding the .ssh key for the islandora user or if the enduser doesn't even have a local id_rsa.pub file, that step above can be avoided.  Simply continue to access the local ISLE Host VM via opening a terminal on the enduser laptop or workstation.    cd /pathto/ISLE/vagrant/    vagrant ssh    sudo su    su islandora    This process will switch one to islandora with out having to use a password.",
            "title": "(optional) Note for Vagrant and local VM users only"
        },
        {
            "location": "/01_installation_host_server/install_on_ubuntu/#step-5-create-docker-group",
            "text": "Open a terminal and ssh back into the CentOS Host Server/VM as the  islandora  user and  become root again.    sudo su       Create the Docker group. ( You may receive a notice that group docker already exist. This fine. Proceed with instructions. )   groupadd docker      Add the islandora user to the new docker group   usermod -aG docker islandora",
            "title": "Step 5: Create Docker group"
        },
        {
            "location": "/01_installation_host_server/install_on_ubuntu/#step-6-add-islandora-user-to-wheel-group",
            "text": "usermod -aG wheel islandora",
            "title": "Step 6: Add islandora user to wheel group"
        },
        {
            "location": "/01_installation_host_server/install_on_ubuntu/#step-7-install-docker-compose",
            "text": "Copy and paste the command below   \n  curl -L https://github.com/docker/compose/releases/download/1.20.1/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose    chmod +x /usr/local/bin/docker-compose    Test the Installation   docker-compose --version     Example output:  docker-compose version 1.20.1, build 1719ceb",
            "title": "Step 7: Install Docker-Compose"
        },
        {
            "location": "/01_installation_host_server/install_on_ubuntu/#optional-alternative-install-method-for-docker-compose",
            "text": "In case the commands in the steps above fail, please use this alternative install.    As always, ensure you're the root user.   sudo su        Install Python Pip (package manager for Python Scripting Language)   apt-get install -y python-pip     Upgrade Python to latest version   apt-get upgrade python*     Upgrade Python Pip   pip install --upgrade pip     Install Docker compose   pip install docker-compose",
            "title": "(optional) Alternative install method for Docker-compose"
        },
        {
            "location": "/01_installation_host_server/install_on_ubuntu/#step-8-clone-isle-repository",
            "text": "Please note:  In some Linux Distributions, one might need to create the  /opt  directory  (optional)        One can  ls -lha /  to see if an  /opt  directory exists      If missing,  mkdir /opt       If not missing, proceed to next step.          cd /opt    git clone https://github.com/Islandora-Collaboration-Group/ISLE.git    This process will take 2 - 4 minutes depending on internet bandwidth    chown -Rv islandora:islandora ISLE    cd /opt/ISLE",
            "title": "Step 8: Clone ISLE repository"
        },
        {
            "location": "/01_installation_host_server/install_on_ubuntu/#next-steps",
            "text": "Return to the  Install Start Here section  for additional instructions.",
            "title": "Next steps"
        },
        {
            "location": "/01_installation_host_server/install_docker_for_mac/",
            "text": "MacOS\n desktop version to use: \n10.3.x+\n\n\nThis is a detailed operating system-specific guide to setup and install all ISLE pre-requisites on a MacOS local laptop or workstation using Docker for Mac.\n\n\nCalled \"the host\" - this is the base computer upon which the entire ISLE stack is built.\n\n\nPlease note:\n This guide is for using \nDocker for Mac\n software only on a MacOS system instead of Vagrant or a Virtual Machine (VM).\n\n\nAssumptions / Pre-Requisites\n\n\n\n\n\n\nEnduser has a local laptop / workstation that conforms to the specifications outlined in the \nHost Server Specifications\n\n\n\n\n\n\nEnduser \nmust\n have administrator rights on the MacOS computer to proceed or the installation will fail.\n\n\n\n\n\n\nThis guide is not intended for production usage.\n\n\n\n\n\n\nInstall process overview\n\n\n\n\nInstall git\n\n\nInstall Docker for Mac\n\n\nClone the ISLE project repository\n\n\nPull down the ISLE images from Dockerhub\n\n\nNext steps\n\n\n\n\nStep 1: Git Installation\n\n\nIn order to get a copy (clone) of the current ISLE project, git will need to be installed. \nGit\n is a software version control system for tracking changes in computer files and coordinating work on those files among multiple people.\n\n\n\n\n\n\nOpen a terminal and enter: \ngit --version\n.\n\n\n\n\n\n\nThis command will inform the enduser if git is already installed.  \n\n\n\n\n\n\n$git --version\ngit version 2.15.1\n\n\n\n\n\n\n\n\nIf git is not installed, running that previous command may trigger the \nInstall Command Line Developer Tools\n prompt. If the prompt appears:\n\n\n\n\nClick on the blue \nInstall\n button for the license agreement.\n\n\nClick the white \nAgree\n button.\n\n\nThe package will take 1-2 minutes to download.\n\n\nClick the \nDone\n button once finished.\n\n\n\n\n\n\n\n\nIf git is not installed and the prompt doesn't show, then follow one of the recommended methods for installing git in this nice \ntutorial\n\n\n\n\n\n\nIf git is already installed, then please proceed to the next section.\n\n\nStep 2: Docker for Mac Installation\n\n\n\n\n\n\nOpen a browser and navigate to https://www.docker.com/docker-mac\n\n\n\n\n\n\nClick the \nDownload from Docker Store\n button in the center of the page\n\n\n\n\n\n\nClick the blue \nGet Docker\n button on the right of the page\n\n\n\n\n\n\nThe \nDocker.dmg\n file should start to download. Check your \nDownloads\n directory\n\n\n\n\n\n\nDouble-click the \nDocker.dmg\n file. The file should open and mount in a new window / prompt.\n\n\n\n\n\n\nAs instructed within the prompt, drag and drop the whale icon to the right towards the \nApplications\n directory shortcut, a tiny green plus sign should appear, now let go from the mouse or trackpad.\n\n\n\n\n\n\nThe application should start to copy data to the \nApplications\n directory, this process may take 1 - 5 mins depending on the speed of your hard-drive.\n\n\n\n\n\n\nLaunch the \nDocker\n application from the \nApplications\n directory\n\n\n\n\n\n\nThis process should may take 2 -5 mins depending on the speed of your hard-drive.\n\n\n\n\n\n\nOnce fully started, one can see a whale icon at the top of their screen. If this is clicked, a dropdown should appear indicating that Docker is now running.\n\n\n\n\n\n\nPlease note: This process also installs the newest version of \nDocker-Compose\n.\n\n\n\n\n\n\n(Optional) - Open a terminal and enter \ndocker ps -a\n, this should return the following:\n\n\n\n\n\n\n\nCONTAINER     ID    IMAGE     COMMAND     CREATED     STATUS    PORTS     NAMES\n\n\n\n\n\nStep 3: Clone the ISLE repository\n\n\nIn this section, the enduser will need to decide on an appropriate area on their laptop to clone the current ISLE project software to.\n\n\nSome endusers create a new directory e.g. \nProjects\n or \nCode\n within their \nDocuments\n directory. It is entirely up to the enduser to decide. The steps below are an example.\n\n\nThe built-in terminal for MacOs can be found in \n~/Applications/Utilities/Terminal\n\n\n\n\n\n\nOpen a terminal\n\n\n\n\n\n\ncd ~/Documents\n\n\n\n\n\n\ngit clone https://github.com/Islandora-Collaboration-Group/ISLE\n\n\n\n\n\n\nThis process will take 3 - 5 minutes depending on internet bandwidth\n\n\n\n\n\n\nA new directory \nISLE\n should now be visible. The enduser can check by either:\n\n\n\n\n\n\nusing the \nFinder\n application to navigate to this directory\n\n\n\n\nOr within the same terminal, enter \nls\n  and verifying that \nISLE\n appears in the list.\n\n\n\n\n\n\n\n\n\n\nStep 4: Pull down the ISLE images from Dockerhub\n\n\nThis process should may take 15 - 60+ mins depending on the speed of your Internet connection.\n\n\n\n\n\n\nOpen a terminal and enter the following commands, one at a time:\n\n\n\n\n\n\ndocker pull islandoracollabgroup/isle-apache:latest\n\n\n\n\ndocker pull islandoracollabgroup/isle-fedora:latest\n\n\ndocker pull islandoracollabgroup/isle-mysql:latest\n\n\ndocker pull islandoracollabgroup/isle-proxy:latest\n\n\ndocker pull islandoracollabgroup/isle-solr:latest\n\n\n\n\nNext steps\n\n\n\n\nReturn to the \nInstall Start Here section\n for additional instructions.",
            "title": "Docker for Mac"
        },
        {
            "location": "/01_installation_host_server/install_docker_for_mac/#assumptions-pre-requisites",
            "text": "Enduser has a local laptop / workstation that conforms to the specifications outlined in the  Host Server Specifications    Enduser  must  have administrator rights on the MacOS computer to proceed or the installation will fail.    This guide is not intended for production usage.",
            "title": "Assumptions / Pre-Requisites"
        },
        {
            "location": "/01_installation_host_server/install_docker_for_mac/#install-process-overview",
            "text": "Install git  Install Docker for Mac  Clone the ISLE project repository  Pull down the ISLE images from Dockerhub  Next steps",
            "title": "Install process overview"
        },
        {
            "location": "/01_installation_host_server/install_docker_for_mac/#step-1-git-installation",
            "text": "In order to get a copy (clone) of the current ISLE project, git will need to be installed.  Git  is a software version control system for tracking changes in computer files and coordinating work on those files among multiple people.    Open a terminal and enter:  git --version .    This command will inform the enduser if git is already installed.      $git --version\ngit version 2.15.1    If git is not installed, running that previous command may trigger the  Install Command Line Developer Tools  prompt. If the prompt appears:   Click on the blue  Install  button for the license agreement.  Click the white  Agree  button.  The package will take 1-2 minutes to download.  Click the  Done  button once finished.     If git is not installed and the prompt doesn't show, then follow one of the recommended methods for installing git in this nice  tutorial    If git is already installed, then please proceed to the next section.",
            "title": "Step 1: Git Installation"
        },
        {
            "location": "/01_installation_host_server/install_docker_for_mac/#step-2-docker-for-mac-installation",
            "text": "Open a browser and navigate to https://www.docker.com/docker-mac    Click the  Download from Docker Store  button in the center of the page    Click the blue  Get Docker  button on the right of the page    The  Docker.dmg  file should start to download. Check your  Downloads  directory    Double-click the  Docker.dmg  file. The file should open and mount in a new window / prompt.    As instructed within the prompt, drag and drop the whale icon to the right towards the  Applications  directory shortcut, a tiny green plus sign should appear, now let go from the mouse or trackpad.    The application should start to copy data to the  Applications  directory, this process may take 1 - 5 mins depending on the speed of your hard-drive.    Launch the  Docker  application from the  Applications  directory    This process should may take 2 -5 mins depending on the speed of your hard-drive.    Once fully started, one can see a whale icon at the top of their screen. If this is clicked, a dropdown should appear indicating that Docker is now running.    Please note: This process also installs the newest version of  Docker-Compose .    (Optional) - Open a terminal and enter  docker ps -a , this should return the following:    \nCONTAINER     ID    IMAGE     COMMAND     CREATED     STATUS    PORTS     NAMES",
            "title": "Step 2: Docker for Mac Installation"
        },
        {
            "location": "/01_installation_host_server/install_docker_for_mac/#step-3-clone-the-isle-repository",
            "text": "In this section, the enduser will need to decide on an appropriate area on their laptop to clone the current ISLE project software to.  Some endusers create a new directory e.g.  Projects  or  Code  within their  Documents  directory. It is entirely up to the enduser to decide. The steps below are an example.  The built-in terminal for MacOs can be found in  ~/Applications/Utilities/Terminal    Open a terminal    cd ~/Documents    git clone https://github.com/Islandora-Collaboration-Group/ISLE    This process will take 3 - 5 minutes depending on internet bandwidth    A new directory  ISLE  should now be visible. The enduser can check by either:    using the  Finder  application to navigate to this directory   Or within the same terminal, enter  ls   and verifying that  ISLE  appears in the list.",
            "title": "Step 3: Clone the ISLE repository"
        },
        {
            "location": "/01_installation_host_server/install_docker_for_mac/#step-4-pull-down-the-isle-images-from-dockerhub",
            "text": "This process should may take 15 - 60+ mins depending on the speed of your Internet connection.    Open a terminal and enter the following commands, one at a time:    docker pull islandoracollabgroup/isle-apache:latest   docker pull islandoracollabgroup/isle-fedora:latest  docker pull islandoracollabgroup/isle-mysql:latest  docker pull islandoracollabgroup/isle-proxy:latest  docker pull islandoracollabgroup/isle-solr:latest",
            "title": "Step 4: Pull down the ISLE images from Dockerhub"
        },
        {
            "location": "/01_installation_host_server/install_docker_for_mac/#next-steps",
            "text": "Return to the  Install Start Here section  for additional instructions.",
            "title": "Next steps"
        },
        {
            "location": "/01_installation_host_server/install_docker_for_windows/",
            "text": "Windows\n desktop version to use: \n10\n or higher\n\n\nThis is a detailed operating system-specific guide to setup and install all ISLE pre-requisites on a Windows 10 local laptop or workstation using Docker for Windows.\n\n\nCalled \"the host\" - this is the base computer upon which the entire ISLE stack is built.\n\n\nPlease note:\n This guide is for using \nDocker for Windows\n software only on a Windows 10 system instead of Vagrant or a Virtual Machine (VM).\n\n\nAssumptions / Pre-Requisites\n\n\n\n\n\n\nEnduser has a local laptop / workstation that conforms to the specifications outlined in the \nHost Server Specifications\n\n\n\n\n\n\nEnduser \nmust\n have administrator rights on the Windows 10 computer to proceed or the installation will fail.\n\n\n\n\n\n\nThis guide is not intended for production usage.\n\n\n\n\n\n\nInstall process overview\n\n\n\n\nInstall git\n\n\nInstall Docker for Windows\n\n\nClone the ISLE project repository\n\n\nPull down the ISLE images from Dockerhub\n\n\nNext steps\n\n\n\n\nStep 1: Git Installation\n\n\nIn order to get a copy (clone) of the current ISLE project, git will need to be installed. \nGit for Windows\n is a software version control system for tracking changes in computer files and coordinating work on those files among multiple people.\n\n\nDowload the installer and run.  The installer will prompt for several choices.  Generally, you should be okay with defaults except:\n* Change \"use vi\" to either Notepad++ (if installed) or nano.  Vi can be difficult to learn and Notepad++ and nano are simpler choices for those unfamiliar with vi.\n\n\nIf git is already installed, then please proceed to the next section.\n\n\nStep 2: Docker for Windows Installation\n\n\n\n\n\n\nOpen a browser and navigate to https://www.docker.com/docker-windows\n\n\n\n\n\n\nClick the \nDownload from Docker Store\n button in the center of the page\n\n\n\n\n\n\nClick the blue \nGet Docker\n button on the right of the page\n\n\n\n\n\n\nThe \nDocker for Windows Installer.exe\n file should start to download. Check your \nDownloads\n directory\n\n\n\n\n\n\nDouble-click the \nDocker for Windows Installer.exe\n file.  \n\n\n\n\n\n\nFollow the prompts.  \n\n\n\n\n\n\nYou will be required to logout when the installation is complete.  \n\n\n\n\n\n\nAfter logging back in, Docker will run automatically.  \n\n\n\n\n\n\nIf you are asked to enable Hyper-V and Containers, click to continue.  \n\n\n\n\n\n\nYour system will reboot after a few minutes.\n\n\n\n\n\n\nOnce fully started, one can see a whale icon in the notification area.  \n\n\n\n\n\n\nPlease note: This process also installs the newest version of \nDocker-Compose\n.\n\n\n\n\n\n\nStep 3: Clone the ISLE repository\n\n\nIn this section, the enduser will need to decide on an appropriate area on their laptop to clone the current ISLE project software to. Some endusers create a new directory e.g. \nProjects\n or \nCode\n within their \nDocuments\n directory. It is entirely up to the enduser to decide. In the steps below, we will create a directory called \nISLE\n in \nDocuments\n.\n\n\nPlease note:\n Windows PowerShell is already installed on Windows 10.  \n\n\n\n\n\n\nStart Launch PowerShell\n\n\n\n\nClick on the Windows/Start icon and start typing \"powershell\".  The icon for PowerShell will appear in the menu. Double-click the icon to start.\n\n\n\n\n\n\n\n\ncd ~\\Documents\n\n\n\n\n\n\ngit clone https://github.com/Islandora-Collaboration-Group/ISLE\n\n\n\n\n\n\nThis process will take 3 - 5 minutes depending on internet bandwidth\n\n\n\n\n\n\nA new directory \nISLE\n should now be visible. The enduser can check by either:\n\n\n\n\n\n\nusing the \nFile Explorer\n application to navigate to this directory\n\n\n\n\n\n\nOr within the same terminal, enter \nls\n  and verifying that \nISLE\n appears in the list.\n\n\n\n\n\n\n\n\n\n\n\n\nStep 4: Pull down the ISLE images from Dockerhub\n\n\nThis process should may take 15 - 60+ mins depending on the speed of your Internet connection.\n\n\n\n\nIn PowerShell enter the following commands, one at a time:\n\n\ncd ~\\Documents\\ISLE\n\n\ndocker pull islandoracollabgroup/isle-apache:latest\n\n\ndocker pull islandoracollabgroup/isle-fedora:latest\n\n\ndocker pull islandoracollabgroup/isle-mysql:latest\n\n\ndocker pull islandoracollabgroup/isle-proxy:latest\n\n\ndocker pull islandoracollabgroup/isle-solr:latest\n\n\n\n\nNext steps\n\n\n\n\nReturn to the \nInstall Start Here section\n for additional instructions.",
            "title": "Docker for Windows"
        },
        {
            "location": "/01_installation_host_server/install_docker_for_windows/#assumptions-pre-requisites",
            "text": "Enduser has a local laptop / workstation that conforms to the specifications outlined in the  Host Server Specifications    Enduser  must  have administrator rights on the Windows 10 computer to proceed or the installation will fail.    This guide is not intended for production usage.",
            "title": "Assumptions / Pre-Requisites"
        },
        {
            "location": "/01_installation_host_server/install_docker_for_windows/#install-process-overview",
            "text": "Install git  Install Docker for Windows  Clone the ISLE project repository  Pull down the ISLE images from Dockerhub  Next steps",
            "title": "Install process overview"
        },
        {
            "location": "/01_installation_host_server/install_docker_for_windows/#step-1-git-installation",
            "text": "In order to get a copy (clone) of the current ISLE project, git will need to be installed.  Git for Windows  is a software version control system for tracking changes in computer files and coordinating work on those files among multiple people.  Dowload the installer and run.  The installer will prompt for several choices.  Generally, you should be okay with defaults except:\n* Change \"use vi\" to either Notepad++ (if installed) or nano.  Vi can be difficult to learn and Notepad++ and nano are simpler choices for those unfamiliar with vi.  If git is already installed, then please proceed to the next section.",
            "title": "Step 1: Git Installation"
        },
        {
            "location": "/01_installation_host_server/install_docker_for_windows/#step-2-docker-for-windows-installation",
            "text": "Open a browser and navigate to https://www.docker.com/docker-windows    Click the  Download from Docker Store  button in the center of the page    Click the blue  Get Docker  button on the right of the page    The  Docker for Windows Installer.exe  file should start to download. Check your  Downloads  directory    Double-click the  Docker for Windows Installer.exe  file.      Follow the prompts.      You will be required to logout when the installation is complete.      After logging back in, Docker will run automatically.      If you are asked to enable Hyper-V and Containers, click to continue.      Your system will reboot after a few minutes.    Once fully started, one can see a whale icon in the notification area.      Please note: This process also installs the newest version of  Docker-Compose .",
            "title": "Step 2: Docker for Windows Installation"
        },
        {
            "location": "/01_installation_host_server/install_docker_for_windows/#step-3-clone-the-isle-repository",
            "text": "In this section, the enduser will need to decide on an appropriate area on their laptop to clone the current ISLE project software to. Some endusers create a new directory e.g.  Projects  or  Code  within their  Documents  directory. It is entirely up to the enduser to decide. In the steps below, we will create a directory called  ISLE  in  Documents .  Please note:  Windows PowerShell is already installed on Windows 10.      Start Launch PowerShell   Click on the Windows/Start icon and start typing \"powershell\".  The icon for PowerShell will appear in the menu. Double-click the icon to start.     cd ~\\Documents    git clone https://github.com/Islandora-Collaboration-Group/ISLE    This process will take 3 - 5 minutes depending on internet bandwidth    A new directory  ISLE  should now be visible. The enduser can check by either:    using the  File Explorer  application to navigate to this directory    Or within the same terminal, enter  ls   and verifying that  ISLE  appears in the list.",
            "title": "Step 3: Clone the ISLE repository"
        },
        {
            "location": "/01_installation_host_server/install_docker_for_windows/#step-4-pull-down-the-isle-images-from-dockerhub",
            "text": "This process should may take 15 - 60+ mins depending on the speed of your Internet connection.   In PowerShell enter the following commands, one at a time:  cd ~\\Documents\\ISLE  docker pull islandoracollabgroup/isle-apache:latest  docker pull islandoracollabgroup/isle-fedora:latest  docker pull islandoracollabgroup/isle-mysql:latest  docker pull islandoracollabgroup/isle-proxy:latest  docker pull islandoracollabgroup/isle-solr:latest",
            "title": "Step 4: Pull down the ISLE images from Dockerhub"
        },
        {
            "location": "/01_installation_host_server/install_docker_for_windows/#next-steps",
            "text": "Return to the  Install Start Here section  for additional instructions.",
            "title": "Next steps"
        },
        {
            "location": "/01_installation_host_server/install_macos_vagrant/",
            "text": "MacOS\n desktop version to use: \n10.3.x+\n\n\nThis is a detailed operating system-specific guide to setup and install all ISLE pre-requisites on a MacOS local laptop or workstation using Vagrant and VirtualBox.\n\n\nPlease note:\n This guide is for using \nVagrant / Virtualbox\n software only on a MacOS system instead of \nDocker for Mac\n.\n\n\nAssumptions / Pre-Requisites\n\n\n\n\n\n\nEnduser has a local laptop / workstation that conforms to the specifications outlined in the \nHost Server Specifications\n\n\n\n\n\n\nEnduser \nmust\n have administrator rights on the MacOS computer to proceed or the installation will fail.\n\n\n\n\n\n\nThis guide is not intended for production usage.\n\n\n\n\n\n\nInstall process overview\n\n\n\n\nInstall git\n\n\nInstall VirtualBox\n\n\nInstall VirtualBox Extensions\n\n\nInstall Vagrant\n\n\nInstall Vagrant plugin\n\n\nClone the ISLE project repository\n\n\nStart the ISLE Host VM (using vagrant)\n\n\nNext steps\n\n\n\n\nStep 1: Git Installation\n\n\nIn order to get a copy (clone) of the current ISLE project, git will need to be installed. \nGit\n is a software version control system for tracking changes in computer files and coordinating work on those files among multiple people.\n\n\n\n\n\n\nOpen a terminal and enter: \ngit --version\n.\n\n\n\n\n\n\nThis command will inform the enduser if git is already installed.  \n\n\n\n\n\n\n$git --version\ngit version 2.15.1\n\n\n\n\n\n\n\n\nIf git is not installed, running that previous command may trigger the \nInstall Command Line Developer Tools\n prompt. If the prompt appears:\n\n\n\n\nClick on the blue \nInstall\n button for the license agreement.\n\n\nClick the white \nAgree\n button.\n\n\nThe package will take 1-2 minutes to download.\n\n\nClick the \nDone\n button once finished.\n\n\n\n\n\n\n\n\nIf git is not installed and the prompt doesn't show, then follow one of the recommended methods for installing git in this nice \ntutorial\n\n\n\n\n\n\nIf git is already installed, then please proceed to the next section.\n\n\nStep 2: VirtualBox Installation\n\n\nVirtualBox is a general-purpose full virtualizer for x86 hardware, targeted at server, desktop and embedded use.\n\n\n\n\n\n\nIn a web browser, navigate to https://www.virtualbox.org/wiki/Downloads to download the latest version. Click on the \nOS X hosts\n link to start.\n\n\n\n\n\n\nThe \nVirtualBox-x.x.xxx.dmg\n file download process will start and depending on the enduser's Internet connection will take between 5 - 15 mins. This file once downloaded will be found in the endusers \nDownloads\n folder.\n\n\n\n\n\n\nDouble-click the \nVirtualBox-x.x.xxx.dmg\n file in the \nDownloads\n folder.\n\n\n\n\n\n\nA \nVirtualBox\n install prompt will appear. Within the prompt, Double click on the \nVirtualBox.pkg\n icon as also instructed in the prompt.\n\n\n\n\n\n\nA \nInstall Oracle VM VirtualBox\n prompt will appear click on the \nContinue\n button.\n\n\n\n\n\n\nThe \nStandard Install on...\n window appears, click on the \nInstall\n button at the lower right hand corner.\n\n\n\n\n\n\nThe \nInstaller is trying to install new software\n prompt appears. The enduser's User Name should already be filled out in the top field. Enter the associated password in the second field and then click the \nInstall Software Button\n.\n\n\n\n\n\n\nA \nThe installation was successful\n window should now appear. Click the \nClose\n button.\n\n\n\n\n\n\nA final prompt may appear asking the enduser if they want to move the \nOracle VM VirtualBox Installer to the Trash\n. Click the \nMove to Trash\n button.\n\n\n\n\n\n\nOpen a new \nFinder\n window and click on the \n^\n symbol to eject the \nVirtualBox\n install mount. This will close the previous \nVirtualBox\n install prompt.\n\n\n\n\n\n\nStep 3: VirtualBox Extensions for VirtualBox Installation\n\n\n\n\n\n\nIn a web browser, navigate to https://www.virtualbox.org/wiki/Downloads to download the latest version. Click on the Oracle VM VirtualBox Extension Pack \nAll supported platforms\n link to start.\n\n\n\n\n\n\nThe \nOracle_VM_VirtualBox_Extension_Pack-x.x.xxx.vbox-extpack\n file download process will start and depending on the enduser's Internet connection will take between 5 - 15 mins. This file once downloaded will be found in the endusers \nDownloads\n folder.\n\n\n\n\n\n\nDouble-click the \nOracle_VM_VirtualBox_Extension_Pack-x.x.xxx.vbox-extpack\n file in the \nDownloads\n folder.\n\n\n\n\n\n\nThis should automatically start VirtualBox and a dropdown window will appear directing the enduser to either install or upgrade the Extension pack. Click on the appropriate install or upgrade button. Either will have the same effect.\n\n\n\n\n\n\nA VirtualBox license agreement prompt should appear. Using the scrollbar on the right hand side of the prompt, scroll to the bottom (after reading of course ;) ) and click the \nI agree\n button.\n\n\n\n\n\n\nThe enduser will be asked for their user name and password in a new prompt. Enter accordingly.\n\n\n\n\n\n\nThe extension pack should now install (<10 seconds) and a new prompt with \nThe extension pack Oracle VM VirtualBox Extension Pack was installed successfully.\n should appear. Click the \nOK\n button to close. The enduser can also now close the VirtualBox window / application.\n\n\n\n\n\n\nStep 4: Vagrant Installation\n\n\nVagrant is a tool for building and managing virtual machine environments in a single workflow. Endusers can read more \nhere\n\n\n\n\n\n\nIn a web browser, navigate to https://www.vagrantup.com/downloads.html to download the latest version. Click on the \n64-bit\n link in the Mac OS X section.\n\n\n\n\n\n\nThe \nvagrant_x.x.x_x86_64.dmg\n file download process will start and depending on the enduser's Internet connection will take between 5 - 15 mins. This file once downloaded will be found in the endusers \nDownloads\n folder.\n\n\n\n\n\n\nDouble-click the \nvagrant_x.x.x_x86_64.dmg\n file in the \nDownloads\n folder.\n\n\n\n\n\n\nA \nVagrant\n install prompt will appear. Within the prompt, Double click on the \nvagrant.pkg\n icon.\n\n\n\n\n\n\nA \nInstall Vagrant\n prompt will appear, click on the \nContinue\n button.\n\n\n\n\n\n\nThe \nStandard Install on...\n window appears, click on the \nInstall\n button at the lower right hand corner.\n\n\n\n\n\n\nThe \nInstaller is trying to install new software\n prompt appears. The enduser's User Name should already be filled out in the top field. Enter the associated password in the second field and then click the \nInstall Software Button\n.\n\n\n\n\n\n\nA \nThe installation was successful\n window should now appear. Click the \nClose\n button.\n\n\n\n\n\n\nA final prompt may appear asking the enduser if they want to move the \nVagrant Installer to the Trash\n. Click the \nMove to Trash\n button.\n\n\n\n\n\n\nOpen a new \nFinder\n window and click on the \n^\n symbol to eject the \nVagrant\n install mount. This will close the previous \nVagrant\n install prompt.\n\n\n\n\n\n\nStep 5: Vagrant Plugin Installation\n\n\n\n\n\n\nOpen a terminal and enter the following:\n\n\n\n\n\n\nvagrant plugin install vagrant-hostsupdater\n\n\n\n\n\n\nThis process should take 10 - 30 seconds depending on Internet speed\n\n\n\n\n\n\nExample\n\n\n\nvagrant plugin install vagrant-hostsupdater\n\nInstalling the 'vagrant-hostsupdater' plugin. This can take a few minutes...\n\nInstalled the plugin 'vagrant-hostsupdater (1.0.2)'!\n\n\n\n\nStep 6: Clone the ISLE repository\n\n\nIn this section, the enduser will need to decide on an appropriate area on their laptop to clone the current ISLE project software to.\n\n\nSome endusers create a new directory e.g. \nProjects\n or \nCode\n within their \nDocuments\n directory. It is entirely up to the enduser to decide. The steps below are an example.\n\n\nThe built-in terminal for MacOs can be found in \n~/Applications/Utilities/Terminal\n\n\n\n\n\n\nOpen a terminal\n\n\n\n\n\n\ncd ~/Documents\n\n\n\n\n\n\ngit clone https://github.com/Islandora-Collaboration-Group/ISLE\n\n\n\n\n\n\nThis process will take 3 - 5 minutes depending on internet bandwidth\n\n\n\n\n\n\nA new directory \nISLE\n should now be visible. The enduser can check by either:\n\n\n\n\n\n\nusing the \nFinder\n application to navigate to this directory\n\n\n\n\n\n\nOr within the same terminal, enter \nls -lha\n\n\n\n\n\n\nStep 7: Start the ISLE Host Vagrant VM and ssh in\n\n\nEndusers have a choice of using a CentOS or Ubuntu Vagrant VM.\n\n\nWithin the \nISLE/vagrant\n directory, there are two child directories:\n\n\n\n\n\n\nCentOS - contains a Vagrantfile configured for a CentOS 7.x+ server with the IP of \n10.10.10.30\n\n\n\n\n\n\nUbuntu - contains a Vagrantfile configured for a CentOS 7.x+ server with the IP of \n10.10.10.30\n\n\n\n\n\n\nOpen a terminal and enter the following:\n\n\n\n\n\n\ncd ~/path_to/ISLE/vagrant/\n\n\n\n\nvagrant up\n\n\n\n\nThis process should start the ISLE Host Vagrant VM and should take anywhere from 10 - 20 minutes for the software (\nVagrant box\n) to download and start.\n\n\nOnce this process finishes and the ISLE Host Vagrant VM is running.\n\n\n\n\n\n\nThe enduser should enter in the terminal:\n\n\n\n\nvagrant ssh\n\n\n\n\n\n\n\n\nThis command shells in the vagrant user to the ISLE Host.\n\n\nNext steps\n\n\n\n\nReturn to the \nInstall Start Here section\n for additional instructions.",
            "title": "Vagrant & VirtualBox on MacOS"
        },
        {
            "location": "/01_installation_host_server/install_macos_vagrant/#assumptions-pre-requisites",
            "text": "Enduser has a local laptop / workstation that conforms to the specifications outlined in the  Host Server Specifications    Enduser  must  have administrator rights on the MacOS computer to proceed or the installation will fail.    This guide is not intended for production usage.",
            "title": "Assumptions / Pre-Requisites"
        },
        {
            "location": "/01_installation_host_server/install_macos_vagrant/#install-process-overview",
            "text": "Install git  Install VirtualBox  Install VirtualBox Extensions  Install Vagrant  Install Vagrant plugin  Clone the ISLE project repository  Start the ISLE Host VM (using vagrant)  Next steps",
            "title": "Install process overview"
        },
        {
            "location": "/01_installation_host_server/install_macos_vagrant/#step-1-git-installation",
            "text": "In order to get a copy (clone) of the current ISLE project, git will need to be installed.  Git  is a software version control system for tracking changes in computer files and coordinating work on those files among multiple people.    Open a terminal and enter:  git --version .    This command will inform the enduser if git is already installed.      $git --version\ngit version 2.15.1    If git is not installed, running that previous command may trigger the  Install Command Line Developer Tools  prompt. If the prompt appears:   Click on the blue  Install  button for the license agreement.  Click the white  Agree  button.  The package will take 1-2 minutes to download.  Click the  Done  button once finished.     If git is not installed and the prompt doesn't show, then follow one of the recommended methods for installing git in this nice  tutorial    If git is already installed, then please proceed to the next section.",
            "title": "Step 1: Git Installation"
        },
        {
            "location": "/01_installation_host_server/install_macos_vagrant/#step-2-virtualbox-installation",
            "text": "VirtualBox is a general-purpose full virtualizer for x86 hardware, targeted at server, desktop and embedded use.    In a web browser, navigate to https://www.virtualbox.org/wiki/Downloads to download the latest version. Click on the  OS X hosts  link to start.    The  VirtualBox-x.x.xxx.dmg  file download process will start and depending on the enduser's Internet connection will take between 5 - 15 mins. This file once downloaded will be found in the endusers  Downloads  folder.    Double-click the  VirtualBox-x.x.xxx.dmg  file in the  Downloads  folder.    A  VirtualBox  install prompt will appear. Within the prompt, Double click on the  VirtualBox.pkg  icon as also instructed in the prompt.    A  Install Oracle VM VirtualBox  prompt will appear click on the  Continue  button.    The  Standard Install on...  window appears, click on the  Install  button at the lower right hand corner.    The  Installer is trying to install new software  prompt appears. The enduser's User Name should already be filled out in the top field. Enter the associated password in the second field and then click the  Install Software Button .    A  The installation was successful  window should now appear. Click the  Close  button.    A final prompt may appear asking the enduser if they want to move the  Oracle VM VirtualBox Installer to the Trash . Click the  Move to Trash  button.    Open a new  Finder  window and click on the  ^  symbol to eject the  VirtualBox  install mount. This will close the previous  VirtualBox  install prompt.",
            "title": "Step 2: VirtualBox Installation"
        },
        {
            "location": "/01_installation_host_server/install_macos_vagrant/#step-3-virtualbox-extensions-for-virtualbox-installation",
            "text": "In a web browser, navigate to https://www.virtualbox.org/wiki/Downloads to download the latest version. Click on the Oracle VM VirtualBox Extension Pack  All supported platforms  link to start.    The  Oracle_VM_VirtualBox_Extension_Pack-x.x.xxx.vbox-extpack  file download process will start and depending on the enduser's Internet connection will take between 5 - 15 mins. This file once downloaded will be found in the endusers  Downloads  folder.    Double-click the  Oracle_VM_VirtualBox_Extension_Pack-x.x.xxx.vbox-extpack  file in the  Downloads  folder.    This should automatically start VirtualBox and a dropdown window will appear directing the enduser to either install or upgrade the Extension pack. Click on the appropriate install or upgrade button. Either will have the same effect.    A VirtualBox license agreement prompt should appear. Using the scrollbar on the right hand side of the prompt, scroll to the bottom (after reading of course ;) ) and click the  I agree  button.    The enduser will be asked for their user name and password in a new prompt. Enter accordingly.    The extension pack should now install (<10 seconds) and a new prompt with  The extension pack Oracle VM VirtualBox Extension Pack was installed successfully.  should appear. Click the  OK  button to close. The enduser can also now close the VirtualBox window / application.",
            "title": "Step 3: VirtualBox Extensions for VirtualBox Installation"
        },
        {
            "location": "/01_installation_host_server/install_macos_vagrant/#step-4-vagrant-installation",
            "text": "Vagrant is a tool for building and managing virtual machine environments in a single workflow. Endusers can read more  here    In a web browser, navigate to https://www.vagrantup.com/downloads.html to download the latest version. Click on the  64-bit  link in the Mac OS X section.    The  vagrant_x.x.x_x86_64.dmg  file download process will start and depending on the enduser's Internet connection will take between 5 - 15 mins. This file once downloaded will be found in the endusers  Downloads  folder.    Double-click the  vagrant_x.x.x_x86_64.dmg  file in the  Downloads  folder.    A  Vagrant  install prompt will appear. Within the prompt, Double click on the  vagrant.pkg  icon.    A  Install Vagrant  prompt will appear, click on the  Continue  button.    The  Standard Install on...  window appears, click on the  Install  button at the lower right hand corner.    The  Installer is trying to install new software  prompt appears. The enduser's User Name should already be filled out in the top field. Enter the associated password in the second field and then click the  Install Software Button .    A  The installation was successful  window should now appear. Click the  Close  button.    A final prompt may appear asking the enduser if they want to move the  Vagrant Installer to the Trash . Click the  Move to Trash  button.    Open a new  Finder  window and click on the  ^  symbol to eject the  Vagrant  install mount. This will close the previous  Vagrant  install prompt.",
            "title": "Step 4: Vagrant Installation"
        },
        {
            "location": "/01_installation_host_server/install_macos_vagrant/#step-5-vagrant-plugin-installation",
            "text": "Open a terminal and enter the following:    vagrant plugin install vagrant-hostsupdater    This process should take 10 - 30 seconds depending on Internet speed    Example  \nvagrant plugin install vagrant-hostsupdater\n\nInstalling the 'vagrant-hostsupdater' plugin. This can take a few minutes...\n\nInstalled the plugin 'vagrant-hostsupdater (1.0.2)'!",
            "title": "Step 5: Vagrant Plugin Installation"
        },
        {
            "location": "/01_installation_host_server/install_macos_vagrant/#step-6-clone-the-isle-repository",
            "text": "In this section, the enduser will need to decide on an appropriate area on their laptop to clone the current ISLE project software to.  Some endusers create a new directory e.g.  Projects  or  Code  within their  Documents  directory. It is entirely up to the enduser to decide. The steps below are an example.  The built-in terminal for MacOs can be found in  ~/Applications/Utilities/Terminal    Open a terminal    cd ~/Documents    git clone https://github.com/Islandora-Collaboration-Group/ISLE    This process will take 3 - 5 minutes depending on internet bandwidth    A new directory  ISLE  should now be visible. The enduser can check by either:    using the  Finder  application to navigate to this directory    Or within the same terminal, enter  ls -lha",
            "title": "Step 6: Clone the ISLE repository"
        },
        {
            "location": "/01_installation_host_server/install_macos_vagrant/#step-7-start-the-isle-host-vagrant-vm-and-ssh-in",
            "text": "Endusers have a choice of using a CentOS or Ubuntu Vagrant VM.  Within the  ISLE/vagrant  directory, there are two child directories:    CentOS - contains a Vagrantfile configured for a CentOS 7.x+ server with the IP of  10.10.10.30    Ubuntu - contains a Vagrantfile configured for a CentOS 7.x+ server with the IP of  10.10.10.30    Open a terminal and enter the following:    cd ~/path_to/ISLE/vagrant/   vagrant up   This process should start the ISLE Host Vagrant VM and should take anywhere from 10 - 20 minutes for the software ( Vagrant box ) to download and start.  Once this process finishes and the ISLE Host Vagrant VM is running.    The enduser should enter in the terminal:   vagrant ssh     This command shells in the vagrant user to the ISLE Host.",
            "title": "Step 7: Start the ISLE Host Vagrant VM and ssh in"
        },
        {
            "location": "/01_installation_host_server/install_macos_vagrant/#next-steps",
            "text": "Return to the  Install Start Here section  for additional instructions.",
            "title": "Next steps"
        },
        {
            "location": "/02_installation_test/ild_example_user_story/",
            "text": "This page left intentionally blank, pending full community documentation for this process.",
            "title": "Test Site Example User Story"
        },
        {
            "location": "/02_installation_test/ild_installation_guide/",
            "text": "Follow this guide to spin up and install ISLE utilizing the built-in \nisle.localdomain\n domain name for review and testing.\n\n\nThis test ISLE / Islandora environment (\nisle.localdomain\n) includes an un-themed Drupal website and empty Fedora repository for endusers to develop code, test ingests, test metadata, update fields in SOLR indexing and otherwise \"kick the tires\" on ISLE prior for further usages e.g. creating a new ISLE production site or migrating a current Islandora production site to ISLE.\n\n\nWhile this checklist will attempt to point out most of the usage challenges or pitfalls, ISLE assumes no responsibility or liability in this matter should an enduser have customizations beyond what this guide outlines.\n\n\nPlease note:\n There is a \nGlossary\n with relevant terms to help guide installation.\n\n\nAssumptions / Prerequisites\n\n\n\n\n\n\nLaptop / workstation that conforms to the specifications outlined in the \nHost Server Specifications\n\n\n\n\n\n\nThis test site guide is designed for a local laptop / workstation that has already followed the appropriate setup and configuration instructions in the \nTest ISLE\n section of the \nInstall Start Here\n guide.\n\n\n\n\n\n\nInstructions below assume a MacOS or Linux laptop or workstation. Windows users may have to adjust / swap out various tools as needed.\n\n\n\n\n\n\nThese directions depend on the type of local computer used to connect via browser to Islandora.\n\n\n\n\n\n\n\n\nStep 0: edit /etc/hosts on local laptop or desktop\n\n\nEdit 1: Using Vagrant on all OSes\n\n\n\n\nVagrant\n If you are using Vagrant on a laptop move on to the next section (\nSummary: Test site launch process\n) as this part is handled automatically.\n\n\n\n\n\n\nEdit 1: Using Virtualbox VM (non-Vagrant) on MacOS or Ubuntu Desktop\n\n\n\n\n\n\nFrom the instructions in setting up the Virtualbox VM on your OS (MacOS, Ubuntu or Windows), the IP used to setup the Host-Only network was \n10.10.10.130\n\n\n\n\n\n\nAdd the value of \n10.10.10.130 isle.localdomain\n to the laptop / workstation's \n/etc/hosts\n file.   \n\n\n\n\n\n\nFor endusers running MacOS and Ubuntu Desktop:\n\n\n\n\n\n\nOpen a terminal on the local laptop\n\n\n\n\n\n\nEnter: \nsudo nano /etc/hosts\n\n\n\n\nFor endusers familiar with editing files on the command line, vim or alternative tools can be used in lieu of nano\n\n\n\n\n\n\n\n\nEnter the laptop enduser password\n\n\n\n\n\n\nAdd the values below the \n127.0.0.1\n entry in the \n/etc/hosts\n file.\n\n\n\n\n10.10.10.130 isle.localdomain\n  \n\n\n\n\n\n\n\n\nExample\n\n\n  127.0.0.1 localhost\n  10.10.10.130 isle.localdomain\n\n\n\n\n\n\nEnter \nCntrl\n and the letter \no\n together to write the changes to the file.\n\n\nEnter \nCntrl\n and the letter \nx\n together to exit the file.\n\n\n\n\n\n\nEdit 1: Using Virtualbox VM (non-Vagrant) on Windows\n\n\n\n\n\n\nFor endusers running Windows 10:\n\n\n\n\n\n\nPress the Windows key.\n\n\n\n\n\n\nType \nNotepad\n in the search field.\n\n\n\n\n\n\nIn the search results, right-click \nNotepad\n and select \nRun as administrator\n.\n\n\n\n\n\n\nFrom \nNotepad\n, open the following file: \nC:\\Windows\\System32\\Drivers\\etc\\hosts\n\n\n\n\n\n\nAdd the values below the \n127.0.0.1\n entry in the \n/etc/hosts\n file.\n\n\n\n\n10.10.10.130 isle.localdomain\n  \n\n\n\n\n\n\n\n\nClick File > Save to save your changes.\n\n\n\n\n\n\n\n\n\n\n\n\nEdit 1: Using Docker for Mac\n\n\n\n\n\n\nDocker For Mac\n If you are using Docker For Mac, then use the IP address of \n127.0.0.1\n\n\n\n\n\n\nOpen a terminal on the local laptop\n\n\n\n\n\n\nEnter: \nsudo nano /etc/hosts\n\n\n\n\n\n\nFor endusers familiar with editing files on the command line, vim or alternative tools can be used in lieu of nano\n\n\n\n\n\n\nEnter the laptop enduser password\n\n\n\n\n\n\nAdd the values next to the \n127.0.0.1 localhost\n entry in the \n/etc/hosts\n file.\n\n\n\n\n127.0.0.1 localhost isle.localdomain\n with a space in between the entries.  \n\n\n\n\n\n\n\n\nEnter \nCntrl\n and the letter \no\n together to write the changes to the file.\n\n\n\n\n\n\nEnter \nCntrl\n and the letter \nx\n together to exit the file.\n\n\n\n\n\n\n\n\nEdit 1: Using Docker for Windows\n\n\n\n\n\n\nFor endusers running Windows 10:\n\n\n\n\n\n\nPress the Windows key.\n\n\n\n\n\n\nType \nNotepad\n in the search field.\n\n\n\n\n\n\nIn the search results, right-click \nNotepad\n and select \nRun as administrator\n.\n\n\n\n\n\n\nFrom \nNotepad\n, open the following file: \nC:\\Windows\\System32\\Drivers\\etc\\hosts\n\n\n\n\n\n\nAdd the values next to the \n127.0.0.1 localhost\n entry in the \n/etc/hosts\n file.\n\n\n\n\n127.0.0.1 localhost isle.localdomain\n with a space in between the entries.\n\n\n\n\n\n\n\n\nClick File > Save to save your changes.\n\n\n\n\n\n\n\n\n\n\n\n\nStep 1: Test site launch process\n\n\n\n\n\n\nIf using:\n\n\n\n\n\n\nVagrant or a Virtualbox VM:\n The steps below assume you are shelled in (connected by SSH) as the \nislandora\n user into the ISLE Host VM via a terminal on a local laptop.\n\n\n\n\n\n\nssh islandora@10.10.10.130\n\n\n\n\n\n\ncd /opt/ISLE\n\n\n\n\n\n\n\n\n\n\nDocker for Mac:\n Continue to use the open terminal and navigate \ncd /opt/ISLE\n to the ISLE project directory.\n\n\n\n\n\n\nDocker for Windows:\n Continue to use the open PowerShell window and navigate to the ISLE project directory if not already there: \ncd ~\\Documents\\ISLE\n.\n\n\n\n\n\n\n\n\n\n\nThe following steps below are for all users (\nVagrant, VM, non Vagrant and Docker for MacOS, Windows and Ubuntu Desktop users alike.\n)\n\n\nThe install times stated below for each container are highly dependent on the enduser's available Internet bandwidth and could take more or less time accordingly.\n\n\n\n\n\n\nWithin the open terminal, run:\n\n\n\n\ndocker-compose up -d\n\n\n\n\n\n\n\n\nThis is going to download and start all five ISLE Docker images (\nroughly 6 GB of data so it may take a little while depending on your Internet connection\n)\n\n\n\n\n\n\nTo check if the containers are running: \ndocker ps\n (shows only running containers)\n\n\n\n\nIf you don't see all five containers try: \ndocker ps -a\n (shows all containers running or not)\n\n\n\n\n\n\n\n\nIf all five containers are NOT running, then proceed to the Troubleshooting section first before advancing to the \"Install script on Apache container\" section below\n\n\n\n\nStep 2: Run install script on Apache container\n\n\nTotal build process\n may take up to 15 - 45 minutes (\ndepending on system and internet speeds\n)\n\n\n\n\n\n\nRun the following shell scripts manually on the apache container  \n\n\n\n\ndocker exec -it isle-apache-ld bash\n\n\n\n\n\n\n\n\nFor Windows Users only\n\n\n\n\nYou may be prompted by Windows to:\n\n\nShare the C drive with Docker.  Click okay or allow\n\n\nEnter your username and password\n\n\nAllow vpnkit.exe to communicate with the network.  Click Okay or Allow to accept the default selection.\n\n\nIf the process seems to halt, check the taskbar for background windows.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThis will put you into a root prompt at the command line where you will enter the following commands:\n\n\n\n\n\n\ncd /tmp/isle_drupal_build_tools/\n\n\n\n\n\n\nchmod 777 *.sh\n\n\n\n\n\n\n./install_isle_ld_site.sh\n\n\n\n\nThis script will take some time (see estimate above.)\n You should see a lot of green [ok] messages.\n\n\nIf the script appears to pause and prompt for y/n, do not enter any values; the script will answer for you.  \n\n\nWait until \"Drush script finished! ...exiting\" before proceeding.**\n\n\n\n\n\n\n\n\n\n\n\n\nOnce finished press the \nCntrl\n and \nd\n keys or type \nexit\n to get out of the apache container\n\n\n\n\n\n\nTesting the site\n\n\n\n\n\n\nTest (QC) the resulting setup by opening a web browser to the \nisle.localdomain\n URL of the new ISLE sample site (i.e. \nhttps://isle.localdomain\n) and logging in.\n\n\n\n\n\n\nUpon entering \nhttps://isle.localdomain\n within a browser, you will see a SSL error warning that the site is unsafe. It is safe, it simply uses \"self-signed\" SSL certs. Ignore the error and proceed to the site.\n\n\n\n\n\n\nTo log in to the Islandora Drupal Site:\n\n\n\n\nUsername: \nisle_localdomain_admin\n\n\nPassword: \nisle_localdomain_adminpw2018\n\n\n\n\n\n\n\n\nThere is additional information for users and passwords that can be found on the \nTest Site Resources\n page.\n\n\n\n\n\n\nSample objects for ingest\n\n\nCourteous of the \nIslandora Collaboration Group\n there is a sample set of objects and corresponding metadata that can be used for ingest.\n\n\nMore information can be found on the \nTest Site Resources\n page.\n\n\nPost Ingest Search Tip\n\n\nAfter ingesting content, you will need to add an Islandora Simple Search block to the Drupal structure.  The default search box that appears on install will only search Drupal content, not Islandora content.\n\n\n\n\nStructure Menu > Blocks\n\n\nScroll down to find \"Islandora Simple Search\".  Use dropdown to set to Sidebar Second.\n\n\nSave Blocks on the bottom of the page\n\n\n\n\nThis process will now allow you to search for ingested objects that have been indexed by SOLR.\n\n\n\n\nNote\n\n\n\n\nThe cronjob setting in the \ninstall_isle_ld_site.sh\n script is still commented out as this will need to be flowed into the Docker build process prior. Issue with default Docker root user vs using islandora user. Drupal cron can run properly manually however.\n\n\n\n\nWARNING\n\n\n\n\n\n\nPlease always use the \nhttps://isle.localdomain\n domain to view the site, login etc\n\n\n\n\n\n\nDo not use an IP e.g. \nhttps://10.10.10.130 or https://127.0.0.01\n to view the Drupal site, login etc as some components won't work e.g. Large Images using the OpenSeadragon Viewer.\n\n\n\n\n\n\n\n\nTroubleshooting\n\n\nPort Conflicts\n\n\nIf you encounter an error like this:\n\n\nError starting userland proxy: Bind for 0.0.0.0:xxxx failed: port is already allocated\n\n\nthen ISLE may have encountered a conflict with the \nxxxx\n port identified in the error message.\n\n\nIn MacOS, this can frequently be caused by a local Apache or Nginx web server, or local MySQL server.  \n\n\nYou may need to remove or disable these local web servers before you can successfully install ISLE.\n\n\n\n\n\n\nIf you have a local Apache web server that ships with most MacOS machines may conflict with port 80, and can usually be disabled from a terminal using these commands:\n\n\n\n\nsudo apachectl stop\n\n\nsudo launchctl unload -w /System/Library/LaunchDaemons/org.apache.httpd.plist 2>/dev/null\n\n\n\n\n\n\n\n\nIf you have a local \nNginx\n web server it may conflict with port 8080, and it can usually be disabled from a terminal using:\n\n\n\n\nsudo nginx -s stop\n\n\n\n\n\n\n\n\nOnce your web server(s) have been disabled, resume the ISLE install process by repeating your last installation command, presumably \ndocker-compose up -d\n.\n\n\nNon-running Containers\n\n\nIf you don't see five running containers, then stop the running containers with \ndocker-compose down -d\n and start the containers one at a time following the instructions below:\n\n\n\n\n\n\nMySQL image pull & container launch\n\n\ndocker pull islandoracollabgroup/isle-mysql:latest\n\n\ndocker-compose up -d mysql\n\n\n\n\n\n\nFedora image pull & container launch\n\n\ndocker pull islandoracollabgroup/isle-fedora:latest\n\n\ndocker-compose up -d fedora\n\n\n(Optional but recommended troubleshooting step)\n\n\n\n\nPlease note the Tomcat service requires about  one to three minutes to startup and as such if the enduser rushes to the URL supplied below, the service page maytime out or be reported as unreachable. Give it a little time.\n\n\nAfter spinning up fedora container, check if the Fedora service is running prior to advancing.\n\n\nNavigate to http://fedora:8080/manager/html a popup login prompt should appear.\n\n\nEnter the user name of \nadmin\n and the password of \nild_tc_adm_2018\n\n\nUpon login a large display of running Tomcat applications should display, scroll down to fedora\n\n\nThe application state / status should be true\n\n\nIf false appears instead, attempt to restart the fedora service manually.\n\n\nSelect the restart button to the right of the status area.\n\n\nIf it still fails, review the mounted fedora logs. The docker-compose.yml file will indicate where the logs are located.\n\n\nUsing terminal and then entering a command like \ntail -n 300 - <path to ISLE project/data/fedora/log/tomcat:/usr/local/tomcat/logs/fedora.log\n should display enough information to troubleshoot or restart the entire startup process.\n\n\n\n\n\n\n\n\nSolr image pull & container launch\n\n\ndocker pull islandoracollabgroup/isle-solr:latest\n\n\ndocker-compose up -d solr\n\n\n\n\n\n\nApache image pull & container launch\n\n\ndocker pull islandoracollabgroup/isle-apache:latest\n\n\ndocker-compose up -d apache\n\n\n\n\n\n\nProxy image pull & container launch\n\n\ndocker pull islandoracollabgroup/isle-proxy:latest\n\n\ndocker-compose up -d proxy",
            "title": "Test Site Installation Guide"
        },
        {
            "location": "/02_installation_test/ild_installation_guide/#assumptions-prerequisites",
            "text": "Laptop / workstation that conforms to the specifications outlined in the  Host Server Specifications    This test site guide is designed for a local laptop / workstation that has already followed the appropriate setup and configuration instructions in the  Test ISLE  section of the  Install Start Here  guide.    Instructions below assume a MacOS or Linux laptop or workstation. Windows users may have to adjust / swap out various tools as needed.    These directions depend on the type of local computer used to connect via browser to Islandora.",
            "title": "Assumptions / Prerequisites"
        },
        {
            "location": "/02_installation_test/ild_installation_guide/#step-0-edit-etchosts-on-local-laptop-or-desktop",
            "text": "",
            "title": "Step 0: edit /etc/hosts on local laptop or desktop"
        },
        {
            "location": "/02_installation_test/ild_installation_guide/#edit-1-using-vagrant-on-all-oses",
            "text": "Vagrant  If you are using Vagrant on a laptop move on to the next section ( Summary: Test site launch process ) as this part is handled automatically.",
            "title": "Edit 1: Using Vagrant on all OSes"
        },
        {
            "location": "/02_installation_test/ild_installation_guide/#edit-1-using-virtualbox-vm-non-vagrant-on-macos-or-ubuntu-desktop",
            "text": "From the instructions in setting up the Virtualbox VM on your OS (MacOS, Ubuntu or Windows), the IP used to setup the Host-Only network was  10.10.10.130    Add the value of  10.10.10.130 isle.localdomain  to the laptop / workstation's  /etc/hosts  file.       For endusers running MacOS and Ubuntu Desktop:    Open a terminal on the local laptop    Enter:  sudo nano /etc/hosts   For endusers familiar with editing files on the command line, vim or alternative tools can be used in lieu of nano     Enter the laptop enduser password    Add the values below the  127.0.0.1  entry in the  /etc/hosts  file.   10.10.10.130 isle.localdomain        Example    127.0.0.1 localhost\n  10.10.10.130 isle.localdomain   Enter  Cntrl  and the letter  o  together to write the changes to the file.  Enter  Cntrl  and the letter  x  together to exit the file.",
            "title": "Edit 1: Using Virtualbox VM (non-Vagrant) on MacOS or Ubuntu Desktop"
        },
        {
            "location": "/02_installation_test/ild_installation_guide/#edit-1-using-virtualbox-vm-non-vagrant-on-windows",
            "text": "For endusers running Windows 10:    Press the Windows key.    Type  Notepad  in the search field.    In the search results, right-click  Notepad  and select  Run as administrator .    From  Notepad , open the following file:  C:\\Windows\\System32\\Drivers\\etc\\hosts    Add the values below the  127.0.0.1  entry in the  /etc/hosts  file.   10.10.10.130 isle.localdomain        Click File > Save to save your changes.",
            "title": "Edit 1: Using Virtualbox VM (non-Vagrant) on Windows"
        },
        {
            "location": "/02_installation_test/ild_installation_guide/#edit-1-using-docker-for-mac",
            "text": "Docker For Mac  If you are using Docker For Mac, then use the IP address of  127.0.0.1    Open a terminal on the local laptop    Enter:  sudo nano /etc/hosts    For endusers familiar with editing files on the command line, vim or alternative tools can be used in lieu of nano    Enter the laptop enduser password    Add the values next to the  127.0.0.1 localhost  entry in the  /etc/hosts  file.   127.0.0.1 localhost isle.localdomain  with a space in between the entries.       Enter  Cntrl  and the letter  o  together to write the changes to the file.    Enter  Cntrl  and the letter  x  together to exit the file.",
            "title": "Edit 1: Using Docker for Mac"
        },
        {
            "location": "/02_installation_test/ild_installation_guide/#edit-1-using-docker-for-windows",
            "text": "For endusers running Windows 10:    Press the Windows key.    Type  Notepad  in the search field.    In the search results, right-click  Notepad  and select  Run as administrator .    From  Notepad , open the following file:  C:\\Windows\\System32\\Drivers\\etc\\hosts    Add the values next to the  127.0.0.1 localhost  entry in the  /etc/hosts  file.   127.0.0.1 localhost isle.localdomain  with a space in between the entries.     Click File > Save to save your changes.",
            "title": "Edit 1: Using Docker for Windows"
        },
        {
            "location": "/02_installation_test/ild_installation_guide/#step-1-test-site-launch-process",
            "text": "If using:    Vagrant or a Virtualbox VM:  The steps below assume you are shelled in (connected by SSH) as the  islandora  user into the ISLE Host VM via a terminal on a local laptop.    ssh islandora@10.10.10.130    cd /opt/ISLE      Docker for Mac:  Continue to use the open terminal and navigate  cd /opt/ISLE  to the ISLE project directory.    Docker for Windows:  Continue to use the open PowerShell window and navigate to the ISLE project directory if not already there:  cd ~\\Documents\\ISLE .      The following steps below are for all users ( Vagrant, VM, non Vagrant and Docker for MacOS, Windows and Ubuntu Desktop users alike. )  The install times stated below for each container are highly dependent on the enduser's available Internet bandwidth and could take more or less time accordingly.    Within the open terminal, run:   docker-compose up -d     This is going to download and start all five ISLE Docker images ( roughly 6 GB of data so it may take a little while depending on your Internet connection )    To check if the containers are running:  docker ps  (shows only running containers)   If you don't see all five containers try:  docker ps -a  (shows all containers running or not)     If all five containers are NOT running, then proceed to the Troubleshooting section first before advancing to the \"Install script on Apache container\" section below",
            "title": "Step 1: Test site launch process"
        },
        {
            "location": "/02_installation_test/ild_installation_guide/#step-2-run-install-script-on-apache-container",
            "text": "Total build process  may take up to 15 - 45 minutes ( depending on system and internet speeds )    Run the following shell scripts manually on the apache container     docker exec -it isle-apache-ld bash     For Windows Users only   You may be prompted by Windows to:  Share the C drive with Docker.  Click okay or allow  Enter your username and password  Allow vpnkit.exe to communicate with the network.  Click Okay or Allow to accept the default selection.  If the process seems to halt, check the taskbar for background windows.          This will put you into a root prompt at the command line where you will enter the following commands:    cd /tmp/isle_drupal_build_tools/    chmod 777 *.sh    ./install_isle_ld_site.sh   This script will take some time (see estimate above.)  You should see a lot of green [ok] messages.  If the script appears to pause and prompt for y/n, do not enter any values; the script will answer for you.    Wait until \"Drush script finished! ...exiting\" before proceeding.**       Once finished press the  Cntrl  and  d  keys or type  exit  to get out of the apache container",
            "title": "Step 2: Run install script on Apache container"
        },
        {
            "location": "/02_installation_test/ild_installation_guide/#testing-the-site",
            "text": "Test (QC) the resulting setup by opening a web browser to the  isle.localdomain  URL of the new ISLE sample site (i.e.  https://isle.localdomain ) and logging in.    Upon entering  https://isle.localdomain  within a browser, you will see a SSL error warning that the site is unsafe. It is safe, it simply uses \"self-signed\" SSL certs. Ignore the error and proceed to the site.    To log in to the Islandora Drupal Site:   Username:  isle_localdomain_admin  Password:  isle_localdomain_adminpw2018     There is additional information for users and passwords that can be found on the  Test Site Resources  page.",
            "title": "Testing the site"
        },
        {
            "location": "/02_installation_test/ild_installation_guide/#sample-objects-for-ingest",
            "text": "Courteous of the  Islandora Collaboration Group  there is a sample set of objects and corresponding metadata that can be used for ingest.  More information can be found on the  Test Site Resources  page.",
            "title": "Sample objects for ingest"
        },
        {
            "location": "/02_installation_test/ild_installation_guide/#post-ingest-search-tip",
            "text": "After ingesting content, you will need to add an Islandora Simple Search block to the Drupal structure.  The default search box that appears on install will only search Drupal content, not Islandora content.   Structure Menu > Blocks  Scroll down to find \"Islandora Simple Search\".  Use dropdown to set to Sidebar Second.  Save Blocks on the bottom of the page   This process will now allow you to search for ingested objects that have been indexed by SOLR.",
            "title": "Post Ingest Search Tip"
        },
        {
            "location": "/02_installation_test/ild_installation_guide/#note",
            "text": "The cronjob setting in the  install_isle_ld_site.sh  script is still commented out as this will need to be flowed into the Docker build process prior. Issue with default Docker root user vs using islandora user. Drupal cron can run properly manually however.",
            "title": "Note"
        },
        {
            "location": "/02_installation_test/ild_installation_guide/#warning",
            "text": "Please always use the  https://isle.localdomain  domain to view the site, login etc    Do not use an IP e.g.  https://10.10.10.130 or https://127.0.0.01  to view the Drupal site, login etc as some components won't work e.g. Large Images using the OpenSeadragon Viewer.",
            "title": "WARNING"
        },
        {
            "location": "/02_installation_test/ild_installation_guide/#troubleshooting",
            "text": "",
            "title": "Troubleshooting"
        },
        {
            "location": "/02_installation_test/ild_installation_guide/#port-conflicts",
            "text": "If you encounter an error like this:  Error starting userland proxy: Bind for 0.0.0.0:xxxx failed: port is already allocated  then ISLE may have encountered a conflict with the  xxxx  port identified in the error message.  In MacOS, this can frequently be caused by a local Apache or Nginx web server, or local MySQL server.    You may need to remove or disable these local web servers before you can successfully install ISLE.    If you have a local Apache web server that ships with most MacOS machines may conflict with port 80, and can usually be disabled from a terminal using these commands:   sudo apachectl stop  sudo launchctl unload -w /System/Library/LaunchDaemons/org.apache.httpd.plist 2>/dev/null     If you have a local  Nginx  web server it may conflict with port 8080, and it can usually be disabled from a terminal using:   sudo nginx -s stop     Once your web server(s) have been disabled, resume the ISLE install process by repeating your last installation command, presumably  docker-compose up -d .",
            "title": "Port Conflicts"
        },
        {
            "location": "/02_installation_test/ild_installation_guide/#non-running-containers",
            "text": "If you don't see five running containers, then stop the running containers with  docker-compose down -d  and start the containers one at a time following the instructions below:    MySQL image pull & container launch  docker pull islandoracollabgroup/isle-mysql:latest  docker-compose up -d mysql    Fedora image pull & container launch  docker pull islandoracollabgroup/isle-fedora:latest  docker-compose up -d fedora  (Optional but recommended troubleshooting step)   Please note the Tomcat service requires about  one to three minutes to startup and as such if the enduser rushes to the URL supplied below, the service page maytime out or be reported as unreachable. Give it a little time.  After spinning up fedora container, check if the Fedora service is running prior to advancing.  Navigate to http://fedora:8080/manager/html a popup login prompt should appear.  Enter the user name of  admin  and the password of  ild_tc_adm_2018  Upon login a large display of running Tomcat applications should display, scroll down to fedora  The application state / status should be true  If false appears instead, attempt to restart the fedora service manually.  Select the restart button to the right of the status area.  If it still fails, review the mounted fedora logs. The docker-compose.yml file will indicate where the logs are located.  Using terminal and then entering a command like  tail -n 300 - <path to ISLE project/data/fedora/log/tomcat:/usr/local/tomcat/logs/fedora.log  should display enough information to troubleshoot or restart the entire startup process.     Solr image pull & container launch  docker pull islandoracollabgroup/isle-solr:latest  docker-compose up -d solr    Apache image pull & container launch  docker pull islandoracollabgroup/isle-apache:latest  docker-compose up -d apache    Proxy image pull & container launch  docker pull islandoracollabgroup/isle-proxy:latest  docker-compose up -d proxy",
            "title": "Non-running Containers"
        },
        {
            "location": "/02_installation_test/ild_resources/",
            "text": "WARNING\n\n\nDo not use an IP e.g. \nhttps://10.10.10.130\n to view the Drupal site, login etc as somethings won't work e.g. Large Images using the OpenSeadragon Viewer.\n\n\nPlease always use the \nhttps://isle.localdomain\n domain to view the site, login etc\n\n\n\n\nSample Objects for ingest.\n\n\nCourteous of the \nIslandora Collaboration Group\n there is a sample set of objects and corresponding metadata (examples organized by solution pack, including zips for quicker bulk ingestion) that can be used to test ingest.\n\n\n\n\nhttps://github.com/Islandora-Collaboration-Group/islandora-sample-objects\n\n\n\n\nYou are free to clone this repository to your local laptop or desktop and ingest as required.\n\n\nIf you are not familiar with ingest, one can follow instructions \nhere\n or start with the \nGetting Started with Islandora section\n of the official Islandora documentation.\n\n\n\n\nUsers and passwords\n\n\n\n\n\n\nislandora\n user on the ISLE host server uses \nislandora\n as the password.\n\n\n\n\n\n\nSome of the information below is for accessing the non Drupal site admin panels and resources only. (optional). In this context, \nhostip\n below can mean either\n\n\n\n\nthe IP address e.g. \nhttp://10.10.10.130\n of the Vagrant or Non-Vagrant Host VM (\nCentOS / Ubuntu\n)\n\n\nthe IP address e.g. \n127.0.0.1\n for \nDocker for Mac\n\n\n\n\n\n\n\n\n1. MySQL container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\nmysql\n\n\nisle-mysql-ld\n\n\nMySQL 5.6\n\n\n3306\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccount\n\n\nPassword\n\n\nDatabase\n\n\nPerms\n\n\n\n\n\n\n\n\n\n\nroot\n\n\nild_mysqlrt_2018\n\n\nALL\n\n\nALL\n\n\n\n\n\n\nfedora_admin\n\n\nild_feddb_2018\n\n\nfedora3\n\n\nAll\n except \nGrant\n option\n\n\n\n\n\n\nisle_ld_user\n\n\nisle_ld_db2018\n\n\nisle_ld\n\n\nAll\n except \nGrant\n option\n\n\n\n\n\n\n\n\n\n\n2. Fedora container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\nfedora\n\n\nisle-fedora-ld\n\n\nsee below\n\n\n8080, 80 (on container) mapped to 8777 (on host)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware\n\n\nVersion\n\n\n\n\n\n\n\n\n\n\nFedora\n\n\n3.8.1\n\n\n\n\n\n\nApache\n\n\n2.4.7\n\n\n\n\n\n\nDrupalfilter\n\n\n3.8.1\n\n\n\n\n\n\nGsearch (w/remote SOLR plugin)\n\n\n2.8+ (DG patched)\n\n\n\n\n\n\n(DG) GSearch Extensions\n\n\n0.13\n\n\n\n\n\n\n(DG) Islandora Transforms (XSLTs)\n\n\nas of 3/2018\n\n\n\n\n\n\nTomcat\n\n\n7.x\n\n\n\n\n\n\nOracle JDK\n\n\n8.x\n\n\n\n\n\n\nDjatoka\n\n\n1.1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccount\n\n\nPassword\n\n\nService\n\n\nURL\n\n\n\n\n\n\n\n\n\n\nfedoraAdmin\n\n\nild_fed_admin_2018\n\n\nFedora\n\n\nhttp://hostip:8080/fedora/describe\n\n\n\n\n\n\nfedoraIntCallUser\n\n\nild_fed_IntCallUser_2018\n\n\nFedora\n\n\nhttp://hostip:8080/fedora/objects\n\n\n\n\n\n\nanonymous\n\n\nanonymous\n\n\nFedora\n\n\n---\n\n\n\n\n\n\nfgsAdmin\n\n\nild_fgs_admin_2018\n\n\nGsearch\n\n\nhttp://hostip:8080/fedoragsearch/rest?operation=updateIndex\n\n\n\n\n\n\nadmin\n\n\nild_tc_adm_2018\n\n\nTomcat\n\n\nhttp://hostip:8080/manager/html\n\n\n\n\n\n\nmanager\n\n\nild_tc_man_2018\n\n\nTomcat\n\n\nhttp://hostip:8080/manager/html\n\n\n\n\n\n\n--\n\n\n--\n\n\nDjatoka\n\n\nhttp://hostip:8080/adore-djatoka/\n\n\n\n\n\n\n\n\n\n\n3. Solr container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\nsolr\n\n\nisle-solr-ld\n\n\nsee below\n\n\n8080 (on container) mapped to 8091 (on host)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware\n\n\nVersion\n\n\n\n\n\n\n\n\n\n\nSolr\n\n\n4.10.4\n\n\n\n\n\n\nTomcat\n\n\n7.x\n\n\n\n\n\n\nOracle JDK\n\n\n8.x\n\n\n\n\n\n\n(DG) Basic Solr Config\n\n\n4.10.x branch\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccount\n\n\nPassword\n\n\nService\n\n\nURL\n\n\n\n\n\n\n\n\n\n\nadmin\n\n\nild_tc_adm_2018\n\n\nTomcat\n\n\nhttp://hostip:8091/manager/html\n\n\n\n\n\n\nmanager\n\n\nild_tc_man_2018\n\n\nTomcat\n\n\nhttp://hostip:8091/manager/html\n\n\n\n\n\n\n--\n\n\n--\n\n\nSolr\n\n\nhttp://hostip:8091/solr/\n\n\n\n\n\n\n\n\n\n\n4. Apache container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\napache\n\n\nisle-apache-ld\n\n\nsee below\n\n\n80, 443\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware\n\n\nVersion\n\n\n\n\n\n\n\n\n\n\nApache\n\n\n2.4.7\n\n\n\n\n\n\nOracle JDK\n\n\n8.x\n\n\n\n\n\n\nDjatoka\n\n\n1.1\n\n\n\n\n\n\nDrupal\n\n\n7.57\n\n\n\n\n\n\nPHP\n\n\n5.6\n\n\n\n\n\n\nIslandora\n\n\n7.x\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccount\n\n\nPassword\n\n\nService\n\n\nURL\n\n\n\n\n\n\n\n\n\n\nisle_localdomain_admin\n\n\nisle_localdomain_adminpw2018\n\n\nDrupal site admin\n\n\nhttps://isle.localdomain\n\n\n\n\n\n\n\n\n\n\n5. Proxy container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\nproxy\n\n\nisle-proxy\n\n\nNginx 1.13\n\n\n80, 443",
            "title": "Test Site Resources"
        },
        {
            "location": "/02_installation_test/ild_resources/#warning",
            "text": "Do not use an IP e.g.  https://10.10.10.130  to view the Drupal site, login etc as somethings won't work e.g. Large Images using the OpenSeadragon Viewer.  Please always use the  https://isle.localdomain  domain to view the site, login etc",
            "title": "WARNING"
        },
        {
            "location": "/02_installation_test/ild_resources/#sample-objects-for-ingest",
            "text": "Courteous of the  Islandora Collaboration Group  there is a sample set of objects and corresponding metadata (examples organized by solution pack, including zips for quicker bulk ingestion) that can be used to test ingest.   https://github.com/Islandora-Collaboration-Group/islandora-sample-objects   You are free to clone this repository to your local laptop or desktop and ingest as required.  If you are not familiar with ingest, one can follow instructions  here  or start with the  Getting Started with Islandora section  of the official Islandora documentation.",
            "title": "Sample Objects for ingest."
        },
        {
            "location": "/02_installation_test/ild_resources/#users-and-passwords",
            "text": "islandora  user on the ISLE host server uses  islandora  as the password.    Some of the information below is for accessing the non Drupal site admin panels and resources only. (optional). In this context,  hostip  below can mean either   the IP address e.g.  http://10.10.10.130  of the Vagrant or Non-Vagrant Host VM ( CentOS / Ubuntu )  the IP address e.g.  127.0.0.1  for  Docker for Mac",
            "title": "Users and passwords"
        },
        {
            "location": "/02_installation_test/ild_resources/#1-mysql-container",
            "text": "Compose Service Name  Container Name  Software  Ports      mysql  isle-mysql-ld  MySQL 5.6  3306        Account  Password  Database  Perms      root  ild_mysqlrt_2018  ALL  ALL    fedora_admin  ild_feddb_2018  fedora3  All  except  Grant  option    isle_ld_user  isle_ld_db2018  isle_ld  All  except  Grant  option",
            "title": "1. MySQL container"
        },
        {
            "location": "/02_installation_test/ild_resources/#2-fedora-container",
            "text": "Compose Service Name  Container Name  Software  Ports      fedora  isle-fedora-ld  see below  8080, 80 (on container) mapped to 8777 (on host)        Software  Version      Fedora  3.8.1    Apache  2.4.7    Drupalfilter  3.8.1    Gsearch (w/remote SOLR plugin)  2.8+ (DG patched)    (DG) GSearch Extensions  0.13    (DG) Islandora Transforms (XSLTs)  as of 3/2018    Tomcat  7.x    Oracle JDK  8.x    Djatoka  1.1        Account  Password  Service  URL      fedoraAdmin  ild_fed_admin_2018  Fedora  http://hostip:8080/fedora/describe    fedoraIntCallUser  ild_fed_IntCallUser_2018  Fedora  http://hostip:8080/fedora/objects    anonymous  anonymous  Fedora  ---    fgsAdmin  ild_fgs_admin_2018  Gsearch  http://hostip:8080/fedoragsearch/rest?operation=updateIndex    admin  ild_tc_adm_2018  Tomcat  http://hostip:8080/manager/html    manager  ild_tc_man_2018  Tomcat  http://hostip:8080/manager/html    --  --  Djatoka  http://hostip:8080/adore-djatoka/",
            "title": "2. Fedora container"
        },
        {
            "location": "/02_installation_test/ild_resources/#3-solr-container",
            "text": "Compose Service Name  Container Name  Software  Ports      solr  isle-solr-ld  see below  8080 (on container) mapped to 8091 (on host)        Software  Version      Solr  4.10.4    Tomcat  7.x    Oracle JDK  8.x    (DG) Basic Solr Config  4.10.x branch        Account  Password  Service  URL      admin  ild_tc_adm_2018  Tomcat  http://hostip:8091/manager/html    manager  ild_tc_man_2018  Tomcat  http://hostip:8091/manager/html    --  --  Solr  http://hostip:8091/solr/",
            "title": "3. Solr container"
        },
        {
            "location": "/02_installation_test/ild_resources/#4-apache-container",
            "text": "Compose Service Name  Container Name  Software  Ports      apache  isle-apache-ld  see below  80, 443        Software  Version      Apache  2.4.7    Oracle JDK  8.x    Djatoka  1.1    Drupal  7.57    PHP  5.6    Islandora  7.x        Account  Password  Service  URL      isle_localdomain_admin  isle_localdomain_adminpw2018  Drupal site admin  https://isle.localdomain",
            "title": "4. Apache container"
        },
        {
            "location": "/02_installation_test/ild_resources/#5-proxy-container",
            "text": "Compose Service Name  Container Name  Software  Ports      proxy  isle-proxy  Nginx 1.13  80, 443",
            "title": "5. Proxy container"
        },
        {
            "location": "/03_installation_new_site/new_site_example_user_story/",
            "text": "Building a new site using ISLE - sample user story\n\n\nSam wants to spin up Islandora on an Ubuntu Linux server she has in the institutional data center. She accesses the server using ssh and determines that it meets the \nHost Server Specifications\n (basically - has enough processor, memory, and storage space).\n\n\nSam already has a domain name she wants to use for this Islandora instance - https://islandoratest.university.edu (note: this is a made up sample url) and has requested the DNS update from IT so the name resolves to the IP address of her server.\n\n\nNext Sam follows the \nInstall ISLE Host Server Dependencies on Ubuntu\n instructions to setup the server to be a host for ISLE (install some software including docker, download/clone the ISLE repository, create and configure a Linux user for islandora).\n\n\nBecause Sam is building a new site with her own url, she will need to edit a number of the included ISLE configuration files and folders found in the \nconfig\n directory of the cloned ISLE repository per the detailed instructions in the \nNew Site Installation Guide\n.\n\n\nOnce all the configurations have been set, Sam is ready to install ISLE itself - she connects to the server via ssh as the islandora user she just created and follows the steps in the \nNew Site Installation Guide\n to copy over the configuration changes and pull down the Dockerhub images one-by-one and start. The final step involves running a provisioning script from the ISLE repository folder.\n\n\nAt this point, Sam should be able to point a browser at her URL and see a functioning Islandora install!",
            "title": "New Site Example User Story"
        },
        {
            "location": "/03_installation_new_site/new_site_example_user_story/#building-a-new-site-using-isle-sample-user-story",
            "text": "Sam wants to spin up Islandora on an Ubuntu Linux server she has in the institutional data center. She accesses the server using ssh and determines that it meets the  Host Server Specifications  (basically - has enough processor, memory, and storage space).  Sam already has a domain name she wants to use for this Islandora instance - https://islandoratest.university.edu (note: this is a made up sample url) and has requested the DNS update from IT so the name resolves to the IP address of her server.  Next Sam follows the  Install ISLE Host Server Dependencies on Ubuntu  instructions to setup the server to be a host for ISLE (install some software including docker, download/clone the ISLE repository, create and configure a Linux user for islandora).  Because Sam is building a new site with her own url, she will need to edit a number of the included ISLE configuration files and folders found in the  config  directory of the cloned ISLE repository per the detailed instructions in the  New Site Installation Guide .  Once all the configurations have been set, Sam is ready to install ISLE itself - she connects to the server via ssh as the islandora user she just created and follows the steps in the  New Site Installation Guide  to copy over the configuration changes and pull down the Dockerhub images one-by-one and start. The final step involves running a provisioning script from the ISLE repository folder.  At this point, Sam should be able to point a browser at her URL and see a functioning Islandora install!",
            "title": "Building a new site using ISLE - sample user story"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_single/",
            "text": "This guide documents how an enduser can spin up and install a single ISLE / Islandora environment tailored to use only one unique domain / URL and one ISLE environment.\n\n\nA new ISLE / Islandora environment can include the option to create an un-themed Drupal website and empty Fedora repository for endusers to develop code, perform ingests, edit metadata, update fields in SOLR indexing all essential in ultimately creating a new ISLE production site.\n\n\nWhile this checklist will attempt to point out most of the usage challenges or pitfalls, ISLE assumes no responsibility or liability in this matter should an enduser have customizations beyond what this guide outlines.\n\n\nPlease note:\n There is a \nGlossary\n with relevant terms to help guide installation.\n\n\nIndex of related documents\n\n\n\n\nNew Site Example User Story\n\n\n\n\n\n\nAssumptions / Prerequisites\n\n\n\n\n\n\nComfortability with ISLE. Recommend first setting up the ISLE Test Site (\nisle.localdomain\n) via the \nInstall Start Here\n guide. If you have already done this, please proceed.\n\n\n\n\n\n\nHost Server that conforms to the specifications outlined in the \nHost Server Specifications\n\n\n\n\n\n\nThis new site guide is designed for a single ISLE Host server that has already followed the appropriate setup and configuration instructions in the \nCreate a new ISLE site\n section of the \nInstall Start Here\n guide.\n\n\n\n\n\n\nInstructions below also assume a MacOS or Linux laptop or workstation to be used in conjunction with the ISLE Host Server for deploying configs, code, files etc. Windows users may have to adjust / swap out various tools as needed.\n\n\n\n\n\n\nThese directions also depend on the type of local computer used to connect via browser to Islandora.\n\n\n\n\n\n\nHave an existing domain name that works - is set up with DNS etc...\n\n\n\n\n\n\nHave \nSSL Certificates\n previously created for the web domain. (\nPlease work with the appropriate internal IT resource to provision these files for your domain\n)\n\n\n\n\n\n\nISLE project has been cloned to BOTH your local laptop/workstation AND the ISLE host server\n\n\n\n\n\n\nOverview\n\n\n\n\n\n\nSetup a Private Code Repository\n\n\n\n\nMost of the work in this guide involves careful editing of the various configuration and settings files that customize the pieces of Islandora (database, repository, web-server, etc...).\n\n\nDoing this work in a code repository makes it easier to correct errors and to repeat the process for additional servers without needing to replicate all the work.\n\n\nSince the edits could include things like passwords, it's important to make this a private repository.\n\n\n\n\n\n\n\n\nCustomizing for your Environment\n\n\n\n\nMany of the steps below describe adding the domain name or other specific bits of information into files or appending those bits to file names.\n\n\nIn these cases this guide will call out the customization point AND provide an example - it's important not to literally copy paste the example!\n\n\n\n\n\n\n\n\nCreate Private Code Repository\n\n\nON your local laptop/workstation:\n\n\n\n\n\n\nUsing a git repository of your choice (GitHub, GitLab, Bitbucket, etc.) create a PRIVATE remote git repo - see the specific code repository documentation online for setup instructions.\n\n\n\n\n\n\nOpen a terminal - navigate to \n/opt/ISLE/config\n (\nor where you put the ISLE directory on your local workstation.\n)\n\n\n\n\n\n\nCreate a new directory with a name of your choice\n\n\n\n\n\n\nExample: where \"digital-collections.yourdomain.com\" is your server domain name e.g.:  \nconfig/digital-collections.example.edu\n\n\n\n\n\n\nPlease do not use this literal value.\n\n\n\n\n\n\nLocate the directory within the \n/opt/ISLE/config/\n directory called \nisle-newsite-sample\n and copy all of its contents into your newly created directory.\n\n\n\n\n\n\ncd\n into the newly copied and renamed \ndigital-collections.example.edu\n directory and type:\n \ngit init\n to imitate this directory as a code repository.\n\n\n\n\n\n\ngit remote add NameOfYourRepository URLofYourRepository\n to connect your local repository to the remote you set up in the above steps.\n\n\n\n\n[\nNOTE\n replace \"NameOfYourRepository\" and \"URLofYourRepository\" with the name of your git repository and its URL]\n\n\n\n\n\n\n\n\nYou are now ready to perform the customization edits in this directory (you can use a text editor of choice now don't have to stay in terminal - just locate the folder in the finder and open file in text editor)\n\n\n\n\n\n\nEdits\n\n\nDocker compose file:\n\n\n\n\n\n\nEdit the file: \ndocker-compose.yml\n accordingly:\n\n\n\n\n\n\nChange container names (you could do this based on the environment (e.g. prod)\n\n\n\n\n\n\nFor example if you are building a prod server instance:\n\n\ncontainer_name: isle-solr-newsite\n\n\nchanges to:\n\n\ncontainer_name: isle-solr-prod\n\n\nand so on...\n\n\n\n\n\n\n\n\n\n\nPlease note:\n Much of the file is already with comments guiding the enduser to key areas or files to edit or modify accordingly.\n\n\n\n\nConfig directories\n\n\nNow proceed to make edits to files within the config subdirectories:\n\n\na. to reflect \nenvironment\n (prod, stage, dev, etc...)\n\n\nb. to involve your \ndomain name\n (digital-collections.example.edu)\n\n\nThere are five subdirectories which have the appropriate settings for each respective container and service:\n\n\n\n\napache\n\n\nfedora\n\n\nmysql\n\n\nproxy\n\n\nsolr\n\n\n\n\n\n\nApache directory\n\n\nThe \napache\n subdirectory contains all specific configurations and overrides necessary for the ISLE apache image and resulting container to function properly with your changes. This is the webserver that serves the Islandora / Drupal website.\n\n\n\n\n\n\n(\nOptional\n) Edit the php.ini file to change various appropriate settings if needed otherwise leave alone.\n\n\n\n\nExample - Line 820: change the \nupload_max_filesize = 2000M\n to a higher setting if desired. Currently at a 2GB upload limit.\n\n\n\n\n\n\n\n\nEdit the file: \nsettings.php\n\n\n\n\n\n\nLines 251-253: add your database name, database user, and database password    \n\n\n\n\n\n\nLine 288: to include a 45+ alpha-numeric characters drupal hash between the quotes after this text: \n$drupal_hash_salt = '';\n\n\n\n\nYou'll need to create this value, recommend using a password generator tool. Ensure only alpha-numeric characters are used, no symbols etc.\n\n\n\n\n\n\n\n\nLine 311: Review and ensure \n# $base_url =\n is still commented out\n\n\n\n\n\n\n\n\n\n\nEdit the file: \ninstall_new_site.sh\n  line 29:\n\n\n\n\n\n\n/usr/local/bin/drush site-install -y --account-name=newsite_admin --account-pass=newsite_adminpw --account-mail=admin@newsite.com --site-name=\"ISLE New Site Sample\"\n\n\n\n\n\n\nChange the following values in that line above to the appropriate names and passwords for your site.\n\n\n\n\n--account-name= Drupal admin account\n\n\n--account-pass= Drupal admin account password\n\n\n--account-mail= Email address that can be associated with Drupal admin account\n\n\n--site-name= Name of your new ISLE website\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nApache - sites-enabled\n\n\n\n\n\n\nWithin the \nsites-enabled\n directory, rename the files \nnewsite-sample-ssl.conf\n and \nnewsite-sample.conf\n to your domain names - example:\n\n\n\n\n\n\ndigital-collections.example.edu_ssl.conf\n\n\n\n\n\n\ndigital-collections.example.edu.conf\n\n\n\n\n\n\n\n\n\n\nEdit the previously named \nnewsite-sample.conf\n file and change lines 3 and 4 to point to the location of your apache logs on the container - example:\n\n\n\n\n\n\nErrorLog /var/log/apache2/digital-collections.example.edu.ssl.error.log\n\n\n\n\n\n\nCustomLog /var/log/apache2/digital-collections.example.edu.ssl.access.log combined\n\n\n\n\n\n\n\n\n\n\nEdit the previously named \nnewsite-sample-ssl.conf\n file and change lines 4 and 5 to point to the location of your apache logs on the container - example:\n\n\n\n\n\n\nErrorLog /var/log/apache2/digital-collections.example.edu.ssl.error.log\n\n\n\n\n\n\nCustomLog /var/log/apache2/digital-collections.example.edu.ssl.access.log combined\n\n\n\n\n\n\n\n\n\n\nEdit the previously named \nnewsite-sample-ssl.conf\n file and change lines 12, 13 and 14 to point to the location of your certs on the \napache\n container - example:\n\n\n\n\n\n\n\n    SSLCertificateFile  /certs/newsite-sample.pem\n    SSLCertificateChainFile /certs/newsite-sample-interm.pem\n    SSLCertificateKeyFile /certs/newsite-sample-key.pem\n\n\n\n\n\n\n\nApache - ssl-certs\n\n\nIf need be, please refer to the \nSSL certificate\n section of the \nGlossary\n for relevant terms to help guide installation.\n\n\n\n\n\n\nCopy your SSL certificates for Apache into the \napache/ssl-certs\n subdirectory. They will and should have different names than the examples provided below dependent on the ISLE environment you are setting up e.g. (\nproduction, staging or development\n).\n\n\n\n\n\n\nThere can be up to 2 - 3 files involved in this process.\n\n\n\n\n\n\n1 x SSL Certificate Key File e.g. \nnewsite-sample-key.pem\n\n\n\n\nThis file is required.\n\n\nPlease also note that the file extensions can also be: \n.key\n or \n.pem\n\n\n\n\n\n\n\n\n1 x SSL Certificate File e.g. \nnewsite-sample.pem\n\n\n\n\nThis file is required.\n\n\nPlease also note that the file extensions can also be: \n.cer\n, \n.crt\n or \n.pem\n\n\n\n\n\n\n\n\n1 x SSL Certificate Chain File e.g. \nnewsite-sample-interm.pem\n\n\n\n\nThis file may be \noptional\n in some setups but is generally recommended for use by the \napache\n container when available.\n\n\nIt will not be used by the \nproxy\n container.\n\n\nPlease also note that the file extensions can also be: \n.cer\n, \n.crt\n or \n.pem\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nApache - tmpreaper\n\n\n\n\n\n\n(\nOptional\n) Edit the cron file within the \napache/tmpreaper\n subdirectory to change various appropriate settings if needed otherwise leave alone if you are not familiar with how cron jobs work.\n\n\n\n\n\n\nCurrently this cronjob is set to run every 12 hours and using the tmpreaper utility to clean out and delete the contents of the /tmp folder if they are older than 4 days.\n\n\n\n\n\n\n\n\nFedora directory\n\n\nThe \nfedora\n subdirectory contains all specific configurations and overrides necessary for the ISLE fedora image and resulting container to function properly with your changes. This is the Fedora repository that will contain all objects, metadata etc.\n\n\nFedora - fedora\n\n\n\n\n\n\nWithin the \nfedora/fedora\n subdirectory, \nadd new passwords\n in the following files:\n\n\n\n\nLines 3, 8, 14: \nfedora-users.xml\n  (change all applicable passwords for fedora users)\n\n\nLine 598: \nfedora.fcfg\n  (change the password to the \nfedora_admin\n \ndatabase user password\n only)\n\n\nLine 15: \nfilter-drupal.xml\n  (change the associated Drupal site database name , user and password, do not use settings for the \nfedora3\n database.)\n\n\n\n\n\n\n\n\n(\nOptional\n) Edit either of the log4j.properties or logback.xml files to change logging levels for the \nfedora\n container if needed, otherwise leave alone.\n\n\n\n\n\n\nPlease note: If making changes, you'll need to then edit the \ndocker-compose.yml\n file accordingly in the \nfedora\n \nvolumes\n section\n\n\n\n\n\n\nExample add a line to make changes for the Fedora application logging.\n\n\n\n\n\n\n- ./fedora/fedora/logback.xml :/usr/local/fedora/server/config/logback.xml\n\n\n\n\n\n\nExample add a line to make changes for the Djatoka application logging.\n\n\n\n\n- ./fedora/fedora/logback.xml :/usr/local/tomcat/webapps/adore-djatoka/WEB-INF/classes/log4j.properties\n     \n\n\n\n\n\n\n\n\n(\nOptional\n) Edit the contents of the repository-policies subdirectory as necessary \nIF YOU NEED TO\n, otherwise leave alone.\n\n\n\n\n\n\n\n\nFedora - gsearch\n\n\n\n\n\n\nWithin the \nfedora/gsearch\n subdirectory, edit the file: \nfedoragsearch.properties\n at line 7 and add a space after the equal sign and then add the new \ngsearch fgsAdmin user password\n.\n\n\n\n\n-  fedoragsearch.soapPass                = new_fgsAdmin_password_here\n\n\n\n\n\n\n\n\nEdit the file: \nfgsconfig-basic-configForIslandora.properties\n\n\n\n\n\n\nLine 26: add the new \ngsearch fgsAdmin user password\n.\n\n\n\n\ngsearchPass=new_fgsAdmin_password_here\n\n\n\n\n\n\n\n\nLine 67: Add the new fedora \nfedora admin password\n.\n\n\n\n\nfedoraPass=new_fedoraAdmin_password_here\n\n\n\n\n\n\n\n\n\n\n\n\nEdit the file: \nfedora/gsearch/fgsconfigObjects.properties\n at line 15 and add a space after the equal sign and then add the new \nfedora admin password\n.\n\n\n\n\nfgsconfigObjects.fedoraPass            = new_fedoraAdmin_password_here\n\n\n\n\n\n\n\n\nEdit the file: \nfedora/gsearch/repository.properties\n at line 7 and add a space after the equal sign and then add the new \nfedora admin password\n.\n\n\n\n\nfgsrepository.fedoraPass        = new_fedoraAdmin_password_here\n\n\n\n\n\n\n\n\n\n\nFedora - tmpreaper\n\n\n\n\n\n\n(\nOptional\n) Edit the cron file within \nfedora/tmpreaper\n to change various appropriate settings if needed otherwise leave alone if you are not familiar with how cron jobs work.\n\n\n\n\n\n\nCurrently this cronjob is set to run every 12 hours and using the tmpreaper utility to clean out and delete the contents of the /tmp folder if they are older than 4 days.\n\n\n\n\n\n\n\n\nFedora - tomcat\n\n\n\n\n\n\nWithin the \ntomcat\n subdirectory:\n\n\n\n\nStrongly recommend adding tomcat user passwords in file: \nfedora/tomcat/tomcat-users.xml\n\n\n\n\n\n\n\n\nExample: ONLY ADD TOMCAT USERNAME/PASSWORD - can look like this but please use a stronger password with more than 10 alpha-numeric characters. Also note, they should NOT be the same password.:\n\n\n          <!-- user manager can access only manager section -->\n             <user username=\u201cmanager\u201d password=\u201ctomcat_manager_password\" roles=\u201cmanager-gui\u201d />  <!--enduser please add passwords / users and remove this comment -->\n\n          <!-- user admin can access manager and admin section both -->\n             <user username=\u201cadmin\u201d password=\u201ctomcat_admin_password\u201d roles=\u201cmanager-gui,admin-gui\u201d /> <!--enduser please add passwords / users and remove this comment -->\n\n          </tomcat-users>\n\n\n\n\n\n\n\nMysql directory\n\n\nThe \nmysql\n subdirectory contains all specific configurations and overrides necessary for the ISLE mysql image and resulting container to function properly with your changes. This is the Mysql database server that will contain two databases, one for the Islandora / Drupal website and the other for the Fedora repository.\n\n\n\n\n(\nOptional\n) Edit the Mysql configuration file \nmy.cnf\n as needed otherwise leave alone.\n\n\n\n\nMysql - initscripts\n\n\nThis subdirectory houses SQL scripts necessary for a one time creation of your associated new site and \nfedora3\n database.\n\n\n\n\n\n\nEdit the contents of \nnewsite_sample_db.sql\n to create the new drupal site database and user.\n\n\n\n\n\n\nLine 1: Change the database name from \nnewsite_sample_db\n to the database name of your choice.\n\n\n\n\n\n\nLine 2: Change the database user name from \nnewsite_sample_db_user\n to the database user name of your choice.\n\n\n\n\n\n\nLine 3: At almost the end of the line, change the value of \nnewsite_sample_db.*\n to the to the database name of your choice ensuring the \n.*\n remain without a space.\n\n\n\n\n\n\nLine 3: At the end of the line, change the value of \nnewsite_sample_db_user'\n to the to the database user name of your choice ensuring the values remain with in the \n''\nquotes without spaces. Do not alter the remaining code (\n@'%';'\n) beyond that point.\n\n\n\n\n\n\n\n\n\n\nEdit the contents of \nfedora3\n to change the \nfedora_admin\n user password only.\n\n\n\n\n\n\nLine 2: Change the \nfedora_admin\n user password from \nnewsite_sample_fedora_admin_pw\n to the password of your choice.\n\n\n\n\n\n\nIt is not recommended to change anything else.\n\n\n\n\n\n\n\n\n\n\n\n\nProxy directory\n\n\nIf need be, please refer to the \nSystems\n section of the \nGlossary\n for relevant terms to help guide installation.\n\n\nThe \nproxy\n subdirectory contains all specific configurations and overrides necessary for the ISLE proxy image and resulting container to function properly with your changes. This is the Nginx reverse proxy server that properly routes all internal and external communication between the other four containers and the ISLE Host network.\n\n\nProxy - sites-enabled\n\n\n\n\n\n\nIn the \nconfig/sites-enabled\n subdirectory, rename the \ncom.sample-newsite.conf\n file to \ncom.yourdomain.conf\n (where \"yourdomain\" is the domain name of your server but the suffix .com typically last is now first.)\n\n\n\n\nExample: \nedu.example.digital-collections.conf\n\n\n\n\n\n\n\n\nNow edit the file...\n\n\n\n\n\n\nLine 6: change \nnewsite-sample.com\n to the domain name of your choice\n\n\n\n\nEnsure a space between \nserver_name\n and the domain name and a \n;\n after the domain name still remain.\n\n\n\n\n\n\n\n\nLine 15: change \nnewsite-sample.com\n to the domain name of your choice\n\n\n\n\nEnsure a space between \nserver_name\n and the domain name and a \n;\n after the domain name still remain.\n\n\n\n\n\n\n\n\nLines 18 & 19: Change to the name of your ssl certs (should be same names as in previously made \napache\n edits above)\n\n\n\n\n\n\n\n\n\n\n\n\nProxy - ssl-certs\n\n\nCopy your SSL certs into the ssl-certs subdirectory.\n\n\nDO NOT OVERWRITE OR DELETE the create_dhparam_pem file within this directory.\n\n\nIf need be, please refer to the \nSSL certificate\n section of the \nGlossary\n for relevant terms to help guide installation.\n\n\nThere are also additional links for the enduser to learn how to combine the SSL Certificate File with any available SSL Certificate Chain File for the \nproxy\n process to work properly.\n\n\n\n\n\n\nCopy your SSL certificates for the ISLE Proxy into \nproxy/ssl-certs\n. They will and should have different names than the examples provided below.\n\n\n\n\n\n\nThere can only be 2 files involved in this process.\n\n\n\n\n\n\n1 x SSL Certificate Key File e.g. \nnewsite-sample-key.pem\n\n\n\n\nThis file is required.\n\n\nPlease also note that the file extensions can also be: \n.key\n or \n.pem\n\n\n\n\n\n\n\n\n1 x SSL Certificate File e.g. \nnewsite-sample.pem\n\n\n\n\nThis file is required.\n\n\nPlease also note that the file extensions can also be: \n.cer\n, \n.crt\n or \n.pem\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOpen a terminal, navigate to the is subdirectory, and run the \ncreate_dhparam_pem.sh\n script in \n~/ISLE/config/isle-newsite-sample/proxy/ssl-certs/\n subdirectory to create the \ndhparam.pem\n file (\nif not already.\n) This file is critical to the SSL encryption process and for communication between the \nproxy\n and \napache\n containers.\n\n\n\n\n\n\nTo run this script from within this subdirectory:  \n./create_dhparam_pem.sh\n.\n\n\n\n\n\n\nThis will take 10 -20 mins depending on the speed of your local laptop or workstation.\n\n\n\n\n\n\n\n\n\n\n\n\nProxy - upstreams.d\n\n\nSingle environment steps only below:\n\n\n\n\n\n\nCopy and rename: \nsample-upstreams.conf.disabled\n to the appropriate domain name of your choice e.g. \nyourdomain-upstreams.conf\n while also removing the \n.disabled\n suffix.\n\n\n\n\n\n\nExample A:\n Lines 10 and 14 look like this for a single environment (no additional environments to be setup). See \nproxy/config/sites-enable/com.sample-newsite.conf.disabled\n.\n\n\n\n\n\n\nPlease note:\n If only ever deploying a single ISLE environment, you could chose not to add any suffixes and ISLE should function properly. This is entirely dependent on your organizational needs.\n\n\nExample: Single Environment (defaults, no edits made)\n\n\n\n      upstream fedora-internal {\n        server fedora:8080 fail_timeout=0;\n      }\n\n      upstream fedora-internal {\n        server apache:443 fail_timeout=0;\n      }\n\n\n\n\n\n\n\nSolr directory\n\n\nThe \nsolr\n subdirectory contains all specific configurations and overrides necessary for the ISLE solr image and resulting container to function properly with your changes. This is the SOLR search server that properly indexes all objects and metadata to provide speedy in-depth search functionality for the Islandora / Drupal site of the objects and collections contained within the Fedora repository.\n\n\nIf need be, please refer to the \nSolr\n section of the \nGlossary\n for relevant terms to help guide installation.\n\n\nSolr - solr\n\n\n\n\n\n\n(\nOptional\n) Within the \nsolr\n subdirectory:\n\n\n\n\n\n\nMake the appropriate customizations or changes to the following files as you see fit otherwise you can leave these files alone and SOLR will work out of the box.\n\n\n\n\n\n\nschema.xml\n\n\n\n\n\n\nsolr.xml\n\n\n\n\n\n\nsolrconfig.xml\n\n\n\n\n\n\nstopwords.txt\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolr - tomcat\n\n\n\n\n\n\nWithin the \ntomcat\n subdirectory:\n\n\n\n\nStrongly recommend adding tomcat user passwords in file: \nsolr/tomcat/tomcat-users.xml\n on lines 45 & 48.\n\n\n\n\n\n\n\n\nExample: ONLY ADD TOMCAT USERNAME/PASSWORD - can look like this but please use a stronger password with more than 10 alpha-numeric characters. Also note, they should NOT be the same password.:\n\n\n          <!-- user manager can access only manager section -->\n             <user username=\u201cmanager\u201d password=\u201ctomcat_manager_password\" roles=\u201cmanager-gui\u201d />  <!--enduser please add passwords / users and remove this comment -->\n\n          <!-- user admin can access manager and admin section both -->\n             <user username=\u201cadmin\u201d password=\u201ctomcat_admin_password\u201d roles=\u201cmanager-gui,admin-gui\u201d /> <!--enduser please add passwords / users and remove this comment -->\n\n          </tomcat-users>\n\n\n\n\n\n\n\nFinal steps\n\n\nIf need be, please refer to the \nGit\n section of the \nGlossary\n for relevant terms to help guide installation.\n\n\n\n\n\n\nNow that all the changes are made (be sure to save), ISLE should be ready to test. First you'll need to push these changes to your private code repository.\n\n\n\n\n\n\nOpen a terminal - \ncd\n to the config directory you've been making the changes in...\n\n\n\n\n\n\ngit status\n  this will show you all the files that have been modified and ready to be added to your private repo along with handy paths for the next steps.\n\n\n\n\n\n\ngit add /pathtoyourmodifiedfile\n (replace \"pathtoyourmodifiedfile\" with the path to your config directory)\n\n\n\n\n\n\nrun these:\n\n\n\n\n\n\ngit add apache\n\n\ngit add fedora\n\n\ngit add mysql\n\n\ngit add proxy\n\n\ngit add solr\n\n\ngit add docker-compose.yml\n\n\ngit add newsite-sample-cheatsheet.md\n\n\n\n\n\n\nEnter \ngit status\n again - everything should be in green now as all modified files have been added - if anything's still red use git add and the path to add it\n\n\n\n\n\n\nthen run \ngit commit -m \"initial config commit\"\n inside the double quotes is the commit message you can say whatever you want in this message - so for example if this is the config for your dev instance you could say that...\n\n\n\n\n\n\nEnter \ngit push origin master\n\n\n\n\n\n\nThis will push all your changes to the repo.\n\n\n\n\n\n\nFurther changes should be made on git branches for different servers or environments e.g. \nprod, stage, dev\n or to master branch for this same server.\n\n\n\n\n\n\n\n\n\n\n\n\nClone Custom Configuration to Host Server\n\n\nPlease note:\n If running a (multi) ISLE environment, you will make separate git config directories to this effect and repeat these steps accordingly.\n\n\n\n\n\n\nOpen a terminal - ssh into your host server using the \nislandora\n user\n\n\n\n\n\n\ncd\n to \n/opt/ISLE/config/\n\n\n\n\n\n\nBecause your customizations are in a \nprivate\n repository, you'll need to add this islandora user's \nid_rsa.pub\n key to the git repository settings via it's settings profile within the appropriate website.\n\n\n\n\n\n\nThis key is found in \n/home/islandora/.ssh/id_rsa.pub\n\n\n\n\n\n\nOne can simply run \ncat /home/islandora/.ssh/id_rsa.pub\n and copy the output (ensure no whitespaces or extra returns)\n\n\n\n\n\n\nGo to the repository web site with a browser and locate your private repository.\n\n\n\n\n\n\nLocate the ssh key entry location (in Bitbucket this is in Settings / Access Keys /\n\n\n\n\n\n\nAdd\n an ssh key w/ the label \nisle host server islandora deploy user\n paste in the key text and click \nAdd Key\n\n\n\n\n\n\n\n\n\n\nBack at your terminal command line, run \ngit clone URLpathtoyourremoteprivaterepo.git .\n (replacing \"URLpathtoyourremoteprivaterepo\" with the URL to the repository provided by the website)\n\n\n\n\n\n\ncd\n into the newly cloned directory\n\n\n\n\n\n\nSpin up ISLE containers!\n\n\n\n\n\n\nrun \ndocker-compose up -d\n\n\n\n\n\n\nrun \ndocker exec -it yourApacheContainerNameHere bash\n\n\n\n\nUsing the name from the \ndocker-composer.yml\n file here (\ntypically: isle-apache-prod, or -stage, etc...\n)\n\n\n\n\n\n\n\n\ncd /tmp/isle_drupal_build_tools\n\n\n\n\n\n\nRun: \n./install_new_site.sh\n\n\n\n\n\n\nGive this process 15 - 25 minutes (\ndepending on the speed of the ISLE Host server internet connection\n)\n\n\n\n\n\n\nCheck the newly created and running new site by opening a browser and navigating to your site domain e.g. \nhttps://digital-collections.example.edu\n, you should now see an un-themed Drupal site.",
            "title": "New Site Installation Guide - w/ Single ISLE Environment"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_single/#index-of-related-documents",
            "text": "New Site Example User Story",
            "title": "Index of related documents"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_single/#assumptions-prerequisites",
            "text": "Comfortability with ISLE. Recommend first setting up the ISLE Test Site ( isle.localdomain ) via the  Install Start Here  guide. If you have already done this, please proceed.    Host Server that conforms to the specifications outlined in the  Host Server Specifications    This new site guide is designed for a single ISLE Host server that has already followed the appropriate setup and configuration instructions in the  Create a new ISLE site  section of the  Install Start Here  guide.    Instructions below also assume a MacOS or Linux laptop or workstation to be used in conjunction with the ISLE Host Server for deploying configs, code, files etc. Windows users may have to adjust / swap out various tools as needed.    These directions also depend on the type of local computer used to connect via browser to Islandora.    Have an existing domain name that works - is set up with DNS etc...    Have  SSL Certificates  previously created for the web domain. ( Please work with the appropriate internal IT resource to provision these files for your domain )    ISLE project has been cloned to BOTH your local laptop/workstation AND the ISLE host server",
            "title": "Assumptions / Prerequisites"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_single/#overview",
            "text": "Setup a Private Code Repository   Most of the work in this guide involves careful editing of the various configuration and settings files that customize the pieces of Islandora (database, repository, web-server, etc...).  Doing this work in a code repository makes it easier to correct errors and to repeat the process for additional servers without needing to replicate all the work.  Since the edits could include things like passwords, it's important to make this a private repository.     Customizing for your Environment   Many of the steps below describe adding the domain name or other specific bits of information into files or appending those bits to file names.  In these cases this guide will call out the customization point AND provide an example - it's important not to literally copy paste the example!",
            "title": "Overview"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_single/#create-private-code-repository",
            "text": "ON your local laptop/workstation:    Using a git repository of your choice (GitHub, GitLab, Bitbucket, etc.) create a PRIVATE remote git repo - see the specific code repository documentation online for setup instructions.    Open a terminal - navigate to  /opt/ISLE/config  ( or where you put the ISLE directory on your local workstation. )    Create a new directory with a name of your choice    Example: where \"digital-collections.yourdomain.com\" is your server domain name e.g.:   config/digital-collections.example.edu    Please do not use this literal value.    Locate the directory within the  /opt/ISLE/config/  directory called  isle-newsite-sample  and copy all of its contents into your newly created directory.    cd  into the newly copied and renamed  digital-collections.example.edu  directory and type:\n  git init  to imitate this directory as a code repository.    git remote add NameOfYourRepository URLofYourRepository  to connect your local repository to the remote you set up in the above steps.   [ NOTE  replace \"NameOfYourRepository\" and \"URLofYourRepository\" with the name of your git repository and its URL]     You are now ready to perform the customization edits in this directory (you can use a text editor of choice now don't have to stay in terminal - just locate the folder in the finder and open file in text editor)",
            "title": "Create Private Code Repository"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_single/#edits",
            "text": "",
            "title": "Edits"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_single/#docker-compose-file",
            "text": "Edit the file:  docker-compose.yml  accordingly:    Change container names (you could do this based on the environment (e.g. prod)    For example if you are building a prod server instance:  container_name: isle-solr-newsite  changes to:  container_name: isle-solr-prod  and so on...      Please note:  Much of the file is already with comments guiding the enduser to key areas or files to edit or modify accordingly.",
            "title": "Docker compose file:"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_single/#config-directories",
            "text": "Now proceed to make edits to files within the config subdirectories:  a. to reflect  environment  (prod, stage, dev, etc...)  b. to involve your  domain name  (digital-collections.example.edu)  There are five subdirectories which have the appropriate settings for each respective container and service:   apache  fedora  mysql  proxy  solr",
            "title": "Config directories"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_single/#apache-directory",
            "text": "The  apache  subdirectory contains all specific configurations and overrides necessary for the ISLE apache image and resulting container to function properly with your changes. This is the webserver that serves the Islandora / Drupal website.    ( Optional ) Edit the php.ini file to change various appropriate settings if needed otherwise leave alone.   Example - Line 820: change the  upload_max_filesize = 2000M  to a higher setting if desired. Currently at a 2GB upload limit.     Edit the file:  settings.php    Lines 251-253: add your database name, database user, and database password        Line 288: to include a 45+ alpha-numeric characters drupal hash between the quotes after this text:  $drupal_hash_salt = '';   You'll need to create this value, recommend using a password generator tool. Ensure only alpha-numeric characters are used, no symbols etc.     Line 311: Review and ensure  # $base_url =  is still commented out      Edit the file:  install_new_site.sh   line 29:    /usr/local/bin/drush site-install -y --account-name=newsite_admin --account-pass=newsite_adminpw --account-mail=admin@newsite.com --site-name=\"ISLE New Site Sample\"    Change the following values in that line above to the appropriate names and passwords for your site.   --account-name= Drupal admin account  --account-pass= Drupal admin account password  --account-mail= Email address that can be associated with Drupal admin account  --site-name= Name of your new ISLE website",
            "title": "Apache directory"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_single/#apache-sites-enabled",
            "text": "Within the  sites-enabled  directory, rename the files  newsite-sample-ssl.conf  and  newsite-sample.conf  to your domain names - example:    digital-collections.example.edu_ssl.conf    digital-collections.example.edu.conf      Edit the previously named  newsite-sample.conf  file and change lines 3 and 4 to point to the location of your apache logs on the container - example:    ErrorLog /var/log/apache2/digital-collections.example.edu.ssl.error.log    CustomLog /var/log/apache2/digital-collections.example.edu.ssl.access.log combined      Edit the previously named  newsite-sample-ssl.conf  file and change lines 4 and 5 to point to the location of your apache logs on the container - example:    ErrorLog /var/log/apache2/digital-collections.example.edu.ssl.error.log    CustomLog /var/log/apache2/digital-collections.example.edu.ssl.access.log combined      Edit the previously named  newsite-sample-ssl.conf  file and change lines 12, 13 and 14 to point to the location of your certs on the  apache  container - example:    \n    SSLCertificateFile  /certs/newsite-sample.pem\n    SSLCertificateChainFile /certs/newsite-sample-interm.pem\n    SSLCertificateKeyFile /certs/newsite-sample-key.pem",
            "title": "Apache - sites-enabled"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_single/#apache-ssl-certs",
            "text": "If need be, please refer to the  SSL certificate  section of the  Glossary  for relevant terms to help guide installation.    Copy your SSL certificates for Apache into the  apache/ssl-certs  subdirectory. They will and should have different names than the examples provided below dependent on the ISLE environment you are setting up e.g. ( production, staging or development ).    There can be up to 2 - 3 files involved in this process.    1 x SSL Certificate Key File e.g.  newsite-sample-key.pem   This file is required.  Please also note that the file extensions can also be:  .key  or  .pem     1 x SSL Certificate File e.g.  newsite-sample.pem   This file is required.  Please also note that the file extensions can also be:  .cer ,  .crt  or  .pem     1 x SSL Certificate Chain File e.g.  newsite-sample-interm.pem   This file may be  optional  in some setups but is generally recommended for use by the  apache  container when available.  It will not be used by the  proxy  container.  Please also note that the file extensions can also be:  .cer ,  .crt  or  .pem",
            "title": "Apache - ssl-certs"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_single/#apache-tmpreaper",
            "text": "( Optional ) Edit the cron file within the  apache/tmpreaper  subdirectory to change various appropriate settings if needed otherwise leave alone if you are not familiar with how cron jobs work.    Currently this cronjob is set to run every 12 hours and using the tmpreaper utility to clean out and delete the contents of the /tmp folder if they are older than 4 days.",
            "title": "Apache - tmpreaper"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_single/#fedora-directory",
            "text": "The  fedora  subdirectory contains all specific configurations and overrides necessary for the ISLE fedora image and resulting container to function properly with your changes. This is the Fedora repository that will contain all objects, metadata etc.",
            "title": "Fedora directory"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_single/#fedora-fedora",
            "text": "Within the  fedora/fedora  subdirectory,  add new passwords  in the following files:   Lines 3, 8, 14:  fedora-users.xml   (change all applicable passwords for fedora users)  Line 598:  fedora.fcfg   (change the password to the  fedora_admin   database user password  only)  Line 15:  filter-drupal.xml   (change the associated Drupal site database name , user and password, do not use settings for the  fedora3  database.)     ( Optional ) Edit either of the log4j.properties or logback.xml files to change logging levels for the  fedora  container if needed, otherwise leave alone.    Please note: If making changes, you'll need to then edit the  docker-compose.yml  file accordingly in the  fedora   volumes  section    Example add a line to make changes for the Fedora application logging.    - ./fedora/fedora/logback.xml :/usr/local/fedora/server/config/logback.xml    Example add a line to make changes for the Djatoka application logging.   - ./fedora/fedora/logback.xml :/usr/local/tomcat/webapps/adore-djatoka/WEB-INF/classes/log4j.properties           ( Optional ) Edit the contents of the repository-policies subdirectory as necessary  IF YOU NEED TO , otherwise leave alone.",
            "title": "Fedora - fedora"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_single/#fedora-gsearch",
            "text": "Within the  fedora/gsearch  subdirectory, edit the file:  fedoragsearch.properties  at line 7 and add a space after the equal sign and then add the new  gsearch fgsAdmin user password .   -  fedoragsearch.soapPass                = new_fgsAdmin_password_here     Edit the file:  fgsconfig-basic-configForIslandora.properties    Line 26: add the new  gsearch fgsAdmin user password .   gsearchPass=new_fgsAdmin_password_here     Line 67: Add the new fedora  fedora admin password .   fedoraPass=new_fedoraAdmin_password_here       Edit the file:  fedora/gsearch/fgsconfigObjects.properties  at line 15 and add a space after the equal sign and then add the new  fedora admin password .   fgsconfigObjects.fedoraPass            = new_fedoraAdmin_password_here     Edit the file:  fedora/gsearch/repository.properties  at line 7 and add a space after the equal sign and then add the new  fedora admin password .   fgsrepository.fedoraPass        = new_fedoraAdmin_password_here",
            "title": "Fedora - gsearch"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_single/#fedora-tmpreaper",
            "text": "( Optional ) Edit the cron file within  fedora/tmpreaper  to change various appropriate settings if needed otherwise leave alone if you are not familiar with how cron jobs work.    Currently this cronjob is set to run every 12 hours and using the tmpreaper utility to clean out and delete the contents of the /tmp folder if they are older than 4 days.",
            "title": "Fedora - tmpreaper"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_single/#fedora-tomcat",
            "text": "Within the  tomcat  subdirectory:   Strongly recommend adding tomcat user passwords in file:  fedora/tomcat/tomcat-users.xml     Example: ONLY ADD TOMCAT USERNAME/PASSWORD - can look like this but please use a stronger password with more than 10 alpha-numeric characters. Also note, they should NOT be the same password.:            <!-- user manager can access only manager section -->\n             <user username=\u201cmanager\u201d password=\u201ctomcat_manager_password\" roles=\u201cmanager-gui\u201d />  <!--enduser please add passwords / users and remove this comment -->\n\n          <!-- user admin can access manager and admin section both -->\n             <user username=\u201cadmin\u201d password=\u201ctomcat_admin_password\u201d roles=\u201cmanager-gui,admin-gui\u201d /> <!--enduser please add passwords / users and remove this comment -->\n\n          </tomcat-users>",
            "title": "Fedora - tomcat"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_single/#mysql-directory",
            "text": "The  mysql  subdirectory contains all specific configurations and overrides necessary for the ISLE mysql image and resulting container to function properly with your changes. This is the Mysql database server that will contain two databases, one for the Islandora / Drupal website and the other for the Fedora repository.   ( Optional ) Edit the Mysql configuration file  my.cnf  as needed otherwise leave alone.",
            "title": "Mysql directory"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_single/#mysql-initscripts",
            "text": "This subdirectory houses SQL scripts necessary for a one time creation of your associated new site and  fedora3  database.    Edit the contents of  newsite_sample_db.sql  to create the new drupal site database and user.    Line 1: Change the database name from  newsite_sample_db  to the database name of your choice.    Line 2: Change the database user name from  newsite_sample_db_user  to the database user name of your choice.    Line 3: At almost the end of the line, change the value of  newsite_sample_db.*  to the to the database name of your choice ensuring the  .*  remain without a space.    Line 3: At the end of the line, change the value of  newsite_sample_db_user'  to the to the database user name of your choice ensuring the values remain with in the  '' quotes without spaces. Do not alter the remaining code ( @'%';' ) beyond that point.      Edit the contents of  fedora3  to change the  fedora_admin  user password only.    Line 2: Change the  fedora_admin  user password from  newsite_sample_fedora_admin_pw  to the password of your choice.    It is not recommended to change anything else.",
            "title": "Mysql - initscripts"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_single/#proxy-directory",
            "text": "If need be, please refer to the  Systems  section of the  Glossary  for relevant terms to help guide installation.  The  proxy  subdirectory contains all specific configurations and overrides necessary for the ISLE proxy image and resulting container to function properly with your changes. This is the Nginx reverse proxy server that properly routes all internal and external communication between the other four containers and the ISLE Host network.",
            "title": "Proxy directory"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_single/#proxy-sites-enabled",
            "text": "In the  config/sites-enabled  subdirectory, rename the  com.sample-newsite.conf  file to  com.yourdomain.conf  (where \"yourdomain\" is the domain name of your server but the suffix .com typically last is now first.)   Example:  edu.example.digital-collections.conf     Now edit the file...    Line 6: change  newsite-sample.com  to the domain name of your choice   Ensure a space between  server_name  and the domain name and a  ;  after the domain name still remain.     Line 15: change  newsite-sample.com  to the domain name of your choice   Ensure a space between  server_name  and the domain name and a  ;  after the domain name still remain.     Lines 18 & 19: Change to the name of your ssl certs (should be same names as in previously made  apache  edits above)",
            "title": "Proxy - sites-enabled"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_single/#proxy-ssl-certs",
            "text": "Copy your SSL certs into the ssl-certs subdirectory.  DO NOT OVERWRITE OR DELETE the create_dhparam_pem file within this directory.  If need be, please refer to the  SSL certificate  section of the  Glossary  for relevant terms to help guide installation.  There are also additional links for the enduser to learn how to combine the SSL Certificate File with any available SSL Certificate Chain File for the  proxy  process to work properly.    Copy your SSL certificates for the ISLE Proxy into  proxy/ssl-certs . They will and should have different names than the examples provided below.    There can only be 2 files involved in this process.    1 x SSL Certificate Key File e.g.  newsite-sample-key.pem   This file is required.  Please also note that the file extensions can also be:  .key  or  .pem     1 x SSL Certificate File e.g.  newsite-sample.pem   This file is required.  Please also note that the file extensions can also be:  .cer ,  .crt  or  .pem         Open a terminal, navigate to the is subdirectory, and run the  create_dhparam_pem.sh  script in  ~/ISLE/config/isle-newsite-sample/proxy/ssl-certs/  subdirectory to create the  dhparam.pem  file ( if not already. ) This file is critical to the SSL encryption process and for communication between the  proxy  and  apache  containers.    To run this script from within this subdirectory:   ./create_dhparam_pem.sh .    This will take 10 -20 mins depending on the speed of your local laptop or workstation.",
            "title": "Proxy - ssl-certs"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_single/#proxy-upstreamsd",
            "text": "Single environment steps only below:    Copy and rename:  sample-upstreams.conf.disabled  to the appropriate domain name of your choice e.g.  yourdomain-upstreams.conf  while also removing the  .disabled  suffix.    Example A:  Lines 10 and 14 look like this for a single environment (no additional environments to be setup). See  proxy/config/sites-enable/com.sample-newsite.conf.disabled .    Please note:  If only ever deploying a single ISLE environment, you could chose not to add any suffixes and ISLE should function properly. This is entirely dependent on your organizational needs.  Example: Single Environment (defaults, no edits made)  \n      upstream fedora-internal {\n        server fedora:8080 fail_timeout=0;\n      }\n\n      upstream fedora-internal {\n        server apache:443 fail_timeout=0;\n      }",
            "title": "Proxy - upstreams.d"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_single/#solr-directory",
            "text": "The  solr  subdirectory contains all specific configurations and overrides necessary for the ISLE solr image and resulting container to function properly with your changes. This is the SOLR search server that properly indexes all objects and metadata to provide speedy in-depth search functionality for the Islandora / Drupal site of the objects and collections contained within the Fedora repository.  If need be, please refer to the  Solr  section of the  Glossary  for relevant terms to help guide installation.",
            "title": "Solr directory"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_single/#solr-solr",
            "text": "( Optional ) Within the  solr  subdirectory:    Make the appropriate customizations or changes to the following files as you see fit otherwise you can leave these files alone and SOLR will work out of the box.    schema.xml    solr.xml    solrconfig.xml    stopwords.txt",
            "title": "Solr - solr"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_single/#solr-tomcat",
            "text": "Within the  tomcat  subdirectory:   Strongly recommend adding tomcat user passwords in file:  solr/tomcat/tomcat-users.xml  on lines 45 & 48.     Example: ONLY ADD TOMCAT USERNAME/PASSWORD - can look like this but please use a stronger password with more than 10 alpha-numeric characters. Also note, they should NOT be the same password.:            <!-- user manager can access only manager section -->\n             <user username=\u201cmanager\u201d password=\u201ctomcat_manager_password\" roles=\u201cmanager-gui\u201d />  <!--enduser please add passwords / users and remove this comment -->\n\n          <!-- user admin can access manager and admin section both -->\n             <user username=\u201cadmin\u201d password=\u201ctomcat_admin_password\u201d roles=\u201cmanager-gui,admin-gui\u201d /> <!--enduser please add passwords / users and remove this comment -->\n\n          </tomcat-users>",
            "title": "Solr - tomcat"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_single/#final-steps",
            "text": "If need be, please refer to the  Git  section of the  Glossary  for relevant terms to help guide installation.    Now that all the changes are made (be sure to save), ISLE should be ready to test. First you'll need to push these changes to your private code repository.    Open a terminal -  cd  to the config directory you've been making the changes in...    git status   this will show you all the files that have been modified and ready to be added to your private repo along with handy paths for the next steps.    git add /pathtoyourmodifiedfile  (replace \"pathtoyourmodifiedfile\" with the path to your config directory)    run these:    git add apache  git add fedora  git add mysql  git add proxy  git add solr  git add docker-compose.yml  git add newsite-sample-cheatsheet.md    Enter  git status  again - everything should be in green now as all modified files have been added - if anything's still red use git add and the path to add it    then run  git commit -m \"initial config commit\"  inside the double quotes is the commit message you can say whatever you want in this message - so for example if this is the config for your dev instance you could say that...    Enter  git push origin master    This will push all your changes to the repo.    Further changes should be made on git branches for different servers or environments e.g.  prod, stage, dev  or to master branch for this same server.",
            "title": "Final steps"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_single/#clone-custom-configuration-to-host-server",
            "text": "Please note:  If running a (multi) ISLE environment, you will make separate git config directories to this effect and repeat these steps accordingly.    Open a terminal - ssh into your host server using the  islandora  user    cd  to  /opt/ISLE/config/    Because your customizations are in a  private  repository, you'll need to add this islandora user's  id_rsa.pub  key to the git repository settings via it's settings profile within the appropriate website.    This key is found in  /home/islandora/.ssh/id_rsa.pub    One can simply run  cat /home/islandora/.ssh/id_rsa.pub  and copy the output (ensure no whitespaces or extra returns)    Go to the repository web site with a browser and locate your private repository.    Locate the ssh key entry location (in Bitbucket this is in Settings / Access Keys /    Add  an ssh key w/ the label  isle host server islandora deploy user  paste in the key text and click  Add Key      Back at your terminal command line, run  git clone URLpathtoyourremoteprivaterepo.git .  (replacing \"URLpathtoyourremoteprivaterepo\" with the URL to the repository provided by the website)    cd  into the newly cloned directory",
            "title": "Clone Custom Configuration to Host Server"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_single/#spin-up-isle-containers",
            "text": "run  docker-compose up -d    run  docker exec -it yourApacheContainerNameHere bash   Using the name from the  docker-composer.yml  file here ( typically: isle-apache-prod, or -stage, etc... )     cd /tmp/isle_drupal_build_tools    Run:  ./install_new_site.sh    Give this process 15 - 25 minutes ( depending on the speed of the ISLE Host server internet connection )    Check the newly created and running new site by opening a browser and navigating to your site domain e.g.  https://digital-collections.example.edu , you should now see an un-themed Drupal site.",
            "title": "Spin up ISLE containers!"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_multi/",
            "text": "This guide documents how an enduser can spin up and install \nmultiple\n ISLE / Islandora sites within multiple ISLE / Islandora environments e.g. (production, staging and development) all tailored to using their own unique domains / URLs.\n\n\nA new ISLE / Islandora environment can include the option to create an un-themed Drupal website and empty Fedora repository for endusers to develop code, perform ingests, edit metadata, update fields in SOLR indexing all essential in ultimately creating a new ISLE production site.\n\n\nWhile this checklist will attempt to point out most of the usage challenges or pitfalls, ISLE assumes no responsibility or liability in this matter should an enduser have customizations beyond what this guide outlines.\n\n\nIndex of related documents\n\n\n\n\nNew Site Example User Story\n\n\n\n\n\n\nPlease note:\n There is a \nGlossary\n with relevant terms to help guide installation.\n\n\nAssumptions / Prerequisites\n\n\n\n\n\n\nComfortability with ISLE. Recommend first setting up the ISLE Test Site (\nisle.localdomain\n) via the \nInstall Start Here\n guide. If you have already done this, please proceed.\n\n\n\n\n\n\nHost Server that conforms to the specifications outlined in the \nHost Server Specifications\n\n\n\n\n\n\nThis new site guide is designed for a Host server that has already followed the appropriate setup and configuration instructions in the \nCreate a new ISLE site\n section of the \nInstall Start Here\n guide.\n\n\n\n\n\n\nInstructions below also assume a MacOS or Linux laptop or workstation to be used in conjunction with the ISLE Host Server for deploying configs, code, files etc. Windows users may have to adjust / swap out various tools as needed.\n\n\n\n\n\n\nThese directions also depend on the type of local computer used to connect via browser to Islandora.\n\n\n\n\n\n\nHave an existing domain name that works - is set up with DNS etc...\n\n\n\n\n\n\nHave \nSSL Certificates\n previously created for the web domain. (\nPlease work with the appropriate internal IT resource to provision these files for your domain\n)\n\n\n\n\n\n\nISLE project has been cloned to BOTH your local laptop/workstation AND the ISLE host server\n\n\n\n\n\n\n\n\nMultiple ISLE / Islandora Environments\n\n\nWhen attempting to configure multiple ISLE / Islandora environments, all sections labeled \n(multi)\n provide additional steps to follow and/or repeat.\n\n\nThis is primarily because only one \nproxy\n container is needed to manage all ISLE environments (e.g. production, staging and development) on one ISLE Host Server or VM.\n\n\nWhen deploying multiple ISLE environments on one ISLE host server, a few extra steps are needed as well.\n\n\nOnce the initial ISLE environment has been setup for all following environments, you'll need to please do the following:\n\n\n\n\n\n\nContinue to use / copy the \nisle-newsite-sample\n directory for any new or additional ISLE environments as directed above.\n\n\n\n\n\n\nPer each section with a \n(multi)\n indicated, edit files accordingly but be aware that you'll be moving them into the appropriate subdirectory of the first created ISLE environment's \nproxy\n directory.\n\n\n\n\n\n\nNo other ISLE environments are to a) use their own \nproxy\n directory and b) have a \nproxy:\n section within their separate \ndocker-compose.yml\n files.\n\n\n\n\n\n\nOnly use one \nproxy\n for multi ISLE environments. This container will route connections and traffic properly, keeping environments separate and data siloed.\n\n\n\n\n\n\nExample:\n\n\nMultiple ISLE environments enabled within the first ISLE config using a single \nproxy\n.\n\n\nIn this example the \ndev\n ISLE environment was created first for testing and additional environments \nstage\n and \nprod\n (production) were added but are still controlled by the \nproxy\n config within the first created ISLE environment \ndev\n. This is what the final results should look like. Please note, you could run more than one site this way and are only limited by the appropriate resources of your ISLE host server.\n\n\n\u251c\u2500\u2500 isle-newsite-dev.yourdomain.edu          (1st ISLE environment created with proxy subdirectory and proxy: section in its docker-compose.yml)\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 proxy\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 config\n\u2502\u00a0\u00a0         \u251c\u2500\u2500 sites-enabled\n\u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 edu.example.digital-collections-dev.conf\n\u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 edu.example.digital-collections-prod.conf\n\u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u2514\u2500\u2500 edu.example.digital-collections-stage.conf\n\u2502\u00a0\u00a0         \u251c\u2500\u2500 ssl-certs\n\u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 edu.example.digital-collections-dev-interm.pem\n\u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 edu.example.digital-collections-dev-key.pem\n\u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 edu.example.digital-collections-dev.pem\n\u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 edu.example.digital-collections-prod-interm.pem\n\u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 edu.example.digital-collections-prod-key.pem\n\u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 edu.example.digital-collections-prod.pem\n\u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 edu.example.digital-collections-stage-interm.pem\n\u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 edu.example.digital-collections-stage-key.pem\n\u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u2514\u2500\u2500 edu.example.digital-collections-stage.pem\n\u2502\u00a0\u00a0         \u2514\u2500\u2500 upstreams.d\n\u2502\u00a0\u00a0             \u251c\u2500\u2500 edu.example.digital-collections-dev.conf\n\u2502\u00a0\u00a0             \u251c\u2500\u2500 edu.example.digital-collections-prod.conf\n\u2502\u00a0\u00a0             \u2514\u2500\u2500 edu.example.digital-collections-stage.conf\n|\n\u251c\u2500\u2500 isle-newsite-prod.yourdomain.edu            (3rd ISLE environment created, no proxy subdirectory, no proxy: section in its docker-compose.yml)\n|\n\u251c\u2500\u2500 isle-newsite-sample                         \n|\n\u2514\u2500\u2500 isle-newsite-stage.yourdomain.edu           (2nd ISLE environment created, no proxy subdirectory, no proxy section in its docker-compose.yml)\n\n\n\n\n\n\nOverview\n\n\n\n\n\n\nSetup a Private Code Repository\n\n\n\n\nMost of the work in this guide involves careful editing of the various configuration and settings files that customize the pieces of Islandora (database, repository, web-server, etc...).\n\n\nDoing this work in a code repository makes it easier to correct errors and to repeat the process for additional servers without needing to replicate all the work.\n\n\nSince the edits could include things like passwords, it's important to make this a private repository.\n\n\n\n\n\n\n\n\nCustomizing for your Environment\n\n\n\n\nMany of the steps below describe adding the domain name or other specific bits of information into files or appending those bits to file names.\n\n\nIn these cases this guide will call out the customization point AND provide an example - it's important not to literally copy paste the example!\n\n\n\n\n\n\n\n\n\n\nCreate Private Code Repository\n\n\nON your local laptop/workstation:\n\n\n\n\n\n\nUsing a git repository of your choice (GitHub, GitLab, Bitbucket, etc.) create a PRIVATE remote git repo - see the specific code repository documentation online for setup instructions.\n\n\n\n\n\n\nOpen a terminal - navigate to \n/opt/ISLE/config\n (\nor where you put the ISLE directory on your local workstation.\n)\n\n\n\n\n\n\nCreate a new directory with a name of your choice\n\n\n\n\n\n\nExample: where \"digital-collections.yourdomain.com\" is your server domain name e.g.:  \nconfig/digital-collections.example.edu\n\n\n\n\n\n\nPlease do not use this literal value.\n\n\n\n\n\n\nLocate the directory within the \n/opt/ISLE/config/\n directory called \nisle-newsite-sample\n and copy all of its contents into your newly created directory.\n\n\n\n\n\n\ncd\n into the newly copied and renamed \ndigital-collections.example.edu\n directory and type:\n \ngit init\n to imitate this directory as a code repository.\n\n\n\n\n\n\ngit remote add NameOfYourRepository URLofYourRepository\n to connect your local repository to the remote you set up in the above steps.\n\n\n\n\n[\nNOTE\n replace \"NameOfYourRepository\" and \"URLofYourRepository\" with the name of your git repository and its URL]\n\n\n\n\n\n\n\n\nYou are now ready to perform the customization edits in this directory (you can use a text editor of choice now don't have to stay in terminal - just locate the folder in the finder and open file in text editor)\n\n\n\n\n\n\nEdits\n\n\nDocker compose file:\n\n\n\n\n\n\nEdit the file: \ndocker-compose.yml\n accordingly:\n\n\n\n\n\n\nChange container names based on the environment (prod, stage, dev, etc)\n\n\n\n\n\n\nFor example if you are building a dev server instance:\n\n\ncontainer_name: isle-solr-newsite\n\n\nchanges to:\n\n\ncontainer_name: isle-solr-dev\n\n\nand so on...\n\n\n\n\n\n\n\n\n\n\nPlease note:\n Much of the file is already with comments guiding the enduser to key areas or files to edit or modify accordingly.\n\n\n\n\nConfig directories\n\n\nNow proceed to make edits to files within the config subdirectories:\n\n\na. to reflect \nenvironment\n (prod, stage, dev, etc...)\n\n\nb. to involve your \ndomain name\n (digital-collections.example.edu)\n\n\nThere are five subdirectories which have the appropriate settings for each respective container and service:\n\n\n\n\napache\n\n\nfedora\n\n\nmysql\n\n\nproxy\n\n\nsolr\n\n\n\n\n\n\nApache directory\n\n\nThe \napache\n subdirectory contains all specific configurations and overrides necessary for the ISLE apache image and resulting container to function properly with your changes. This is the webserver that serves the Islandora / Drupal website.\n\n\n\n\n\n\n(\nOptional\n) Edit the php.ini file to change various appropriate settings if needed otherwise leave alone.\n\n\n\n\nExample - Line 820: change the \nupload_max_filesize = 2000M\n to a higher setting if desired. Currently at a 2GB upload limit.\n\n\n\n\n\n\n\n\nEdit the file: \nsettings.php\n\n\n\n\n\n\nLines 251-253: add your database name, database user, and database password    \n\n\n\n\n\n\nLine 288: to include a 45+ alpha-numeric characters drupal hash between the quotes after this text: \n$drupal_hash_salt = '';\n\n\n\n\nYou'll need to create this value, recommend using a password generator tool. Ensure only alpha-numeric characters are used, no symbols etc.\n\n\n\n\n\n\n\n\nLine 311: Review and ensure \n# $base_url =\n is still commented out\n\n\n\n\n\n\n\n\n\n\nEdit the file: \ninstall_new_site.sh\n  line 29:\n\n\n\n\n\n\n/usr/local/bin/drush site-install -y --account-name=newsite_admin --account-pass=newsite_adminpw --account-mail=admin@newsite.com --site-name=\"ISLE New Site Sample\"\n\n\n\n\n\n\nChange the following values in that line above to the appropriate names and passwords for your site.\n\n\n\n\n--account-name= Drupal admin account\n\n\n--account-pass= Drupal admin account password\n\n\n--account-mail= Email address that can be associated with Drupal admin account\n\n\n--site-name= Name of your new ISLE website\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nApache - sites-enabled\n\n\n\n\n\n\nWithin the \nsites-enabled\n directory, rename the files \nnewsite-sample-ssl.conf\n and \nnewsite-sample.conf\n to your domain names - example:\n\n\n\n\n\n\ndigital-collections.example.edu_ssl.conf\n\n\n\n\n\n\ndigital-collections.example.edu.conf\n\n\n\n\n\n\n\n\n\n\nEdit the previously named \nnewsite-sample.conf\n file and change lines 3 and 4 to point to the location of your apache logs on the container - example:\n\n\n\n\n\n\nErrorLog /var/log/apache2/digital-collections.example.edu.ssl.error.log\n\n\n\n\n\n\nCustomLog /var/log/apache2/digital-collections.example.edu.ssl.access.log combined\n\n\n\n\n\n\n\n\n\n\nEdit the previously named \nnewsite-sample-ssl.conf\n file and change lines 4 and 5 to point to the location of your apache logs on the container - example:\n\n\n\n\n\n\nErrorLog /var/log/apache2/digital-collections.example.edu.ssl.error.log\n\n\n\n\n\n\nCustomLog /var/log/apache2/digital-collections.example.edu.ssl.access.log combined\n\n\n\n\n\n\n\n\n\n\nEdit the previously named \nnewsite-sample-ssl.conf\n file and change lines 12 and 13 to point to the location of your certs on the container - example:\n\n\n\n\n\n\n\n    SSLCertificateFile  /certs/newsite-sample.pem\n    SSLCertificateChainFile /certs/newsite-sample-interm.pem\n    SSLCertificateKeyFile /certs/newsite-sample-key.pem\n\n\n\n\n\n\n\nApache - ssl-certs\n\n\nIf need be, please refer to the \nSSL certificate\n section of the \nGlossary\n for relevant terms to help guide installation.\n\n\n\n\n\n\nCopy your SSL certificates for Apache into the \napache/ssl-certs\n subdirectory. They will and should have different names than the examples provided below dependent on the ISLE environment you are setting up e.g. (\nproduction, staging or development\n).\n\n\n\n\n\n\nThere can be up to 2 - 3 files involved in this process.\n\n\n\n\n\n\n1 x SSL Certificate Key File e.g. \nnewsite-sample-key.pem\n\n\n\n\nThis file is required.\n\n\nPlease also note that the file extensions can also be: \n.key\n or \n.pem\n\n\n\n\n\n\n\n\n1 x SSL Certificate File e.g. \nnewsite-sample.pem\n\n\n\n\nThis file is required.\n\n\nPlease also note that the file extensions can also be: \n.cer\n, \n.crt\n or \n.pem\n\n\n\n\n\n\n\n\n1 x SSL Certificate Chain File e.g. \nnewsite-sample-interm.pem\n\n\n\n\nThis file may be \noptional\n in some setups but is generally recommended for use by the \napache\n container when available.\n\n\nIt will not be used by the \nproxy\n container.\n\n\nPlease also note that the file extensions can also be: \n.cer\n, \n.crt\n or \n.pem\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nApache - ssl-certs (multi)\n\n\n\n\nWhen creating multiple environments for ISLE, please change all of the file and key names accordingly to reflect the environment e.g. adding (\n-prod, -stage, -dev\n to file names). Later on, this process will assist in organizing proper filing of files for the \nproxy\n container and stop any situation where a file gets overwritten or improperly referenced by the wrong environment.\n\n\n\n\nExample:\n\n\n* 1 x SSL Certificate Key File e.g. `newsite-dev-key.pem`\n* 1 x SSL Certificate File e.g. `newsite-dev.pem`\n* 1 x SSL Certificate Chain File e.g. `newsite-dev-interm.pem`\n\n\n\n\n\nApache - tmpreaper\n\n\n\n\n\n\n(\nOptional\n) Edit the cron file within the \napache/tmpreaper\n subdirectory to change various appropriate settings if needed otherwise leave alone if you are not familiar with how cron jobs work.\n\n\n\n\n\n\nCurrently this cronjob is set to run every 12 hours and using the tmpreaper utility to clean out and delete the contents of the /tmp folder if they are older than 4 days.\n\n\n\n\n\n\n\n\nFedora directory\n\n\nThe \nfedora\n subdirectory contains all specific configurations and overrides necessary for the ISLE fedora image and resulting container to function properly with your changes. This is the Fedora repository that will contain all objects, metadata etc.\n\n\nFedora - fedora\n\n\n\n\n\n\nWithin the \nfedora/fedora\n subdirectory, \nadd new passwords\n in the following files:\n\n\n\n\nLines 3, 8, 14: \nfedora-users.xml\n  (change all applicable passwords for fedora users)\n\n\nLine 598: \nfedora.fcfg\n  (change the password to the \nfedora_admin\n \ndatabase user password\n only)\n\n\nLine 15: \nfilter-drupal.xml\n  (change the associated Drupal site database name , user and password, do not use settings for the \nfedora3\n database.)\n\n\n\n\n\n\n\n\n(\nOptional\n) Edit either of the log4j.properties or logback.xml files to change logging levels for the \nfedora\n container if needed, otherwise leave alone.\n\n\n\n\n\n\nPlease note: If making changes, you'll need to then edit the \ndocker-compose.yml\n file accordingly in the \nfedora\n \nvolumes\n section\n\n\n\n\n\n\nExample add a line to make changes for the Fedora application logging.\n\n\n\n\n\n\n- ./fedora/fedora/logback.xml :/usr/local/fedora/server/config/logback.xml\n\n\n\n\n\n\nExample add a line to make changes for the Djatoka application logging.\n\n\n\n\n- ./fedora/fedora/logback.xml :/usr/local/tomcat/webapps/adore-djatoka/WEB-INF/classes/log4j.properties\n     \n\n\n\n\n\n\n\n\n(\nOptional\n) Edit the contents of the repository-policies subdirectory as necessary \nIF YOU NEED TO\n, otherwise leave alone.\n\n\n\n\n\n\n\n\nFedora - gsearch\n\n\n\n\n\n\nWithin the \nfedora/gsearch\n subdirectory, edit the file: \nfedoragsearch.properties\n at line 7 and add a space after the equal sign and then add the new \ngsearch fgsAdmin user password\n.\n\n\n\n\n-  fedoragsearch.soapPass                = new_fgsAdmin_password_here\n\n\n\n\n\n\n\n\nEdit the file: \nfgsconfig-basic-configForIslandora.properties\n\n\n\n\n\n\nLine 26: add the new \ngsearch fgsAdmin user password\n.\n\n\n\n\ngsearchPass=new_fgsAdmin_password_here\n\n\n\n\n\n\n\n\nLine 67: Add the new fedora \nfedora admin password\n.\n\n\n\n\nfedoraPass=new_fedoraAdmin_password_here\n\n\n\n\n\n\n\n\n\n\n\n\nEdit the file: \nfedora/gsearch/fgsconfigObjects.properties\n at line 15 and add a space after the equal sign and then add the new \nfedora admin password\n.\n\n\n\n\nfgsconfigObjects.fedoraPass            = new_fedoraAdmin_password_here\n\n\n\n\n\n\n\n\nEdit the file: \nfedora/gsearch/repository.properties\n at line 7 and add a space after the equal sign and then add the new \nfedora admin password\n.\n\n\n\n\nfgsrepository.fedoraPass        = new_fedoraAdmin_password_here\n\n\n\n\n\n\n\n\n\n\nFedora - tmpreaper\n\n\n\n\n\n\n(\nOptional\n) Edit the cron file within \nfedora/tmpreaper\n to change various appropriate settings if needed otherwise leave alone if you are not familiar with how cron jobs work.\n\n\n\n\n\n\nCurrently this cronjob is set to run every 12 hours and using the tmpreaper utility to clean out and delete the contents of the /tmp folder if they are older than 4 days.\n\n\n\n\n\n\n\n\nFedora - tomcat\n\n\n\n\n\n\nWithin the \ntomcat\n subdirectory:\n\n\n\n\nStrongly recommend adding tomcat user passwords in file: \nfedora/tomcat/tomcat-users.xml\n\n\n\n\n\n\n\n\nExample: ONLY ADD TOMCAT USERNAME/PASSWORD - can look like this but please use a stronger password with more than 10 alpha-numeric characters. Also note, they should NOT be the same password.:\n\n\n          <!-- user manager can access only manager section -->\n             <user username=\u201cmanager\u201d password=\u201ctomcat_manager_password\" roles=\u201cmanager-gui\u201d />  <!--enduser please add passwords / users and remove this comment -->\n\n          <!-- user admin can access manager and admin section both -->\n             <user username=\u201cadmin\u201d password=\u201ctomcat_admin_password\u201d roles=\u201cmanager-gui,admin-gui\u201d /> <!--enduser please add passwords / users and remove this comment -->\n\n          </tomcat-users>\n\n\n\n\n\n\n\nMysql directory\n\n\nThe \nmysql\n subdirectory contains all specific configurations and overrides necessary for the ISLE mysql image and resulting container to function properly with your changes. This is the Mysql database server that will contain two databases, one for the Islandora / Drupal website and the other for the Fedora repository.\n\n\n\n\n(\nOptional\n) Edit the Mysql configuration file \nmy.cnf\n as needed otherwise leave alone.\n\n\n\n\nMysql - initscripts\n\n\nThis subdirectory houses SQL scripts necessary for a one time creation of your associated new site and \nfedora3\n database.\n\n\n\n\n\n\nEdit the contents of \nnewsite_sample_db.sql\n to create the new drupal site database and user.\n\n\n\n\n\n\nLine 1: Change the database name from \nnewsite_sample_db\n to the database name of your choice.\n\n\n\n\n\n\nLine 2: Change the database user name from \nnewsite_sample_db_user\n to the database user name of your choice.\n\n\n\n\n\n\nLine 3: At almost the end of the line, change the value of \nnewsite_sample_db.*\n to the to the database name of your choice ensuring the \n.*\n remain without a space.\n\n\n\n\n\n\nLine 3: At the end of the line, change the value of \nnewsite_sample_db_user'\n to the to the database user name of your choice ensuring the values remain with in the \n''\nquotes without spaces. Do not alter the remaining code (\n@'%';'\n) beyond that point.\n\n\n\n\n\n\n\n\n\n\nEdit the contents of \nfedora3\n to change the \nfedora_admin\n user password only.\n\n\n\n\n\n\nLine 2: Change the \nfedora_admin\n user password from \nnewsite_sample_fedora_admin_pw\n to the password of your choice.\n\n\n\n\n\n\nIt is not recommended to change anything else.\n\n\n\n\n\n\n\n\n\n\n\n\nProxy directory\n\n\nIf need be, please refer to the \nSystems\n section of the \nGlossary\n for relevant terms to help guide installation.\n\n\nThe \nproxy\n subdirectory contains all specific configurations and overrides necessary for the ISLE proxy image and resulting container to function properly with your changes. This is the Nginx reverse proxy server that properly routes all internal and external communication between the other four containers and the ISLE Host network.\n\n\nProxy - sites-enabled\n\n\n\n\n\n\nIn the \nconfig/sites-enabled\n subdirectory, rename the \ncom.sample-newsite.conf\n file to \ncom.yourdomain.conf\n (where \"yourdomain\" is the domain name of your server but the suffix .com typically last is now first.)\n\n\n\n\nExample: \nedu.example.digital-collections.conf\n\n\n\n\n\n\n\n\nNow edit the file...\n\n\n\n\n\n\nLine 6: change \nnewsite-sample.com\n to the domain name of your choice\n\n\n\n\nEnsure a space between \nserver_name\n and the domain name and a \n;\n after the domain name still remain.\n\n\n\n\n\n\n\n\nLine 15: change \nnewsite-sample.com\n to the domain name of your choice\n\n\n\n\nEnsure a space between \nserver_name\n and the domain name and a \n;\n after the domain name still remain.\n\n\n\n\n\n\n\n\nLines 18 & 19: Change to the name of your ssl certs (should be same names as in previously made \napache\n edits above)\n\n\n\n\n\n\n\n\n\n\nProxy - sites-enabled (multi)\n\n\nPlease note:\n If you only intend to deploy one ISLE environment ever e.g. a Production environment, you do not necessarily have to edit all of the following. You can move onto the next section.\n\n\nOtherwise, if you are planning on running multiple ISLE environments e.g. production, development etc together on one ISLE host server, please continue to edit your .conf file accordingly.\n\n\nPlease also note:\n The order of environment creation is not necessarily important e.g you don't need to setup a development environment prior to a production one. However in general, best practice is to test prior to opening up a server to the public.\n\n\n\n\n\n\nLine 54: Add the appropriate environment suffix e.g. \n-prod, -stage, -dev etc.\n\n\n\n\nExample: Change \nproxy_pass https://apache-internal;\n to \nproxy_pass https://apache-internal-dev;\n\n\n\n\n\n\n\n\nLine 66: Add the appropriate environment suffix e.g. \n-prod, -stage, -dev etc.\n\n\n\n\nExample: Change \nproxy_pass http://fedora-internal/adore-djatoka;\n to \nproxy_pass http://fedora-internal-dev/adore-djatoka;\n\n\n\n\n\n\n\n\nLine 74: Add the appropriate environment suffix e.g. \n-prod, -stage, -dev etc.\n\n\n\n\nExample: Change \nproxy_pass http://fedora-internal/fedora/get;\n to `proxy_pass http://fedora-internal-dev/fedora/get;``\n\n\n\n\n\n\n\n\nLine 80: Add the appropriate environment suffix e.g. \n-prod, -stage, -dev etc.\n\n\n\n\nExample: Change \nproxy_pass http://fedora-internal/fedora/services;\n to \nproxy_pass http://fedora-internal-dev/fedora/services;\n\n\n\n\n\n\n\n\nLine 86: Add the appropriate environment suffix e.g. \n-prod, -stage, -dev etc.\n\n\n\n\nExample: Change \nproxy_pass http://fedora-internal/fedora/describe;\n to \nproxy_pass http://fedora-internal-dev/fedora/describe;\n\n\n\n\n\n\n\n\nLine 92: Add the appropriate environment suffix e.g. \n-prod, -stage, -dev etc.\n\n\n\n\nExample: Change \nproxy_pass http://fedora-internal/fedora/risearch;\n to `proxy_pass http://fedora-internal-dev/fedora/risearch;``\n\n\n\n\n\n\n\n\nUpon completing all edits, move the resulting file to the first setup ISLE environment \nproxy/config/sites-enabled\n directory.\n\n\nExample directory contents with multiple ISLE environment configurations:\n\n\n\n\n\n\nedu.example.digital-collections-dev.conf\n\n\n\n\n\n\nedu.example.digital-collections-stage.conf\n\n\n\n\n\n\nedu.example.digital-collections-prod.conf\n\n\n\n\n\n\n\n\nProxy - ssl-certs\n\n\nCopy your SSL certs into the ssl-certs subdirectory.\n\n\nDO NOT OVERWRITE OR DELETE the create_dhparam_pem file within this directory.\n\n\nIf need be, please refer to the \nSSL certificate\n section of the \nGlossary\n for relevant terms to help guide installation.\n\n\nThere are also additional links for the enduser to learn how to combine the SSL Certificate File with any available SSL Certificate Chain File for the \nproxy\n process to work properly.\n\n\n\n\n\n\nCopy your SSL certificates for the ISLE Proxy into \nproxy/ssl-certs\n. They will and should have different names than the examples provided below.\n\n\n\n\n\n\nThere can only be 2 files involved in this process.\n\n\n\n\n\n\n1 x SSL Certificate Key File e.g. \nnewsite-sample-key.pem\n\n\n\n\nThis file is required.\n\n\nPlease also note that the file extensions can also be: \n.key\n or \n.pem\n\n\n\n\n\n\n\n\n1 x SSL Certificate File e.g. \nnewsite-sample.pem\n\n\n\n\nThis file is required.\n\n\nPlease also note that the file extensions can also be: \n.cer\n, \n.crt\n or \n.pem\n\n\n\n\n\n\n\n\n\n\n\n\nOpen a terminal, navigate to the is subdirectory, and run the \ncreate_dhparam_pem.sh\n script in \n~/ISLE/config/isle-newsite-sample/proxy/ssl-certs/\n subdirectory to create the \ndhparam.pem\n file (\nif not already.\n) This file is critical to the SSL encryption process and for communication between the \nproxy\n and \napache\n containers.\n\n\n\n\n\n\nTo run this script from within this subdirectory:  \n./create_dhparam_pem.sh\n.\n\n\n\n\n\n\nThis will take 10 -20 mins depending on the speed of your local laptop or workstation.\n\n\n\n\n\n\n\n\n\n\nProxy - ssl-certs (multi)\n\n\nCopy all of your SSL certificates and keys for all environments into the ssl-certs subdirectory.\n\n\nThe proxy directory for the first setup ISLE environment is to be used for all following environments due to the current architecture of ISLE.\n\n\nAs per the instructions outlined previously in the section \nApache - ssl-certs (multi)\n, when creating multiple environments for ISLE, please change all of the file and key names accordingly to reflect the environment e.g. adding (\n-prod, -stage, -dev\n to file names). Later on, this process will assist in organizing proper filing of files for the \nproxy\n container and stop any situation where a file gets overwritten or improperly referenced by the wrong environment.\n\n\nExample:\n\n\n\n\n1 x SSL Certificate Key File e.g. \nnewsite-dev-key.pem\n\n\n\n\n1 x SSL Certificate File e.g. \nnewsite-dev.pem\n\n\n\n\n\n\n1 x SSL Certificate Key File e.g. \nnewsite-stage-key.pem\n\n\n\n\n\n\n1 x SSL Certificate File e.g. \nnewsite-stage.pem\n\n\n\n\n\n\n1 x SSL Certificate Key File e.g. \nnewsite-prod-key.pem\n\n\n\n\n1 x SSL Certificate File e.g. \nnewsite-prod.pem\n\n\n\n\nFor all following ISLE environments, please delete the proxy directory found within each environments config parent directory.\n\n\nExample:\n\n\n\n\n\n\n1st ISLE environment setup: Keep the proxy directory e.g. Keep this \n~/opt/ISLE/config/isle-newsite-dev/proxy\n\n\n\n\n\n\n2nd ISLE environment setup: Delete the proxy directory e.g. remove this \n~/opt/ISLE/config/isle-newsite-stage/proxy\n\n\n\n\n\n\n3rd ISLE environment setup: Delete the proxy directorye.g. \nremove this~/opt/ISLE/config/isle-newsite-prod/proxy\n\n\n\n\n\n\nand so on...\n\n\n\n\nProxy - upstreams.d\n\n\nSingle environment steps only below:\n\n\n\n\n\n\nCopy and rename: \nsample-upstreams.conf.disabled\n to the appropriate domain name of your choice e.g. \nyourdomain-upstreams-dev.conf\n while also removing the \n.disabled\n suffix.\n\n\n\n\n\n\nExample A:\n Lines 10 and 14 look like this for a single environment (no additional environments to be setup). See \nproxy/config/sites-enable/com.sample-newsite.conf.disabled\n.\n\n\n\n\n\n\nPlease note:\n If only ever deploying a single ISLE environment, you could chose not to add any suffixes and ISLE should function properly. This is entirely dependent on your organizational needs.\n\n\nExample: Single Environment (defaults, no edits made)\n\n\n\n      upstream fedora-internal {\n        server fedora:8080 fail_timeout=0;\n      }\n\n      upstream fedora-internal {\n        server apache:443 fail_timeout=0;\n      }\n\n\n\n\n\nProxy - upstreams.d (multi)\n\n\n\n\n\n\nCopy and rename: \nsample-upstreams.conf.disabled\n to the appropriate domain name and environment type (\ndev, prod, stage, etc...\n) of your choice e.g. \nyourdomain-upstreams-dev.conf\n while also removing the \n.disabled\n suffix.\n\n\n\n\n\n\nWithin the file, append the environment name after all instances of \"internal\" proceeded by a hyphen \"-environment_type\" like the example below:\n\n\n\n\n\n\nExample A:\n Lines 10 and 14 look like this for a development environment that will be run alongside more ISLE environments to follow. See \nproxy/config/sites-enable/com.sample-newsite.conf.disabled\n.\n\n\n\n\n\n\nExample: Multi Environment (dev as example)\n\n\n\n      upstream fedora-internal-dev {\n        server fedora:8080 fail_timeout=0;\n      }\n\n      upstream fedora-internal-dev {\n        server apache:443 fail_timeout=0;\n      }\n\n\n\n\n\nPlease note:\n You do not add additional environment code here e.g. \n-prod or -stage\n. Each environment has its own .conf file to manage this seperately.\n\n\nUpon completing all edits, move the resulting file to the first setup ISLE environment \nproxy/config/upstreams.d\n directory.\n\n\nExample \nproxy/config/sites-enabled/\n directory contents running multi-environments.\n\n\n\n\n\n\nedu.example.digital-collections-dev.conf\n\n\n\n\n\n\nedu.example.digital-collections-prod.conf\n\n\n\n\n\n\nedu.example.digital-collections-stage.conf\n\n\n\n\n\n\nProxy - docker-compose.yml (only multi)\n\n\n\n\n\n\nWithin each new \ndocker-compose.yml\n file created for each new environment:\n\n\n\n\n\n\nDelete the \nproxy\n section entirely\n\n\n\n\ndelete Lines 94 \nproxy:\n to Line 111.\n\n\n\n\n\n\n\n\nUncomment Lines 118 & 119\n\n\n\n\n\n\nExample:\n\n\n\n# Defined networks\nnetworks:\n  isle-internal:\n  isle-external:\n#    external: true            # edit if running a new multi environment\n#    name: isle_isle-internal  # edit if running a new multi environment\n\n\n\n\n\nshould now become\n\n\n# Defined networks\nnetworks:\n  isle-internal:\n  isle-external:\n    external: true          \n    name: isle_isle-internal\n\n\n\n\n\n\n\n\n\n(\noptional\n) Once you have the 1st ISLE environment running, you can double check this value for later ISLE environments by entering:\n\n\n\n\ndocker network ls\n to review current running network types.\n\n\n\n\n\n\n\n\nExample:\n\n\nNETWORK ID          NAME                                        DRIVER              SCOPE\n7361197ad494        bridge                                      bridge              local\n7d37894dd4ca        host                                        host                local\nd4994fca8ea7        isle_isle-external                          bridge              local\n22518b818c29        isle_isle-internal                          bridge              local\n\n\n\n\n\n\nSolr directory\n\n\nThe \nsolr\n subdirectory contains all specific configurations and overrides necessary for the ISLE solr image and resulting container to function properly with your changes. This is the SOLR search server that properly indexes all objects and metadata to provide speedy in-depth search functionality for the Islandora / Drupal site of the objects and collections contained within the Fedora repository.\n\n\nIf need be, please refer to the \nSolr\n section of the \nGlossary\n for relevant terms to help guide installation.\n\n\nSolr - solr\n\n\n\n\n\n\n(\nOptional\n) Within the \nsolr\n subdirectory:\n\n\n\n\n\n\nMake the appropriate customizations or changes to the following files as you see fit otherwise you can leave these files alone and SOLR will work out of the box.\n\n\n\n\n\n\nschema.xml\n\n\n\n\n\n\nsolr.xml\n\n\n\n\n\n\nsolrconfig.xml\n\n\n\n\n\n\nstopwords.txt\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSolr - tomcat\n\n\n\n\n\n\nWithin the \ntomcat\n subdirectory:\n\n\n\n\nStrongly recommend adding tomcat user passwords in file: \nsolr/tomcat/tomcat-users.xml\n on lines 45 & 48.\n\n\n\n\n\n\n\n\nExample: ONLY ADD TOMCAT USERNAME/PASSWORD - can look like this but please use a stronger password with more than 10 alpha-numeric characters. Also note, they should NOT be the same password.:\n\n\n          <!-- user manager can access only manager section -->\n             <user username=\u201cmanager\u201d password=\u201ctomcat_manager_password\" roles=\u201cmanager-gui\u201d />  <!--enduser please add passwords / users and remove this comment -->\n\n          <!-- user admin can access manager and admin section both -->\n             <user username=\u201cadmin\u201d password=\u201ctomcat_admin_password\u201d roles=\u201cmanager-gui,admin-gui\u201d /> <!--enduser please add passwords / users and remove this comment -->\n\n          </tomcat-users>\n\n\n\n\n\n\n\nFinal steps\n\n\nIf need be, please refer to the \nGit\n section of the \nGlossary\n for relevant terms to help guide installation.\n\n\n\n\n\n\nNow that all the changes are made (be sure to save), ISLE should be ready to test. First you'll need to push these changes to your private code repository.\n\n\n\n\n\n\nOpen a terminal - \ncd\n to the config directory you've been making the changes in...\n\n\n\n\n\n\ngit status\n  this will show you all the files that have been modified and ready to be added to your private repo along with handy paths for the next steps.\n\n\n\n\n\n\ngit add /pathtoyourmodifiedfile\n (replace \"pathtoyourmodifiedfile\" with the path to your config directory)\n\n\n\n\n\n\nrun these:\n\n\n\n\n\n\ngit add apache\n\n\ngit add fedora\n\n\ngit add mysql\n\n\ngit add proxy\n\n\ngit add solr\n\n\ngit add docker-compose.yml\n\n\ngit add newsite-sample-cheatsheet.md\n\n\n\n\n\n\nEnter \ngit status\n again - everything should be in green now as all modified files have been added - if anything's still red use git add and the path to add it\n\n\n\n\n\n\nthen run \ngit commit -m \"initial config commit\"\n inside the double quotes is the commit message you can say whatever you want in this message - so for example if this is the config for your dev instance you could say that...\n\n\n\n\n\n\nEnter \ngit push origin master\n\n\n\n\n\n\nThis will push all your changes to the repo.\n\n\n\n\n\n\nFurther changes should be made on git branches for different servers or environments e.g. \nprod, stage, dev\n or to master branch for this same server.\n\n\n\n\n\n\n\n\n\n\n\n\nClone Custom Configuration to Host Server\n\n\nPlease note:\n If running a (multi) ISLE environment, you will make separate git config directories to this effect and repeat these steps accordingly.\n\n\n\n\n\n\nOpen a terminal - ssh into your host server using the \nislandora\n user\n\n\n\n\n\n\ncd\n to \n/opt/ISLE/config/\n\n\n\n\n\n\nBecause your customizations are in a \nprivate\n repository, you'll need to add this islandora user's \nid_rsa.pub\n key to the git repository settings via it's settings profile within the appropriate website.\n\n\n\n\n\n\nThis key is found in \n/home/islandora/.ssh/id_rsa.pub\n\n\n\n\n\n\nOne can simply run \ncat /home/islandora/.ssh/id_rsa.pub\n and copy the output (ensure no whitespaces or extra returns)\n\n\n\n\n\n\nGo to the repository web site with a browser and locate your private repository.\n\n\n\n\n\n\nLocate the ssh key entry location (in Bitbucket this is in Settings / Access Keys /\n\n\n\n\n\n\nAdd\n an ssh key w/ the label \nisle host server islandora deploy user\n paste in the key text and click \nAdd Key\n\n\n\n\n\n\n\n\n\n\nBack at your terminal command line, run \ngit clone URLpathtoyourremoteprivaterepo.git .\n (replacing \"URLpathtoyourremoteprivaterepo\" with the URL to the repository provided by the website)\n\n\n\n\n\n\ncd\n into the newly cloned directory\n\n\n\n\n\n\nSpin up ISLE containers!\n\n\n\n\n\n\nrun \ndocker-compose up -d\n\n\n\n\n\n\nrun \ndocker exec -it yourApacheContainerNameHere bash\n\n\n\n\nUsing the name from the \ndocker-composer.yml\n file here (\ntypically: isle-apache-prod, or -stage, etc...\n)\n\n\n\n\n\n\n\n\ncd /tmp/isle_drupal_build_tools\n\n\n\n\n\n\nRun: \n./install_new_site.sh\n\n\n\n\n\n\nGive this process 15 - 25 minutes (\ndepending on the speed of the ISLE Host server internet connection\n)\n\n\n\n\n\n\nCheck the newly created and running new site by opening a browser and navigating to your site domain e.g. \nhttps://digital-collections.example.edu\n, you should now see an un-themed Drupal site.",
            "title": "New Site Installation Guide - w/ multiple ISLE Environments"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_multi/#index-of-related-documents",
            "text": "New Site Example User Story    Please note:  There is a  Glossary  with relevant terms to help guide installation.",
            "title": "Index of related documents"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_multi/#assumptions-prerequisites",
            "text": "Comfortability with ISLE. Recommend first setting up the ISLE Test Site ( isle.localdomain ) via the  Install Start Here  guide. If you have already done this, please proceed.    Host Server that conforms to the specifications outlined in the  Host Server Specifications    This new site guide is designed for a Host server that has already followed the appropriate setup and configuration instructions in the  Create a new ISLE site  section of the  Install Start Here  guide.    Instructions below also assume a MacOS or Linux laptop or workstation to be used in conjunction with the ISLE Host Server for deploying configs, code, files etc. Windows users may have to adjust / swap out various tools as needed.    These directions also depend on the type of local computer used to connect via browser to Islandora.    Have an existing domain name that works - is set up with DNS etc...    Have  SSL Certificates  previously created for the web domain. ( Please work with the appropriate internal IT resource to provision these files for your domain )    ISLE project has been cloned to BOTH your local laptop/workstation AND the ISLE host server",
            "title": "Assumptions / Prerequisites"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_multi/#multiple-isle-islandora-environments",
            "text": "When attempting to configure multiple ISLE / Islandora environments, all sections labeled  (multi)  provide additional steps to follow and/or repeat.  This is primarily because only one  proxy  container is needed to manage all ISLE environments (e.g. production, staging and development) on one ISLE Host Server or VM.  When deploying multiple ISLE environments on one ISLE host server, a few extra steps are needed as well.  Once the initial ISLE environment has been setup for all following environments, you'll need to please do the following:    Continue to use / copy the  isle-newsite-sample  directory for any new or additional ISLE environments as directed above.    Per each section with a  (multi)  indicated, edit files accordingly but be aware that you'll be moving them into the appropriate subdirectory of the first created ISLE environment's  proxy  directory.    No other ISLE environments are to a) use their own  proxy  directory and b) have a  proxy:  section within their separate  docker-compose.yml  files.    Only use one  proxy  for multi ISLE environments. This container will route connections and traffic properly, keeping environments separate and data siloed.    Example:  Multiple ISLE environments enabled within the first ISLE config using a single  proxy .  In this example the  dev  ISLE environment was created first for testing and additional environments  stage  and  prod  (production) were added but are still controlled by the  proxy  config within the first created ISLE environment  dev . This is what the final results should look like. Please note, you could run more than one site this way and are only limited by the appropriate resources of your ISLE host server.  \u251c\u2500\u2500 isle-newsite-dev.yourdomain.edu          (1st ISLE environment created with proxy subdirectory and proxy: section in its docker-compose.yml)\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 proxy\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 config\n\u2502\u00a0\u00a0         \u251c\u2500\u2500 sites-enabled\n\u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 edu.example.digital-collections-dev.conf\n\u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 edu.example.digital-collections-prod.conf\n\u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u2514\u2500\u2500 edu.example.digital-collections-stage.conf\n\u2502\u00a0\u00a0         \u251c\u2500\u2500 ssl-certs\n\u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 edu.example.digital-collections-dev-interm.pem\n\u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 edu.example.digital-collections-dev-key.pem\n\u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 edu.example.digital-collections-dev.pem\n\u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 edu.example.digital-collections-prod-interm.pem\n\u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 edu.example.digital-collections-prod-key.pem\n\u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 edu.example.digital-collections-prod.pem\n\u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 edu.example.digital-collections-stage-interm.pem\n\u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 edu.example.digital-collections-stage-key.pem\n\u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u2514\u2500\u2500 edu.example.digital-collections-stage.pem\n\u2502\u00a0\u00a0         \u2514\u2500\u2500 upstreams.d\n\u2502\u00a0\u00a0             \u251c\u2500\u2500 edu.example.digital-collections-dev.conf\n\u2502\u00a0\u00a0             \u251c\u2500\u2500 edu.example.digital-collections-prod.conf\n\u2502\u00a0\u00a0             \u2514\u2500\u2500 edu.example.digital-collections-stage.conf\n|\n\u251c\u2500\u2500 isle-newsite-prod.yourdomain.edu            (3rd ISLE environment created, no proxy subdirectory, no proxy: section in its docker-compose.yml)\n|\n\u251c\u2500\u2500 isle-newsite-sample                         \n|\n\u2514\u2500\u2500 isle-newsite-stage.yourdomain.edu           (2nd ISLE environment created, no proxy subdirectory, no proxy section in its docker-compose.yml)",
            "title": "Multiple ISLE / Islandora Environments"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_multi/#overview",
            "text": "Setup a Private Code Repository   Most of the work in this guide involves careful editing of the various configuration and settings files that customize the pieces of Islandora (database, repository, web-server, etc...).  Doing this work in a code repository makes it easier to correct errors and to repeat the process for additional servers without needing to replicate all the work.  Since the edits could include things like passwords, it's important to make this a private repository.     Customizing for your Environment   Many of the steps below describe adding the domain name or other specific bits of information into files or appending those bits to file names.  In these cases this guide will call out the customization point AND provide an example - it's important not to literally copy paste the example!",
            "title": "Overview"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_multi/#create-private-code-repository",
            "text": "ON your local laptop/workstation:    Using a git repository of your choice (GitHub, GitLab, Bitbucket, etc.) create a PRIVATE remote git repo - see the specific code repository documentation online for setup instructions.    Open a terminal - navigate to  /opt/ISLE/config  ( or where you put the ISLE directory on your local workstation. )    Create a new directory with a name of your choice    Example: where \"digital-collections.yourdomain.com\" is your server domain name e.g.:   config/digital-collections.example.edu    Please do not use this literal value.    Locate the directory within the  /opt/ISLE/config/  directory called  isle-newsite-sample  and copy all of its contents into your newly created directory.    cd  into the newly copied and renamed  digital-collections.example.edu  directory and type:\n  git init  to imitate this directory as a code repository.    git remote add NameOfYourRepository URLofYourRepository  to connect your local repository to the remote you set up in the above steps.   [ NOTE  replace \"NameOfYourRepository\" and \"URLofYourRepository\" with the name of your git repository and its URL]     You are now ready to perform the customization edits in this directory (you can use a text editor of choice now don't have to stay in terminal - just locate the folder in the finder and open file in text editor)",
            "title": "Create Private Code Repository"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_multi/#edits",
            "text": "",
            "title": "Edits"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_multi/#docker-compose-file",
            "text": "Edit the file:  docker-compose.yml  accordingly:    Change container names based on the environment (prod, stage, dev, etc)    For example if you are building a dev server instance:  container_name: isle-solr-newsite  changes to:  container_name: isle-solr-dev  and so on...      Please note:  Much of the file is already with comments guiding the enduser to key areas or files to edit or modify accordingly.",
            "title": "Docker compose file:"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_multi/#config-directories",
            "text": "Now proceed to make edits to files within the config subdirectories:  a. to reflect  environment  (prod, stage, dev, etc...)  b. to involve your  domain name  (digital-collections.example.edu)  There are five subdirectories which have the appropriate settings for each respective container and service:   apache  fedora  mysql  proxy  solr",
            "title": "Config directories"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_multi/#apache-directory",
            "text": "The  apache  subdirectory contains all specific configurations and overrides necessary for the ISLE apache image and resulting container to function properly with your changes. This is the webserver that serves the Islandora / Drupal website.    ( Optional ) Edit the php.ini file to change various appropriate settings if needed otherwise leave alone.   Example - Line 820: change the  upload_max_filesize = 2000M  to a higher setting if desired. Currently at a 2GB upload limit.     Edit the file:  settings.php    Lines 251-253: add your database name, database user, and database password        Line 288: to include a 45+ alpha-numeric characters drupal hash between the quotes after this text:  $drupal_hash_salt = '';   You'll need to create this value, recommend using a password generator tool. Ensure only alpha-numeric characters are used, no symbols etc.     Line 311: Review and ensure  # $base_url =  is still commented out      Edit the file:  install_new_site.sh   line 29:    /usr/local/bin/drush site-install -y --account-name=newsite_admin --account-pass=newsite_adminpw --account-mail=admin@newsite.com --site-name=\"ISLE New Site Sample\"    Change the following values in that line above to the appropriate names and passwords for your site.   --account-name= Drupal admin account  --account-pass= Drupal admin account password  --account-mail= Email address that can be associated with Drupal admin account  --site-name= Name of your new ISLE website",
            "title": "Apache directory"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_multi/#apache-sites-enabled",
            "text": "Within the  sites-enabled  directory, rename the files  newsite-sample-ssl.conf  and  newsite-sample.conf  to your domain names - example:    digital-collections.example.edu_ssl.conf    digital-collections.example.edu.conf      Edit the previously named  newsite-sample.conf  file and change lines 3 and 4 to point to the location of your apache logs on the container - example:    ErrorLog /var/log/apache2/digital-collections.example.edu.ssl.error.log    CustomLog /var/log/apache2/digital-collections.example.edu.ssl.access.log combined      Edit the previously named  newsite-sample-ssl.conf  file and change lines 4 and 5 to point to the location of your apache logs on the container - example:    ErrorLog /var/log/apache2/digital-collections.example.edu.ssl.error.log    CustomLog /var/log/apache2/digital-collections.example.edu.ssl.access.log combined      Edit the previously named  newsite-sample-ssl.conf  file and change lines 12 and 13 to point to the location of your certs on the container - example:    \n    SSLCertificateFile  /certs/newsite-sample.pem\n    SSLCertificateChainFile /certs/newsite-sample-interm.pem\n    SSLCertificateKeyFile /certs/newsite-sample-key.pem",
            "title": "Apache - sites-enabled"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_multi/#apache-ssl-certs",
            "text": "If need be, please refer to the  SSL certificate  section of the  Glossary  for relevant terms to help guide installation.    Copy your SSL certificates for Apache into the  apache/ssl-certs  subdirectory. They will and should have different names than the examples provided below dependent on the ISLE environment you are setting up e.g. ( production, staging or development ).    There can be up to 2 - 3 files involved in this process.    1 x SSL Certificate Key File e.g.  newsite-sample-key.pem   This file is required.  Please also note that the file extensions can also be:  .key  or  .pem     1 x SSL Certificate File e.g.  newsite-sample.pem   This file is required.  Please also note that the file extensions can also be:  .cer ,  .crt  or  .pem     1 x SSL Certificate Chain File e.g.  newsite-sample-interm.pem   This file may be  optional  in some setups but is generally recommended for use by the  apache  container when available.  It will not be used by the  proxy  container.  Please also note that the file extensions can also be:  .cer ,  .crt  or  .pem",
            "title": "Apache - ssl-certs"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_multi/#apache-ssl-certs-multi",
            "text": "When creating multiple environments for ISLE, please change all of the file and key names accordingly to reflect the environment e.g. adding ( -prod, -stage, -dev  to file names). Later on, this process will assist in organizing proper filing of files for the  proxy  container and stop any situation where a file gets overwritten or improperly referenced by the wrong environment.   Example:  * 1 x SSL Certificate Key File e.g. `newsite-dev-key.pem`\n* 1 x SSL Certificate File e.g. `newsite-dev.pem`\n* 1 x SSL Certificate Chain File e.g. `newsite-dev-interm.pem`",
            "title": "Apache - ssl-certs (multi)"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_multi/#apache-tmpreaper",
            "text": "( Optional ) Edit the cron file within the  apache/tmpreaper  subdirectory to change various appropriate settings if needed otherwise leave alone if you are not familiar with how cron jobs work.    Currently this cronjob is set to run every 12 hours and using the tmpreaper utility to clean out and delete the contents of the /tmp folder if they are older than 4 days.",
            "title": "Apache - tmpreaper"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_multi/#fedora-directory",
            "text": "The  fedora  subdirectory contains all specific configurations and overrides necessary for the ISLE fedora image and resulting container to function properly with your changes. This is the Fedora repository that will contain all objects, metadata etc.",
            "title": "Fedora directory"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_multi/#fedora-fedora",
            "text": "Within the  fedora/fedora  subdirectory,  add new passwords  in the following files:   Lines 3, 8, 14:  fedora-users.xml   (change all applicable passwords for fedora users)  Line 598:  fedora.fcfg   (change the password to the  fedora_admin   database user password  only)  Line 15:  filter-drupal.xml   (change the associated Drupal site database name , user and password, do not use settings for the  fedora3  database.)     ( Optional ) Edit either of the log4j.properties or logback.xml files to change logging levels for the  fedora  container if needed, otherwise leave alone.    Please note: If making changes, you'll need to then edit the  docker-compose.yml  file accordingly in the  fedora   volumes  section    Example add a line to make changes for the Fedora application logging.    - ./fedora/fedora/logback.xml :/usr/local/fedora/server/config/logback.xml    Example add a line to make changes for the Djatoka application logging.   - ./fedora/fedora/logback.xml :/usr/local/tomcat/webapps/adore-djatoka/WEB-INF/classes/log4j.properties           ( Optional ) Edit the contents of the repository-policies subdirectory as necessary  IF YOU NEED TO , otherwise leave alone.",
            "title": "Fedora - fedora"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_multi/#fedora-gsearch",
            "text": "Within the  fedora/gsearch  subdirectory, edit the file:  fedoragsearch.properties  at line 7 and add a space after the equal sign and then add the new  gsearch fgsAdmin user password .   -  fedoragsearch.soapPass                = new_fgsAdmin_password_here     Edit the file:  fgsconfig-basic-configForIslandora.properties    Line 26: add the new  gsearch fgsAdmin user password .   gsearchPass=new_fgsAdmin_password_here     Line 67: Add the new fedora  fedora admin password .   fedoraPass=new_fedoraAdmin_password_here       Edit the file:  fedora/gsearch/fgsconfigObjects.properties  at line 15 and add a space after the equal sign and then add the new  fedora admin password .   fgsconfigObjects.fedoraPass            = new_fedoraAdmin_password_here     Edit the file:  fedora/gsearch/repository.properties  at line 7 and add a space after the equal sign and then add the new  fedora admin password .   fgsrepository.fedoraPass        = new_fedoraAdmin_password_here",
            "title": "Fedora - gsearch"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_multi/#fedora-tmpreaper",
            "text": "( Optional ) Edit the cron file within  fedora/tmpreaper  to change various appropriate settings if needed otherwise leave alone if you are not familiar with how cron jobs work.    Currently this cronjob is set to run every 12 hours and using the tmpreaper utility to clean out and delete the contents of the /tmp folder if they are older than 4 days.",
            "title": "Fedora - tmpreaper"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_multi/#fedora-tomcat",
            "text": "Within the  tomcat  subdirectory:   Strongly recommend adding tomcat user passwords in file:  fedora/tomcat/tomcat-users.xml     Example: ONLY ADD TOMCAT USERNAME/PASSWORD - can look like this but please use a stronger password with more than 10 alpha-numeric characters. Also note, they should NOT be the same password.:            <!-- user manager can access only manager section -->\n             <user username=\u201cmanager\u201d password=\u201ctomcat_manager_password\" roles=\u201cmanager-gui\u201d />  <!--enduser please add passwords / users and remove this comment -->\n\n          <!-- user admin can access manager and admin section both -->\n             <user username=\u201cadmin\u201d password=\u201ctomcat_admin_password\u201d roles=\u201cmanager-gui,admin-gui\u201d /> <!--enduser please add passwords / users and remove this comment -->\n\n          </tomcat-users>",
            "title": "Fedora - tomcat"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_multi/#mysql-directory",
            "text": "The  mysql  subdirectory contains all specific configurations and overrides necessary for the ISLE mysql image and resulting container to function properly with your changes. This is the Mysql database server that will contain two databases, one for the Islandora / Drupal website and the other for the Fedora repository.   ( Optional ) Edit the Mysql configuration file  my.cnf  as needed otherwise leave alone.",
            "title": "Mysql directory"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_multi/#mysql-initscripts",
            "text": "This subdirectory houses SQL scripts necessary for a one time creation of your associated new site and  fedora3  database.    Edit the contents of  newsite_sample_db.sql  to create the new drupal site database and user.    Line 1: Change the database name from  newsite_sample_db  to the database name of your choice.    Line 2: Change the database user name from  newsite_sample_db_user  to the database user name of your choice.    Line 3: At almost the end of the line, change the value of  newsite_sample_db.*  to the to the database name of your choice ensuring the  .*  remain without a space.    Line 3: At the end of the line, change the value of  newsite_sample_db_user'  to the to the database user name of your choice ensuring the values remain with in the  '' quotes without spaces. Do not alter the remaining code ( @'%';' ) beyond that point.      Edit the contents of  fedora3  to change the  fedora_admin  user password only.    Line 2: Change the  fedora_admin  user password from  newsite_sample_fedora_admin_pw  to the password of your choice.    It is not recommended to change anything else.",
            "title": "Mysql - initscripts"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_multi/#proxy-directory",
            "text": "If need be, please refer to the  Systems  section of the  Glossary  for relevant terms to help guide installation.  The  proxy  subdirectory contains all specific configurations and overrides necessary for the ISLE proxy image and resulting container to function properly with your changes. This is the Nginx reverse proxy server that properly routes all internal and external communication between the other four containers and the ISLE Host network.",
            "title": "Proxy directory"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_multi/#proxy-sites-enabled",
            "text": "In the  config/sites-enabled  subdirectory, rename the  com.sample-newsite.conf  file to  com.yourdomain.conf  (where \"yourdomain\" is the domain name of your server but the suffix .com typically last is now first.)   Example:  edu.example.digital-collections.conf     Now edit the file...    Line 6: change  newsite-sample.com  to the domain name of your choice   Ensure a space between  server_name  and the domain name and a  ;  after the domain name still remain.     Line 15: change  newsite-sample.com  to the domain name of your choice   Ensure a space between  server_name  and the domain name and a  ;  after the domain name still remain.     Lines 18 & 19: Change to the name of your ssl certs (should be same names as in previously made  apache  edits above)",
            "title": "Proxy - sites-enabled"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_multi/#proxy-sites-enabled-multi",
            "text": "Please note:  If you only intend to deploy one ISLE environment ever e.g. a Production environment, you do not necessarily have to edit all of the following. You can move onto the next section.  Otherwise, if you are planning on running multiple ISLE environments e.g. production, development etc together on one ISLE host server, please continue to edit your .conf file accordingly.  Please also note:  The order of environment creation is not necessarily important e.g you don't need to setup a development environment prior to a production one. However in general, best practice is to test prior to opening up a server to the public.    Line 54: Add the appropriate environment suffix e.g.  -prod, -stage, -dev etc.   Example: Change  proxy_pass https://apache-internal;  to  proxy_pass https://apache-internal-dev;     Line 66: Add the appropriate environment suffix e.g.  -prod, -stage, -dev etc.   Example: Change  proxy_pass http://fedora-internal/adore-djatoka;  to  proxy_pass http://fedora-internal-dev/adore-djatoka;     Line 74: Add the appropriate environment suffix e.g.  -prod, -stage, -dev etc.   Example: Change  proxy_pass http://fedora-internal/fedora/get;  to `proxy_pass http://fedora-internal-dev/fedora/get;``     Line 80: Add the appropriate environment suffix e.g.  -prod, -stage, -dev etc.   Example: Change  proxy_pass http://fedora-internal/fedora/services;  to  proxy_pass http://fedora-internal-dev/fedora/services;     Line 86: Add the appropriate environment suffix e.g.  -prod, -stage, -dev etc.   Example: Change  proxy_pass http://fedora-internal/fedora/describe;  to  proxy_pass http://fedora-internal-dev/fedora/describe;     Line 92: Add the appropriate environment suffix e.g.  -prod, -stage, -dev etc.   Example: Change  proxy_pass http://fedora-internal/fedora/risearch;  to `proxy_pass http://fedora-internal-dev/fedora/risearch;``     Upon completing all edits, move the resulting file to the first setup ISLE environment  proxy/config/sites-enabled  directory.  Example directory contents with multiple ISLE environment configurations:    edu.example.digital-collections-dev.conf    edu.example.digital-collections-stage.conf    edu.example.digital-collections-prod.conf",
            "title": "Proxy - sites-enabled (multi)"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_multi/#proxy-ssl-certs",
            "text": "Copy your SSL certs into the ssl-certs subdirectory.  DO NOT OVERWRITE OR DELETE the create_dhparam_pem file within this directory.  If need be, please refer to the  SSL certificate  section of the  Glossary  for relevant terms to help guide installation.  There are also additional links for the enduser to learn how to combine the SSL Certificate File with any available SSL Certificate Chain File for the  proxy  process to work properly.    Copy your SSL certificates for the ISLE Proxy into  proxy/ssl-certs . They will and should have different names than the examples provided below.    There can only be 2 files involved in this process.    1 x SSL Certificate Key File e.g.  newsite-sample-key.pem   This file is required.  Please also note that the file extensions can also be:  .key  or  .pem     1 x SSL Certificate File e.g.  newsite-sample.pem   This file is required.  Please also note that the file extensions can also be:  .cer ,  .crt  or  .pem       Open a terminal, navigate to the is subdirectory, and run the  create_dhparam_pem.sh  script in  ~/ISLE/config/isle-newsite-sample/proxy/ssl-certs/  subdirectory to create the  dhparam.pem  file ( if not already. ) This file is critical to the SSL encryption process and for communication between the  proxy  and  apache  containers.    To run this script from within this subdirectory:   ./create_dhparam_pem.sh .    This will take 10 -20 mins depending on the speed of your local laptop or workstation.",
            "title": "Proxy - ssl-certs"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_multi/#proxy-ssl-certs-multi",
            "text": "Copy all of your SSL certificates and keys for all environments into the ssl-certs subdirectory.  The proxy directory for the first setup ISLE environment is to be used for all following environments due to the current architecture of ISLE.  As per the instructions outlined previously in the section  Apache - ssl-certs (multi) , when creating multiple environments for ISLE, please change all of the file and key names accordingly to reflect the environment e.g. adding ( -prod, -stage, -dev  to file names). Later on, this process will assist in organizing proper filing of files for the  proxy  container and stop any situation where a file gets overwritten or improperly referenced by the wrong environment.  Example:   1 x SSL Certificate Key File e.g.  newsite-dev-key.pem   1 x SSL Certificate File e.g.  newsite-dev.pem    1 x SSL Certificate Key File e.g.  newsite-stage-key.pem    1 x SSL Certificate File e.g.  newsite-stage.pem    1 x SSL Certificate Key File e.g.  newsite-prod-key.pem   1 x SSL Certificate File e.g.  newsite-prod.pem   For all following ISLE environments, please delete the proxy directory found within each environments config parent directory.  Example:    1st ISLE environment setup: Keep the proxy directory e.g. Keep this  ~/opt/ISLE/config/isle-newsite-dev/proxy    2nd ISLE environment setup: Delete the proxy directory e.g. remove this  ~/opt/ISLE/config/isle-newsite-stage/proxy    3rd ISLE environment setup: Delete the proxy directorye.g.  remove this~/opt/ISLE/config/isle-newsite-prod/proxy    and so on...",
            "title": "Proxy - ssl-certs (multi)"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_multi/#proxy-upstreamsd",
            "text": "Single environment steps only below:    Copy and rename:  sample-upstreams.conf.disabled  to the appropriate domain name of your choice e.g.  yourdomain-upstreams-dev.conf  while also removing the  .disabled  suffix.    Example A:  Lines 10 and 14 look like this for a single environment (no additional environments to be setup). See  proxy/config/sites-enable/com.sample-newsite.conf.disabled .    Please note:  If only ever deploying a single ISLE environment, you could chose not to add any suffixes and ISLE should function properly. This is entirely dependent on your organizational needs.  Example: Single Environment (defaults, no edits made)  \n      upstream fedora-internal {\n        server fedora:8080 fail_timeout=0;\n      }\n\n      upstream fedora-internal {\n        server apache:443 fail_timeout=0;\n      }",
            "title": "Proxy - upstreams.d"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_multi/#proxy-upstreamsd-multi",
            "text": "Copy and rename:  sample-upstreams.conf.disabled  to the appropriate domain name and environment type ( dev, prod, stage, etc... ) of your choice e.g.  yourdomain-upstreams-dev.conf  while also removing the  .disabled  suffix.    Within the file, append the environment name after all instances of \"internal\" proceeded by a hyphen \"-environment_type\" like the example below:    Example A:  Lines 10 and 14 look like this for a development environment that will be run alongside more ISLE environments to follow. See  proxy/config/sites-enable/com.sample-newsite.conf.disabled .    Example: Multi Environment (dev as example)  \n      upstream fedora-internal-dev {\n        server fedora:8080 fail_timeout=0;\n      }\n\n      upstream fedora-internal-dev {\n        server apache:443 fail_timeout=0;\n      }  Please note:  You do not add additional environment code here e.g.  -prod or -stage . Each environment has its own .conf file to manage this seperately.  Upon completing all edits, move the resulting file to the first setup ISLE environment  proxy/config/upstreams.d  directory.  Example  proxy/config/sites-enabled/  directory contents running multi-environments.    edu.example.digital-collections-dev.conf    edu.example.digital-collections-prod.conf    edu.example.digital-collections-stage.conf",
            "title": "Proxy - upstreams.d (multi)"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_multi/#proxy-docker-composeyml-only-multi",
            "text": "Within each new  docker-compose.yml  file created for each new environment:    Delete the  proxy  section entirely   delete Lines 94  proxy:  to Line 111.     Uncomment Lines 118 & 119    Example:  \n# Defined networks\nnetworks:\n  isle-internal:\n  isle-external:\n#    external: true            # edit if running a new multi environment\n#    name: isle_isle-internal  # edit if running a new multi environment  should now become  # Defined networks\nnetworks:\n  isle-internal:\n  isle-external:\n    external: true          \n    name: isle_isle-internal    ( optional ) Once you have the 1st ISLE environment running, you can double check this value for later ISLE environments by entering:   docker network ls  to review current running network types.     Example:  NETWORK ID          NAME                                        DRIVER              SCOPE\n7361197ad494        bridge                                      bridge              local\n7d37894dd4ca        host                                        host                local\nd4994fca8ea7        isle_isle-external                          bridge              local\n22518b818c29        isle_isle-internal                          bridge              local",
            "title": "Proxy - docker-compose.yml (only multi)"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_multi/#solr-directory",
            "text": "The  solr  subdirectory contains all specific configurations and overrides necessary for the ISLE solr image and resulting container to function properly with your changes. This is the SOLR search server that properly indexes all objects and metadata to provide speedy in-depth search functionality for the Islandora / Drupal site of the objects and collections contained within the Fedora repository.  If need be, please refer to the  Solr  section of the  Glossary  for relevant terms to help guide installation.",
            "title": "Solr directory"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_multi/#solr-solr",
            "text": "( Optional ) Within the  solr  subdirectory:    Make the appropriate customizations or changes to the following files as you see fit otherwise you can leave these files alone and SOLR will work out of the box.    schema.xml    solr.xml    solrconfig.xml    stopwords.txt",
            "title": "Solr - solr"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_multi/#solr-tomcat",
            "text": "Within the  tomcat  subdirectory:   Strongly recommend adding tomcat user passwords in file:  solr/tomcat/tomcat-users.xml  on lines 45 & 48.     Example: ONLY ADD TOMCAT USERNAME/PASSWORD - can look like this but please use a stronger password with more than 10 alpha-numeric characters. Also note, they should NOT be the same password.:            <!-- user manager can access only manager section -->\n             <user username=\u201cmanager\u201d password=\u201ctomcat_manager_password\" roles=\u201cmanager-gui\u201d />  <!--enduser please add passwords / users and remove this comment -->\n\n          <!-- user admin can access manager and admin section both -->\n             <user username=\u201cadmin\u201d password=\u201ctomcat_admin_password\u201d roles=\u201cmanager-gui,admin-gui\u201d /> <!--enduser please add passwords / users and remove this comment -->\n\n          </tomcat-users>",
            "title": "Solr - tomcat"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_multi/#final-steps",
            "text": "If need be, please refer to the  Git  section of the  Glossary  for relevant terms to help guide installation.    Now that all the changes are made (be sure to save), ISLE should be ready to test. First you'll need to push these changes to your private code repository.    Open a terminal -  cd  to the config directory you've been making the changes in...    git status   this will show you all the files that have been modified and ready to be added to your private repo along with handy paths for the next steps.    git add /pathtoyourmodifiedfile  (replace \"pathtoyourmodifiedfile\" with the path to your config directory)    run these:    git add apache  git add fedora  git add mysql  git add proxy  git add solr  git add docker-compose.yml  git add newsite-sample-cheatsheet.md    Enter  git status  again - everything should be in green now as all modified files have been added - if anything's still red use git add and the path to add it    then run  git commit -m \"initial config commit\"  inside the double quotes is the commit message you can say whatever you want in this message - so for example if this is the config for your dev instance you could say that...    Enter  git push origin master    This will push all your changes to the repo.    Further changes should be made on git branches for different servers or environments e.g.  prod, stage, dev  or to master branch for this same server.",
            "title": "Final steps"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_multi/#clone-custom-configuration-to-host-server",
            "text": "Please note:  If running a (multi) ISLE environment, you will make separate git config directories to this effect and repeat these steps accordingly.    Open a terminal - ssh into your host server using the  islandora  user    cd  to  /opt/ISLE/config/    Because your customizations are in a  private  repository, you'll need to add this islandora user's  id_rsa.pub  key to the git repository settings via it's settings profile within the appropriate website.    This key is found in  /home/islandora/.ssh/id_rsa.pub    One can simply run  cat /home/islandora/.ssh/id_rsa.pub  and copy the output (ensure no whitespaces or extra returns)    Go to the repository web site with a browser and locate your private repository.    Locate the ssh key entry location (in Bitbucket this is in Settings / Access Keys /    Add  an ssh key w/ the label  isle host server islandora deploy user  paste in the key text and click  Add Key      Back at your terminal command line, run  git clone URLpathtoyourremoteprivaterepo.git .  (replacing \"URLpathtoyourremoteprivaterepo\" with the URL to the repository provided by the website)    cd  into the newly cloned directory",
            "title": "Clone Custom Configuration to Host Server"
        },
        {
            "location": "/03_installation_new_site/new_site_installation_guide_multi/#spin-up-isle-containers",
            "text": "run  docker-compose up -d    run  docker exec -it yourApacheContainerNameHere bash   Using the name from the  docker-composer.yml  file here ( typically: isle-apache-prod, or -stage, etc... )     cd /tmp/isle_drupal_build_tools    Run:  ./install_new_site.sh    Give this process 15 - 25 minutes ( depending on the speed of the ISLE Host server internet connection )    Check the newly created and running new site by opening a browser and navigating to your site domain e.g.  https://digital-collections.example.edu , you should now see an un-themed Drupal site.",
            "title": "Spin up ISLE containers!"
        },
        {
            "location": "/04_installation_migration/migration_example_user_story/",
            "text": "Migrating an Islandora site to ISLE: sample user story...\n\n\nLaverne's college archive runs an Islandora site on a server in the college IT data center. The site was installed and set up by a colleague who has since left. Some components are outdated and the work of maintaining the server and software stack is taking up a lot of Laverne's time. She's decided to try migrating the site to a new one built with ISLE.\n\n\nShe begins by requesting a second server from IT - based on the [System_Requirements]. IT prefers not to give clients root-level access so they agree to make Laverne a user called islandora according to the [Host_Server_Setup] instructions and provide her with the SSH login instructions. The new server has attached storage large enough to hold a copy of the existing Fedora data store from the old server.\n\n\nAdditionally, Laverne requests a new URL for the ISLE-based Islandora site \"https://digital.university-college.edu\" and ensures that IT has created DNS records so that this URL directs to the new server.\n\n\nOnce she has access to the server and has installed the necessary software including the ISLE repository files from GitHub [Host_Server_Setup], Larverne is ready for the step-by-step [Migration_Guide]. She begins by creating a place-holder directory in the new server for all the existing Islandora site data - and copying that data over from the old server using the [migration_export_checklist] as a guide. This data will be left in the place-holder directory as a backup during the coming migration process.\n\n\nLaverne now creates the permanent directory structure for ISLE to use in customizing the Islandora install and re-copies the data into this structure from the place-holder directory. Since this is merely a test, she's going to skip the process of setting up an institutional Git Repository for her customization files and move on to the merge section of the guide.\n\n\nWorking through the [migration_merge_checklist], Laverne ensures that the directories and files listed have been copied into the ISLE directory structure created above. As specified in the checklist, some of these files are slightly different in her current production Islandora. For example, the  and that they have been compared to (and in some cases merged by hand) with the stock up-to-date versions of these files that come with ISLE. This turns out to be the most complex part of the entire migration process and Laverne reaches out to the [ISLE_Group_List] for assistance with a couple of the configuration files that had been edited in the past by the colleague who set up the original Islandora system.\n\n\nFinally, she makes the necessary edits to the docker-compose.yml file to add the necessary connection specific information. This is where she will insert the new Url and IP addresses along with a number of other site-specific customizations [migration_docker_compose_checklist].\n\n\nNow she can enter the commands from the [Migration_Guide] to download the container images from Dockerhub and start them according to the instructions. After the Fedora container is up and running, Laverne follows the steps to test that all is well and sees a running Tomcat server w/ a list of running applications including fedora and Fedoragsearch. After starting the remaining containers, Laverne runs the Apache install script. If all goes well the next step will be to point a browser at the new Url and see a working Islandora site!",
            "title": "Migration Example User Story"
        },
        {
            "location": "/04_installation_migration/migration_example_user_story/#migrating-an-islandora-site-to-isle-sample-user-story",
            "text": "Laverne's college archive runs an Islandora site on a server in the college IT data center. The site was installed and set up by a colleague who has since left. Some components are outdated and the work of maintaining the server and software stack is taking up a lot of Laverne's time. She's decided to try migrating the site to a new one built with ISLE.  She begins by requesting a second server from IT - based on the [System_Requirements]. IT prefers not to give clients root-level access so they agree to make Laverne a user called islandora according to the [Host_Server_Setup] instructions and provide her with the SSH login instructions. The new server has attached storage large enough to hold a copy of the existing Fedora data store from the old server.  Additionally, Laverne requests a new URL for the ISLE-based Islandora site \"https://digital.university-college.edu\" and ensures that IT has created DNS records so that this URL directs to the new server.  Once she has access to the server and has installed the necessary software including the ISLE repository files from GitHub [Host_Server_Setup], Larverne is ready for the step-by-step [Migration_Guide]. She begins by creating a place-holder directory in the new server for all the existing Islandora site data - and copying that data over from the old server using the [migration_export_checklist] as a guide. This data will be left in the place-holder directory as a backup during the coming migration process.  Laverne now creates the permanent directory structure for ISLE to use in customizing the Islandora install and re-copies the data into this structure from the place-holder directory. Since this is merely a test, she's going to skip the process of setting up an institutional Git Repository for her customization files and move on to the merge section of the guide.  Working through the [migration_merge_checklist], Laverne ensures that the directories and files listed have been copied into the ISLE directory structure created above. As specified in the checklist, some of these files are slightly different in her current production Islandora. For example, the  and that they have been compared to (and in some cases merged by hand) with the stock up-to-date versions of these files that come with ISLE. This turns out to be the most complex part of the entire migration process and Laverne reaches out to the [ISLE_Group_List] for assistance with a couple of the configuration files that had been edited in the past by the colleague who set up the original Islandora system.  Finally, she makes the necessary edits to the docker-compose.yml file to add the necessary connection specific information. This is where she will insert the new Url and IP addresses along with a number of other site-specific customizations [migration_docker_compose_checklist].  Now she can enter the commands from the [Migration_Guide] to download the container images from Dockerhub and start them according to the instructions. After the Fedora container is up and running, Laverne follows the steps to test that all is well and sees a running Tomcat server w/ a list of running applications including fedora and Fedoragsearch. After starting the remaining containers, Laverne runs the Apache install script. If all goes well the next step will be to point a browser at the new Url and see a working Islandora site!",
            "title": "Migrating an Islandora site to ISLE: sample user story..."
        },
        {
            "location": "/04_installation_migration/migration_installation_guide/",
            "text": "This Migration guide will help you migrate your existing production Islandora environment to utilize an ISLE environment for easily maintaining Islandora. This guide will walk you through how to identify and copy your institution's Islandora data and files (including your data volume, Drupal site or sites, and commonly customized xml and xslt files) to your ISLE framework.\n\n\nPlease note:\n There is a \nGlossary\n with relevant terms to help guide installation.\n\n\nIndex of related documents\n\n\n\n\nMigration Example User Story\n\n\nMigration Export Checklist\n\n\nMigration Merge Checklist\n\n\nMigration Reindex Process\n\n\n\n\n\n\nAssumptions / Prerequisites\n\n\n\n\n\n\nComfortability with ISLE. Recommend first setting up the ISLE Test Site (\nisle.localdomain\n) via the \nInstall Start Here\n guide. If you have already done this, please proceed.\n\n\n\n\n\n\nHost Server that conforms to the specifications outlined in the \nHost Server Specifications\n\n\n\n\n\n\nThis Migration guide is designed for a Host server that has already followed the appropriate setup and configuration instructions in the \nMigrate to ISLE\n section of the \nInstall Start Here\n guide.\n\n\n\n\n\n\nInstructions below also assume a MacOS or Linux laptop or workstation to be used in conjunction with the ISLE Host Server for deploying configs, code, files etc. Windows users may have to adjust / swap out various tools as needed.\n\n\n\n\n\n\nThese directions also depend on the type of local computer used to connect via browser to Islandora.\n\n\n\n\n\n\nHave an existing domain name that works - is set up with DNS etc...\n\n\n\n\n\n\nHave \nSSL Certificates\n previously created for the web domain. (\nPlease work with the appropriate internal IT resource to provision these files for your domain\n)\n\n\n\n\n\n\nISLE project has been cloned to BOTH your local laptop/workstation AND the ISLE host server\n\n\n\n\n\n\nDisk space on or mounted to the Host Server large enough to store a \ncopy\n of your fedora data store\n\n\n\n\n\n\nAccess to that server from your local workstation via SSH (\nislandora\n user with sudo privileges)\n\n\n\n\n\n\nAccess to the current Islandora production server\n\n\n\n\n\n\nUsernames/Passwords for key parts of your stack which are used \nfor\n the migration.\n\n\n\n\nDrupal SQL information: username, password, database name can be obtained from your original \nwww/sites/default/settings.php\n\n\nFedora SQL information: username, password, database name can be obtained from your original \nfedora/server/config/fedora.fcfcg\n\n\nFedora users: please have a copy of your \nfedora-users.xml\n\n\nTomcat users: please have a copy of your \ntomcat-users.xml\n but plan on generating new values for these logins for both the fedora and solr containers.\n\n\n\n\n\n\n\n\nSQL dump (export) of the current production site's Drupal database. Ensure that the contents of any \ncache\n table are not exported.\n\n\n\n\n\n\nFinally also please note:\n Instructions from this guide  and it's associated checklists may call for you to \nCOPY\n data from your running Islandora environment to a newly created folder: \ncurrent_prod_islandora_config\n located on your ISLE Host Server or local workstation called \nLocal ISLE config laptop\n. You will then work from this copy for future steps. In some cases, you'll need to copy configurations down to your laptop / workstation (\nLocal ISLE config laptop\n) and merge contents as directed. (\nif necessary\n) In other cases, due to the size of the data e.g. Fedora data you may only be able to copy production data to the target ISLE Host server (\nRemote ISLE Host server\n) instead of your local laptop. Please attempt to balance as necessary when putting together the \ndocker-compose.yml\n and config directory. Most instructions will attempt to direct you to copy to a local workstation. ultimately you will be putting this config in a git repository to deploy to the remote ISLE host server for everything to work with both your copied data and merged production settings.\n\n\nRecommend:\n Having adequate storage space available for the ISLE host server to accommodate a working copy of a production Islandora's associated configurations and data.\n\n\n\n\nOverview\n\n\nTL;DR\n Copy old stuff over to host server and local laptop w/ checklist, create new private repo for configs, merge old configs into new configs w/ checklist, edit docker-compose.yml to point to new configs, spin up containers, go into fedora container & reindex, qc site - Done.\n\n\n\n\n\n\nCreate a new directory on your remote ISLE Host server for the /data folders and files\n\n\n\n\n\n\nCOPY\n the drupal/islandora site and configuration files from the running production Islandora\n\n\n\n\n(following the \nMigration Export Checklist\n).\n\n\n\n\n\n\n\n\nCreate a new directory on your local laptop for the /config folders and files, copy the ISLE repository /config into it, and make this into a private repository.\n\n\n\n\n\n\nEdit the /config files so they have the proper site-specific information\n\n\n\n\n(following the \nMigration Merge Checklist\n\n\n\n\n\n\n\n\nNOTE\n Some of this will involve fairly complicated merging of files to account for custom edits that may have been made to your production Islandora site and/or to bring configuration files up to work with newer software versions. This is by far the trickiest part of the migration and definitely a good place to seek help from the community if you get stuck.\n\n\n\n\n\n\nEdit the docker-compose.yml file to point to all these fine new config files.\n\n\n\n\nDownload ISLE images from Dockerhub and spin up the ISLE Containers (takes a while depending on network speeds)\n\n\nGo into the fedora container and do a re-indexing (takes a little while)\n\n\n(following the \nMigration Reindex Process\n).\n\n\n\n\n\n\nGo to the new site and QC!\n\n\n\n\n\n\nDetailed Steps\n\n\n\n\n\n\nSetup a Private Code Repository\n\n\n\n\nMost of the work in this guide involves careful editing of the various configuration and settings files that customize the pieces of Islandora (database, repository, web-server, etc...).\n\n\nDoing this work in a code repository makes it easier to correct errors and to repeat the process for additional servers without needing to replicate all the work.\n\n\nSince the edits will include things like passwords, it's important to make this a private repository.\n\n\n\n\n\n\n\n\nCustomizing for your Environment\n\n\n\n\nMany of the steps below describe adding the domain name or other specific bits of information into files or appending those bits to file names.\n\n\nIn these cases this guide will call out the customization point AND provide an example - it's important not to literally copy paste the example!\n\n\nYour best guide for these customizations are the source files from your currently running Islandora environment.\n\n\n\n\n\n\n\n\nCreate Private Code Repository\n\n\nON your local laptop/workstation:\n\n\n\n\n\n\nOn the repository of your choice (GitHub, GitLab, Bitbucket, etc.) create a PRIVATE remote git repo - see the specific code repository documentation online for setup instructions.\n\n\n\n\n\n\nOpen a terminal - navigate to \n/opt/ISLE\n or where you cloned the ISLE directory on your local workstation.\n\n\n\n\n\n\nCreate a directory named \nyourdomain-config\n (where \"yourdomain\" is your server domain name)\n\n\n\n\nExample:  \ndigital-collections.yourdomain.com-config\n\n\n\n\n\n\n\n\nWithin the ISLE directory, locate the directory called \nconfig/isle-newsite-sample\n and copy all the contents to the newly created directory\n\n\n\n\n\n\ncd\n into the newly copied and renamed \nyourdomain-config\n directory and type:\n\n\n\n\ngit init\n\n\nInitiates this directory as a code repository.\n\n\n\n\n\n\n\n\nType: \ngit remote add NameOfYourRepository URLofYourRepository\n\n\n\n\nConnects your local repository to the remote you set up in the above steps.\n\n\nNOTE:\n replace \"NameOfYourRepository\" and \"URLofYourRepository\" with the name of your repository and its URL\n\n\n\n\n\n\n\n\nYou are now ready to perform the customization edits in this directory (you can use a text editor of choice now don't have to stay in terminal - just locate the folder in the finder and open file in text editor)\n\n\n\n\n\n\nCreate Data Storage Directory\n\n\nThis area will be where all current Islandora production data is to be stored. This includes the Apache \n/var/www/html\n directory and the appropriate Fedora \n/usr/local/fedora/data\n subdirectories outlined below.\n\n\nON your remote ISLE Host server:\n\n\n\n\n\n\nCreate a directory named \nyourdomain-data\n (where \"yourdomain\" is your server domain name)\n\n\n\n\nExample:  \ndigital-collections.yourdomain.com-data\n\n\n\n\n\n\n\n\nEnsure that the islandora user has ownership and permissions to access this data.\n\n\n\n\n\n\nchown -Rv islandora:islandora ~/digital-collections.yourdomain.com-data\n\n\n\n\n\n\nPlease note this path may change depending on how your ISLE host server storage area is setup.\n\n\n\n\n\n\n\n\n\n\n\n\nMigration Export Checklist\n\n\n\n\n\n\nIn the \n/opt/ISLE/config\n directory create a new sub-directory (you can call this \ncurrent_prod_islandora_config\n)\n\n\n\n\n\n\nCopy the files from your current running institutional Islandora Production server(s) into this directory following the \nMigration Export Checklist\n of materials on either the local workstation or remote server (in case the data involved is too large for your local workstation) as directed.\n\n\n\n\nNoting\n that most likely the Apache data (\n/var/www/html\n) & Fedora data (\n/usr/local/fedora/data\n) will stay on your designated remote ISLE host server storage area not your local laptop used for creating the ISLE config.\n\n\n\n\n\n\n\n\nThese copied files will be the source for edits and merges - just to be very clear, please \ndon't work directly on these files in your currently running production Islandora system!\n\n\n\n\n\n\nTo be even more clear, after following the checklist, you should now have two nearly identical \n/config\n subdirectories\n\n\n\n\nA.\n copied from the cloned ISLE repository and renamed with your domain e.g. \nyourdomain-config or digital-collections.yourdomain.com-config\n\n\nB.\n copied from your currently running Islandora environment. e.g. \ncurrent_prod_islandora_config\n\n\n\n\n\n\n\n\nMigration Merge Checklist\n\n\nThe \ngoal\n is to merge all site-specific data (domain names, variables, usernames, passwords, etc..) AND all site-specific customizations or settings from the files in directory B. into the matching files in directory A.\n\n\n\n\n\n\nCompare the data and settings of the files found within directory \nB.\n \ncurrent_prod_islandora_config\n, and then merge, edit or copy as necessary with the templated settings found within the renamed directory \nA.\n \nyourdomain-config\n as guided in the \nMigration Merge Checklist\n.\n\n\n\n\n\n\nCustomizations: (\noptional\n) Carefully compare the following most frequently customized files with the new, default versions found within your new ISLE config folder. Use a \"Diff\" tool (example: \nBeyond Compare\n to merge any desired customizations from your production Islandora files to persist within the new ISLE config folder of files:\n\n\n\n\n\n\nCompare and merge the Solr files: \nschema.xml\n\n\n\n\nCompare and merge the Solr files: \nsolrconfig.xml\n\n\nCompare and merge the Solr files: \nstopwords\n\n\nCompare and merge the Fedora GSearch Islandora Transform (XSLTs) folder of files: \nislandora_transforms\n\n\n\n\nDocker compose file:\n\n\n\n\n\n\nEdit the file: \ndocker-compose.yml\n accordingly:\n\n\n\n\nChange container names (you could do this based on the environment (e.g. prod)\n\n\n\n\n\n\n\n\nFor example if you are building a prod server instance:\n\n\ncontainer_name: isle-solr-newsite\n\n\nchanges to:\n\n\ncontainer_name: isle-solr-prod\n\n\nand so on...\n\n\n\n\n\n\nPlease note:\n Much of the file is already with comments guiding the enduser to key areas or files to edit or modify accordingly.\n\n\n\n\nFinal steps\n\n\n\n\n\n\nNow that all the changes are made (be sure to save), ISLE should be ready to test. First you'll need to push these changes to your private code repository.\n\n\n\n\n\n\nOpen a terminal - \ncd\n to the config directory you've been making the changes in...\n\n\n\n\n\n\ngit status\n  this will show you all the files that have been modified and ready to be added to your private repo along with handy paths for the next steps.\n\n\n\n\n\n\ngit add /pathtoyourmodifiedfile\n (replace \"pathtoyourmodifiedfile\" with the path to your config directory)\n\n\n\n\n\n\nrun these:\n\n\n\n\n\n\ngit add apache\n\n\ngit add fedora\n\n\ngit add mysql\n\n\ngit add proxy\n\n\ngit add solr\n\n\ngit add docker-compose.yml\n\n\n\n\n\n\nrun \ngit status\n again - everything should be in green now as all modified files have been added - if anything's still red use git add and the path to add it\n\n\n\n\n\n\nthen run \ngit commit -m \"initial config commit\"\n inside the double quotes is the commit message you can say whatever you want in this message - so for example if this is the config for your dev instance you could say that...\n\n\n\n\n\n\nrun \ngit push origin master\n this will push all your changes to the repo further changes should be made on branches for different servers or to master branch for this same server\n\n\n\n\n\n\n\n\n\n\n\n\nClone Custom Configuration to Host Server\n\n\n\n\n\n\nOpen a terminal - ssh into your host server using the \nislandora\n user\n\n\n\n\n\n\ncd\n to \n/opt/ISLE/config/\n\n\n\n\n\n\nbecause your customizations are in a \nprivate\n repository, you'll need to add this islandora user's \nid_rsa.pub\n key to the repository via the website.\n\n\n\n\n\n\nThis key is found in \n/home/islandora/.ssh/id_rsa.pub\n\n\n\n\n\n\nOne can simply run \ncat /home/islandora/.ssh/id_rsa.pub\n and copy the output (ensure no whitespaces or extra returns)\n\n\n\n\n\n\nGo to the repository web site with a browser and locate your private repository.\n\n\n\n\nlocate the ssh key entry location (in Bitbucket this is in Settings / Access Keys /\n\n\nadd\n an ssh key w/ the label \nislandora host server\n paste in the key text and click \nAdd Key\n\n\n\n\n\n\n\n\nBack at your terminal command line, run \ngit clone URLpathtoyourremoteprivaterepo.git .\n (replacing \"URLpathtoyourremoteprivaterepo\" with the URL to the repository provided by the website)\n\n\n\n\n\n\ncd\n into the newly cloned directory - this is a good time to check that the ISLE directory contains your \nyourdomain-config\n directory and that it reflects all the edits and customizations.\n\n\n\n\n\n\nSpin up ISLE containers!\n\n\nReview or pull down ISLE Docker images\n\n\nPlease Note: You may have already done this in setting up the host server manually and / or with Ansible. However it is always a good idea to review and check using the first command below.\n\n\n\n\nCheck if all ISLE images have been downloaded\n\n\n\n\ndocker image ls\n\n\n\n\n\n\nIf yes, then proceed to Step 7\n\n\n\n\n\n\nIf no, the perform the following:\n\n\n\n\ndocker pull islandoracollabgroup/isle-mysql:latest\n\n\ndocker pull islandoracollabgroup/isle-fedora:latest\n\n\ndocker pull islandoracollabgroup/isle-solr:latest\n\n\ndocker pull islandoracollabgroup/isle-apache:latest\n\n\ndocker pull islandoracollabgroup/isle-proxy:latest\n\n\n\n\n\n\n\n\n\n\nSpin up the proxy container\n\n\n\n\ncd /opt/ISLE/yourdomain-config\n\n\ndocker-compose up -d proxy\n\n\n\n\nSpin up the mysql container and import production database(s)\n\n\n\n\ncd /opt/ISLE/yourdomain-config\n\n\ndocker-compose up -d mysql\n\n\n\n\nTwo methods for connecting to the MySQL Database (GUI / CLI) pick one.\n\n\n\n\n\n\nOne may use SQL GUI clients e.g. Sequel Pro, Navicat, PHPMyAdmin etc. and import the production Drupal website database(s)\n\n\n\n\n\n\nIf the above not practical, one may connect to the MySQL container and run the following.\n\n\n\n\ndocker exec -it isle-mysql-institution bash\n to connect to the container\n\n\nswap out \ninstitution\n for the correct container name.\n\n\n\n\n\n\nappropriate mysql commands here: consult MySQL documentation - https://dev.mysql.com/doc/refman/5.7/en/\n\n\n\n\n\n\n\n\n2a. (\noptional\n) Only follow this if you have \nnot\n first run \ndrush cc all\n and then exported the MySQL databases or if you have \nnot\n exported the MySQL databases excluding the contents of any table with \ncache\n in the name.\n\n\nThe following are STEPS, not literal commands to prepare your db for ISLE (\ndoing this because we've found there are errors using exported db from production because of caches - causes problems - steps below help you remove this problem\n)\n\n\n\n\nimport the production databases into the isle-mysql-institution container (\nwith errors being ignored\n)\n\n\ntruncate all tables that start with \ncache\n on the isle-mysql-institution container\n\n\nexport this new database to the \nmysql\n directory on the isle host server\n\n\ndelete all tables (\nnot the database itself\n) on the isle-mysql-institution container\n\n\nReimport the new lighter database to the isle-mysql container\n\n\n\n\n\n\nSpin up the fedora container and start the reindex processes\n\n\nStaying within \n/opt/ISLE/yourdomain-config\n\n\n \ndocker-compose up -d fedora\n\n    * \noptional\n check if fedora is running properly e.g. \nhttp://isle-prod-project.institution:8080/manager/html\n\n\n \ndocker exec -it isle-fedora-institution bash\n\n\n\n\nFollow the steps outlined in the \nMigration Reindex Process Guide\n\n\nFollow the steps outlined in the Reindex Fedora RI (1 of 3) section\n\n\nFollow the steps outlined in the Reindex SQL database (2 of 3) section\n\n\nPause here before attempting the steps within the Reindex Solr (3 of 3) section.\n\n\nMove onto the next section in this guide, \nSpin up apache container\n.\n\n\n\n\n\n\n\n\n\n\nSpin up apache container\n\n\n\n\n\n\nStaying within \n/opt/ISLE/yourdomain-config\n\n\n\n\n\n\ndocker-compose up -d apache\n\n\n\n\n\n\ndocker exec -it isle-apache-institution bash\n\n\n\n\n\n\nRun the vset script\n\n\n\n\ncd /var/www/html\n\n\n./vsets.sh\n  \n\n\n\n\n\n\n\n\nCheck if the site is now is running properly by opening a web browser and navigating to your new ISLE domain e.g. \nhttps://isle-prod-project.institution\n\n\n\n\n\n\nPlease note while you may be able to see objects being displayed, metadata and search results will be empty until you run the last step in the Reindex process.\n\n\n\n\n\n\n\n\nSpin up solr container and complete the reindex processes\n\n\n\n\nStaying within \n/opt/ISLE/yourdomain-config\n\n\ndocker-compose up -d solr\n\n\n\n\n(\noptional\n) check if solr is running properly e.g. \nhttp://isle-prod-project.institution:8777/manager/html\n\n\n\n\n\n\ndocker exec -it isle-fedora-institution bash\n \nNOTE FEDORA NOT SOLR!\n\n\n\n\n\n\nFollow the steps outlined in the \nMigration Reindex Process Guide\n\n\n\n\nFollow the steps outlined only in the Reindex Solr (3 of 3) section.\n\n\n(\nEnsure that Tomcat and Fedora are running.\n)\n\n\n\n\n\n\n\n\nCheck the results on the site using Islandora simple search or the appropriate search method.\n\n\n\n\n\n\nCongratulations you should have successfully migrated your production Islandora site to ISLE!!",
            "title": "Migration Guide"
        },
        {
            "location": "/04_installation_migration/migration_installation_guide/#index-of-related-documents",
            "text": "Migration Example User Story  Migration Export Checklist  Migration Merge Checklist  Migration Reindex Process",
            "title": "Index of related documents"
        },
        {
            "location": "/04_installation_migration/migration_installation_guide/#assumptions-prerequisites",
            "text": "Comfortability with ISLE. Recommend first setting up the ISLE Test Site ( isle.localdomain ) via the  Install Start Here  guide. If you have already done this, please proceed.    Host Server that conforms to the specifications outlined in the  Host Server Specifications    This Migration guide is designed for a Host server that has already followed the appropriate setup and configuration instructions in the  Migrate to ISLE  section of the  Install Start Here  guide.    Instructions below also assume a MacOS or Linux laptop or workstation to be used in conjunction with the ISLE Host Server for deploying configs, code, files etc. Windows users may have to adjust / swap out various tools as needed.    These directions also depend on the type of local computer used to connect via browser to Islandora.    Have an existing domain name that works - is set up with DNS etc...    Have  SSL Certificates  previously created for the web domain. ( Please work with the appropriate internal IT resource to provision these files for your domain )    ISLE project has been cloned to BOTH your local laptop/workstation AND the ISLE host server    Disk space on or mounted to the Host Server large enough to store a  copy  of your fedora data store    Access to that server from your local workstation via SSH ( islandora  user with sudo privileges)    Access to the current Islandora production server    Usernames/Passwords for key parts of your stack which are used  for  the migration.   Drupal SQL information: username, password, database name can be obtained from your original  www/sites/default/settings.php  Fedora SQL information: username, password, database name can be obtained from your original  fedora/server/config/fedora.fcfcg  Fedora users: please have a copy of your  fedora-users.xml  Tomcat users: please have a copy of your  tomcat-users.xml  but plan on generating new values for these logins for both the fedora and solr containers.     SQL dump (export) of the current production site's Drupal database. Ensure that the contents of any  cache  table are not exported.    Finally also please note:  Instructions from this guide  and it's associated checklists may call for you to  COPY  data from your running Islandora environment to a newly created folder:  current_prod_islandora_config  located on your ISLE Host Server or local workstation called  Local ISLE config laptop . You will then work from this copy for future steps. In some cases, you'll need to copy configurations down to your laptop / workstation ( Local ISLE config laptop ) and merge contents as directed. ( if necessary ) In other cases, due to the size of the data e.g. Fedora data you may only be able to copy production data to the target ISLE Host server ( Remote ISLE Host server ) instead of your local laptop. Please attempt to balance as necessary when putting together the  docker-compose.yml  and config directory. Most instructions will attempt to direct you to copy to a local workstation. ultimately you will be putting this config in a git repository to deploy to the remote ISLE host server for everything to work with both your copied data and merged production settings.  Recommend:  Having adequate storage space available for the ISLE host server to accommodate a working copy of a production Islandora's associated configurations and data.",
            "title": "Assumptions / Prerequisites"
        },
        {
            "location": "/04_installation_migration/migration_installation_guide/#overview",
            "text": "TL;DR  Copy old stuff over to host server and local laptop w/ checklist, create new private repo for configs, merge old configs into new configs w/ checklist, edit docker-compose.yml to point to new configs, spin up containers, go into fedora container & reindex, qc site - Done.    Create a new directory on your remote ISLE Host server for the /data folders and files    COPY  the drupal/islandora site and configuration files from the running production Islandora   (following the  Migration Export Checklist ).     Create a new directory on your local laptop for the /config folders and files, copy the ISLE repository /config into it, and make this into a private repository.    Edit the /config files so they have the proper site-specific information   (following the  Migration Merge Checklist     NOTE  Some of this will involve fairly complicated merging of files to account for custom edits that may have been made to your production Islandora site and/or to bring configuration files up to work with newer software versions. This is by far the trickiest part of the migration and definitely a good place to seek help from the community if you get stuck.    Edit the docker-compose.yml file to point to all these fine new config files.   Download ISLE images from Dockerhub and spin up the ISLE Containers (takes a while depending on network speeds)  Go into the fedora container and do a re-indexing (takes a little while)  (following the  Migration Reindex Process ).    Go to the new site and QC!",
            "title": "Overview"
        },
        {
            "location": "/04_installation_migration/migration_installation_guide/#detailed-steps",
            "text": "Setup a Private Code Repository   Most of the work in this guide involves careful editing of the various configuration and settings files that customize the pieces of Islandora (database, repository, web-server, etc...).  Doing this work in a code repository makes it easier to correct errors and to repeat the process for additional servers without needing to replicate all the work.  Since the edits will include things like passwords, it's important to make this a private repository.     Customizing for your Environment   Many of the steps below describe adding the domain name or other specific bits of information into files or appending those bits to file names.  In these cases this guide will call out the customization point AND provide an example - it's important not to literally copy paste the example!  Your best guide for these customizations are the source files from your currently running Islandora environment.",
            "title": "Detailed Steps"
        },
        {
            "location": "/04_installation_migration/migration_installation_guide/#create-private-code-repository",
            "text": "ON your local laptop/workstation:    On the repository of your choice (GitHub, GitLab, Bitbucket, etc.) create a PRIVATE remote git repo - see the specific code repository documentation online for setup instructions.    Open a terminal - navigate to  /opt/ISLE  or where you cloned the ISLE directory on your local workstation.    Create a directory named  yourdomain-config  (where \"yourdomain\" is your server domain name)   Example:   digital-collections.yourdomain.com-config     Within the ISLE directory, locate the directory called  config/isle-newsite-sample  and copy all the contents to the newly created directory    cd  into the newly copied and renamed  yourdomain-config  directory and type:   git init  Initiates this directory as a code repository.     Type:  git remote add NameOfYourRepository URLofYourRepository   Connects your local repository to the remote you set up in the above steps.  NOTE:  replace \"NameOfYourRepository\" and \"URLofYourRepository\" with the name of your repository and its URL     You are now ready to perform the customization edits in this directory (you can use a text editor of choice now don't have to stay in terminal - just locate the folder in the finder and open file in text editor)",
            "title": "Create Private Code Repository"
        },
        {
            "location": "/04_installation_migration/migration_installation_guide/#create-data-storage-directory",
            "text": "This area will be where all current Islandora production data is to be stored. This includes the Apache  /var/www/html  directory and the appropriate Fedora  /usr/local/fedora/data  subdirectories outlined below.  ON your remote ISLE Host server:    Create a directory named  yourdomain-data  (where \"yourdomain\" is your server domain name)   Example:   digital-collections.yourdomain.com-data     Ensure that the islandora user has ownership and permissions to access this data.    chown -Rv islandora:islandora ~/digital-collections.yourdomain.com-data    Please note this path may change depending on how your ISLE host server storage area is setup.",
            "title": "Create Data Storage Directory"
        },
        {
            "location": "/04_installation_migration/migration_installation_guide/#migration-export-checklist",
            "text": "In the  /opt/ISLE/config  directory create a new sub-directory (you can call this  current_prod_islandora_config )    Copy the files from your current running institutional Islandora Production server(s) into this directory following the  Migration Export Checklist  of materials on either the local workstation or remote server (in case the data involved is too large for your local workstation) as directed.   Noting  that most likely the Apache data ( /var/www/html ) & Fedora data ( /usr/local/fedora/data ) will stay on your designated remote ISLE host server storage area not your local laptop used for creating the ISLE config.     These copied files will be the source for edits and merges - just to be very clear, please  don't work directly on these files in your currently running production Islandora system!    To be even more clear, after following the checklist, you should now have two nearly identical  /config  subdirectories   A.  copied from the cloned ISLE repository and renamed with your domain e.g.  yourdomain-config or digital-collections.yourdomain.com-config  B.  copied from your currently running Islandora environment. e.g.  current_prod_islandora_config",
            "title": "Migration Export Checklist"
        },
        {
            "location": "/04_installation_migration/migration_installation_guide/#migration-merge-checklist",
            "text": "The  goal  is to merge all site-specific data (domain names, variables, usernames, passwords, etc..) AND all site-specific customizations or settings from the files in directory B. into the matching files in directory A.    Compare the data and settings of the files found within directory  B.   current_prod_islandora_config , and then merge, edit or copy as necessary with the templated settings found within the renamed directory  A.   yourdomain-config  as guided in the  Migration Merge Checklist .    Customizations: ( optional ) Carefully compare the following most frequently customized files with the new, default versions found within your new ISLE config folder. Use a \"Diff\" tool (example:  Beyond Compare  to merge any desired customizations from your production Islandora files to persist within the new ISLE config folder of files:    Compare and merge the Solr files:  schema.xml   Compare and merge the Solr files:  solrconfig.xml  Compare and merge the Solr files:  stopwords  Compare and merge the Fedora GSearch Islandora Transform (XSLTs) folder of files:  islandora_transforms",
            "title": "Migration Merge Checklist"
        },
        {
            "location": "/04_installation_migration/migration_installation_guide/#docker-compose-file",
            "text": "Edit the file:  docker-compose.yml  accordingly:   Change container names (you could do this based on the environment (e.g. prod)     For example if you are building a prod server instance:  container_name: isle-solr-newsite  changes to:  container_name: isle-solr-prod  and so on...    Please note:  Much of the file is already with comments guiding the enduser to key areas or files to edit or modify accordingly.",
            "title": "Docker compose file:"
        },
        {
            "location": "/04_installation_migration/migration_installation_guide/#final-steps",
            "text": "Now that all the changes are made (be sure to save), ISLE should be ready to test. First you'll need to push these changes to your private code repository.    Open a terminal -  cd  to the config directory you've been making the changes in...    git status   this will show you all the files that have been modified and ready to be added to your private repo along with handy paths for the next steps.    git add /pathtoyourmodifiedfile  (replace \"pathtoyourmodifiedfile\" with the path to your config directory)    run these:    git add apache  git add fedora  git add mysql  git add proxy  git add solr  git add docker-compose.yml    run  git status  again - everything should be in green now as all modified files have been added - if anything's still red use git add and the path to add it    then run  git commit -m \"initial config commit\"  inside the double quotes is the commit message you can say whatever you want in this message - so for example if this is the config for your dev instance you could say that...    run  git push origin master  this will push all your changes to the repo further changes should be made on branches for different servers or to master branch for this same server",
            "title": "Final steps"
        },
        {
            "location": "/04_installation_migration/migration_installation_guide/#clone-custom-configuration-to-host-server",
            "text": "Open a terminal - ssh into your host server using the  islandora  user    cd  to  /opt/ISLE/config/    because your customizations are in a  private  repository, you'll need to add this islandora user's  id_rsa.pub  key to the repository via the website.    This key is found in  /home/islandora/.ssh/id_rsa.pub    One can simply run  cat /home/islandora/.ssh/id_rsa.pub  and copy the output (ensure no whitespaces or extra returns)    Go to the repository web site with a browser and locate your private repository.   locate the ssh key entry location (in Bitbucket this is in Settings / Access Keys /  add  an ssh key w/ the label  islandora host server  paste in the key text and click  Add Key     Back at your terminal command line, run  git clone URLpathtoyourremoteprivaterepo.git .  (replacing \"URLpathtoyourremoteprivaterepo\" with the URL to the repository provided by the website)    cd  into the newly cloned directory - this is a good time to check that the ISLE directory contains your  yourdomain-config  directory and that it reflects all the edits and customizations.",
            "title": "Clone Custom Configuration to Host Server"
        },
        {
            "location": "/04_installation_migration/migration_installation_guide/#spin-up-isle-containers",
            "text": "",
            "title": "Spin up ISLE containers!"
        },
        {
            "location": "/04_installation_migration/migration_installation_guide/#review-or-pull-down-isle-docker-images",
            "text": "Please Note: You may have already done this in setting up the host server manually and / or with Ansible. However it is always a good idea to review and check using the first command below.   Check if all ISLE images have been downloaded   docker image ls    If yes, then proceed to Step 7    If no, the perform the following:   docker pull islandoracollabgroup/isle-mysql:latest  docker pull islandoracollabgroup/isle-fedora:latest  docker pull islandoracollabgroup/isle-solr:latest  docker pull islandoracollabgroup/isle-apache:latest  docker pull islandoracollabgroup/isle-proxy:latest",
            "title": "Review or pull down ISLE Docker images"
        },
        {
            "location": "/04_installation_migration/migration_installation_guide/#spin-up-the-proxy-container",
            "text": "cd /opt/ISLE/yourdomain-config  docker-compose up -d proxy",
            "title": "Spin up the proxy container"
        },
        {
            "location": "/04_installation_migration/migration_installation_guide/#spin-up-the-mysql-container-and-import-production-databases",
            "text": "cd /opt/ISLE/yourdomain-config  docker-compose up -d mysql   Two methods for connecting to the MySQL Database (GUI / CLI) pick one.    One may use SQL GUI clients e.g. Sequel Pro, Navicat, PHPMyAdmin etc. and import the production Drupal website database(s)    If the above not practical, one may connect to the MySQL container and run the following.   docker exec -it isle-mysql-institution bash  to connect to the container  swap out  institution  for the correct container name.    appropriate mysql commands here: consult MySQL documentation - https://dev.mysql.com/doc/refman/5.7/en/     2a. ( optional ) Only follow this if you have  not  first run  drush cc all  and then exported the MySQL databases or if you have  not  exported the MySQL databases excluding the contents of any table with  cache  in the name.  The following are STEPS, not literal commands to prepare your db for ISLE ( doing this because we've found there are errors using exported db from production because of caches - causes problems - steps below help you remove this problem )   import the production databases into the isle-mysql-institution container ( with errors being ignored )  truncate all tables that start with  cache  on the isle-mysql-institution container  export this new database to the  mysql  directory on the isle host server  delete all tables ( not the database itself ) on the isle-mysql-institution container  Reimport the new lighter database to the isle-mysql container",
            "title": "Spin up the mysql container and import production database(s)"
        },
        {
            "location": "/04_installation_migration/migration_installation_guide/#spin-up-the-fedora-container-and-start-the-reindex-processes",
            "text": "Staying within  /opt/ISLE/yourdomain-config    docker-compose up -d fedora \n    *  optional  check if fedora is running properly e.g.  http://isle-prod-project.institution:8080/manager/html    docker exec -it isle-fedora-institution bash   Follow the steps outlined in the  Migration Reindex Process Guide  Follow the steps outlined in the Reindex Fedora RI (1 of 3) section  Follow the steps outlined in the Reindex SQL database (2 of 3) section  Pause here before attempting the steps within the Reindex Solr (3 of 3) section.  Move onto the next section in this guide,  Spin up apache container .",
            "title": "Spin up the fedora container and start the reindex processes"
        },
        {
            "location": "/04_installation_migration/migration_installation_guide/#spin-up-apache-container",
            "text": "Staying within  /opt/ISLE/yourdomain-config    docker-compose up -d apache    docker exec -it isle-apache-institution bash    Run the vset script   cd /var/www/html  ./vsets.sh        Check if the site is now is running properly by opening a web browser and navigating to your new ISLE domain e.g.  https://isle-prod-project.institution    Please note while you may be able to see objects being displayed, metadata and search results will be empty until you run the last step in the Reindex process.",
            "title": "Spin up apache container"
        },
        {
            "location": "/04_installation_migration/migration_installation_guide/#spin-up-solr-container-and-complete-the-reindex-processes",
            "text": "Staying within  /opt/ISLE/yourdomain-config  docker-compose up -d solr   ( optional ) check if solr is running properly e.g.  http://isle-prod-project.institution:8777/manager/html    docker exec -it isle-fedora-institution bash   NOTE FEDORA NOT SOLR!    Follow the steps outlined in the  Migration Reindex Process Guide   Follow the steps outlined only in the Reindex Solr (3 of 3) section.  ( Ensure that Tomcat and Fedora are running. )     Check the results on the site using Islandora simple search or the appropriate search method.    Congratulations you should have successfully migrated your production Islandora site to ISLE!!",
            "title": "Spin up solr container and complete the reindex processes"
        },
        {
            "location": "/04_installation_migration/migration_export_checklist/",
            "text": "This section is a checklist of materials to \nCOPY\n from the current running institutional Islandora Production server(s) to the appropriate storage location / directory on the new ISLE directory.\n\n\nPlease Note:\n \nUbuntu / Debian style paths are used for all examples file locations below, endusers might have different locations for these files HOWEVER the file and directory names etc should be roughly the same.\n\n\nCaution\n: While the ISLE Project recommends use of export methods or tools such as rsync, scp etc., it assumes that endusers are familiar with them and are aware of possible dangers of improperly exporting or copying production data. Ensure adequate backups of any production system(s) are made prior to any attempts. If you are not familiar or are uncomfortable with these processes, it is highly advisable to work with an appropriate IT resource.\n\n\nFinally also please note:\n Instructions from this checklist and the \nMigration Installation Guide\n may call for you to \nCOPY\n data from your running Islandora environment to a newly created folder: \ncurrent_prod_islandora_config\n located on your ISLE Host Server or local workstation called \nlocal ISLE config laptop\n. You will then work from this copy for future steps.\n\n\nIn some cases, you'll need to copy configurations down to your laptop / workstation (\nlocal ISLE config laptop\n) and merge contents as directed. (\nif necessary\n) In other cases, due to the size of the data e.g. Fedora data you may only be able to copy production data to the target ISLE Host server (\nRemote ISLE Host server\n) instead of your local laptop.\n\n\n\n\n\n\nContents of the production Islandora Apache \nhtml\n directory should be copied to a new directory called \nyourdomain-data/apache/html/\n on your remote ISLE host server in the appropriate storage area.\n\n\n\n\n\n\nContents of the  production Islandora Fedora \ndata\n directory should be copied to a new directory called \nyourdomain-data/fedora/data/\n on your remote ISLE host server in the appropriate storage area.\n\n\n\n\n\n\nPlease attempt to balance as necessary when putting together the \ndocker-compose.yml\n and config directory. Most instructions will attempt to direct you to copy to a local workstation. ultimately you will be putting this config in a git repository to deploy to the remote ISLE host server for everything to work with both your copied data and merged production settings.\n\n\nRecommend:\n Having adequate storage space available for the ISLE host server to accommodate a working copy of a production Islandora's associated configurations and data.\n\n\n\n\nApache\n\n\n\n\n\n\nCopy the following below from the Islandora Production Server(s) to the suggested directories \n/current_prod_islandora_config/apache/\n or \n/data/apache/\n on the ISLE directories located on both the local ISLE config laptop and remote ISLE Host server as designated.\n\n\n\n\n\n\n/current_prod_islandora_config/apache/\n should be a directory used for configurations to be merged or edited on an enduser's laptop (\nlocal ISLE config laptop\n)\n\n\n\n\n\n\n/data/apache/\nshould be a directory used for apache website code and data  to be copied to a storage area on the target ISLE Host server (\nRemote ISLE Host server\n)  due to size.\n\n\n\n\n\n\n\n\n\n\nThis data and these configurations will be used in conjunction with an Apache container.\n\n\n\n\n\n\n\n\nData\n\n\nDescription\n\n\nPossible Location\n\n\nSuggested ISLE Path Destination\n\n\nCopy location\n\n\n\n\n\n\n\n\n\n\nhtml\n\n\nIslandora/Drupal Website\n\n\n/var/www/\n\n\nyourdomain-data/apache/html/\n\n\nRemote ISLE Host server\n\n\n\n\n\n\nsettings.php\n\n\nDrupal settings.php file\n\n\n/var/www/html/sites/default/\n\n\n/current_prod_islandora_config/apache/\n\n\nLocal ISLE config laptop\n\n\n\n\n\n\nphp.ini\n\n\nPHP configuration file\n\n\n/etc/\n\n\n/current_prod_islandora_config/apache/\n\n\nLocal ISLE config laptop\n\n\n\n\n\n\nyoursite.conf\n\n\nApache webserver vhost file\n\n\n/etc/apache2/sites-enabled/\n\n\n/current_prod_islandora_config/apache/\n\n\nLocal ISLE config laptop\n\n\n\n\n\n\n\n\nApache Notes\n\n\n\n\n\n\n/var/www/\nhtml\n\n\n\n\n\n\nEntire contents unless size prohibits should be copied to a directory on the remote ISLE host server.\n\n\n\n\n\n\nIf \nhtml\n is not used, then substitute with the appropriate directory for the Islandora / Drupal site\n\n\n\n\n\n\n\n\n\n\nsettings.php\n\n\n\n\n\n\nIf running multi-sites separate or rename appropriately e.g. multisite2_name_settings.php, multisite3_name_settings.php and so on...\n\n\n\n\n\n\nWARNING:\n Be sure to move this file from \nyourdomain-data/apache/html/\n only and not from your production Islandora site PRIOR to copying.\n\n\n\n\n\n\n\n\n\n\nyoursite.conf\n\n\n\n\nFile will have different name but this should be the enabled Apache vhost file of your production Islandora website.\n\n\nThere may also be a seperate vhost that uses SSL and https. Copy that too if available.\n\n\n\n\n\n\n\n\n\n\nFedora\n\n\nCopy the following below from the Islandora Production Server(s) to the suggested directory \ncurrent_prod_islandora_config/fedora/\n on the ISLE directories located on both the local ISLE config laptop and remote ISLE Host server as designated.\n\n\nThis data will be used in conjunction with a Fedora container.  \n\n\n\n\n\n\n\n\nFile / Directory\n\n\nDescription\n\n\nPossible Location\n\n\nSuggested ISLE Path Destination\n\n\nCopy location\n\n\n\n\n\n\n\n\n\n\ndatastreamStore\n\n\nEntire Fedora data directory\n\n\n/usr/local/fedora/data/\n\n\nyourdomain-data/fedora/data/datastreamStore\n\n\nRemote ISLE Host server\n\n\n\n\n\n\nfedora-xacml-policies\n\n\nEntire Fedora data directory\n\n\n/usr/local/fedora/data/\n\n\nyourdomain-data/fedora/data/fedora-xacml-policies\n\n\nRemote ISLE Host server\n\n\n\n\n\n\nobjectStore\n\n\nEntire Fedora data directory\n\n\n/usr/local/fedora/data/\n\n\nyourdomain-data/fedora/data/objectStore\n\n\nRemote ISLE Host server\n\n\n\n\n\n\nfedora.fcfg\n\n\nFedora repository config file\n\n\n/usr/local/fedora/server/config/\n\n\n/current_prod_islandora_config/fedora/\n\n\nLocal ISLE config laptop\n\n\n\n\n\n\nfedora-users.xml\n\n\nFedora users config file\n\n\n/usr/local/fedora/server/config/\n\n\n/current_prod_islandora_config/fedora/\n\n\nLocal ISLE config laptop\n\n\n\n\n\n\nfilter-drupal.xml\n\n\nFedora Drupal filter file\n\n\n/usr/local/fedora/server/config/\n\n\n/current_prod_islandora_config/fedora/\n\n\nLocal ISLE config laptop\n\n\n\n\n\n\n\n\nFedora Notes\n\n\n\n\nDo not copy the following directories from the production Islandora fedora \n/usr/local/fedora/data\n directory.\n        * /usr/local/fedora/\ndata/activemq-data\n\n        * /usr/local/fedora/\ndata/resourceIndex\n\n\n\n\n\n\nGsearch\n\n\nCopy the following below from the Islandora Production Server(s) to the suggested directory \ncurrent_prod_islandora_config/gsearch/\n on the ISLE directory located on the local ISLE config laptop.\n\n\nThis data will be used in conjunction with a Fedora container.\n\n\n\n\n\n\n\n\nFile / Directory\n\n\nDescription\n\n\nPossible Location\n\n\nSuggested ISLE Path Destination\n\n\nCopy location\n\n\n\n\n\n\n\n\n\n\nfedoragsearch.properties\n\n\nGsearch config file\n\n\n/var/lib/tomcat/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/\n\n\n/current_prod_islandora_config/gsearch/\n\n\nLocal ISLE config laptop\n\n\n\n\n\n\nfgsconfig-basic-configForIslandora.properties\n\n\nGsearch config file\n\n\n/var/lib/tomcat7/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/\n\n\n/current_prod_islandora_config/gsearch/\n\n\nLocal ISLE config laptop\n\n\n\n\n\n\nfgsconfigObjects.properties\n\n\nGsearch config file\n\n\n/var/lib/tomcat7/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/\n\n\n/current_prod_islandora_config/gsearch/\n\n\nLocal ISLE config laptop\n\n\n\n\n\n\nrepository.properties\n\n\nGsearch config file\n\n\n/var/lib/tomcat7/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/repository/FgsRepos/\n\n\n/current_prod_islandora_config/gsearch/\n\n\nLocal ISLE config laptop\n\n\n\n\n\n\nislandora_transforms\n\n\nTransformation XSLTs directory\n\n\n/var/lib/tomcat7/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/index/FgsIndex/\n\n\n/current_prod_islandora_config/gsearch/\n\n\nLocal ISLE config laptop\n\n\n\n\n\n\nfoxmlToSolr.xslt\n\n\n\"top-level\" transformational XSLT\n\n\n/var/lib/tomcat7/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/index/FgsIndex/\n\n\n/current_prod_islandora_config/gsearch/\n\n\nLocal ISLE config laptop\n\n\n\n\n\n\n\n\n\n\nMySQL\n\n\nCopy the following below from the Islandora Production Server(s) to the suggested directory \ncurrent_prod_islandora_config/mysql/\n on the ISLE directory located on the local ISLE config laptop.\n\n\nThis data will be used in conjunction with a MySQL container.\n\n\n\n\n\n\n\n\nData\n\n\nDescription\n\n\nPossible Location\n\n\nSuggested COPY Method\n\n\nSuggested ISLE Path Destination\n\n\nCopy location\n\n\n\n\n\n\n\n\n\n\nDatabases\n\n\nDrupal website databases\n\n\n/var/lib/mysql\n\n\nCLI, MySQL Workbench or Sequel Pro etc.\n\n\n/current_prod_islandora_config/mysql/\n\n\nLocal ISLE config laptop\n\n\n\n\n\n\nmy.cnf\n\n\nMySQL server config file\n\n\n/etc/mysql/my.cnf\n\n\nrsync / scp\n\n\n/current_prod_islandora_config/mysql/\n\n\nLocal ISLE config laptop\n\n\n\n\n\n\n\n\nMySQL Notes\n\n\n\n\n\n\nDrupal website databases can have a multitude of names and conventions. Confer with the appropriate IT resources for your institution's database naming conventions.\n\n\n\n\n\n\nCLI == Command line\n\n\n\n\n\n\nRecommended that the production databases be exported using the \n.sql\n and \n.gz\n file formats e.g. \ndrupal_site_2018.sql.gz\n for better compression and minimal storage footprint.\n\n\n\n\n\n\nIf the enduser is running multi-sites, there will be additional databases to export.\n\n\n\n\n\n\nDo not export the \nfedora3\n database as it will be recreated by the SQL index in later steps of the Migration Guide\n\n\n\n\n\n\nIf possible, on the production Apache webserver, run \ndrush cc all\n from the command line on the production server in the appropriate sites directory PRIOR to db export(s)\n\n\n\n\nOtherwise issues can occur on import due to all cache tables being larger than \ninnodb_log_file_size\n allows\n\n\n\n\nMySQL Tools for Export\n\n\nHere are a few pieces of documentation specific for the tasks above.\n\n\nCaution\n: While the ISLE Project recommends use of export methods or tools such as mysqldump etc., it assumes that endusers are familiar with them and are aware of possible dangers of improperly exporting or copying production data. Ensure adequate backups of any production system(s) are made prior to any attempts. If you are not familiar or are uncomfortable with these processes, it is highly advisable to work with an appropriate IT resource.\n\n\n\n\nOfficial MySQL documentation\n\n\nmysqldump console utility documentation\n\n\nDigital Ocean quick start for mysqldump export\n\n\n\n\n\n\nOfficial MySQL GUI app - Workbench\n \nFor Linux, MacOS and Windows\n\n\nSequel Pro\n \nMacOS only\n\n\n\n\n\n\nTomcat\n\n\nCopy the following below from the Islandora Production Server(s) to the suggested directory to the ISLE directory \ncurrent_prod_islandora_config/tomcat\n located on the local ISLE config laptop.\n\n\nThis data will be used in conjunction with the Tomcat service found on a Fedora or SOLR container.\n\n\n\n\n\n\n\n\nData\n\n\nDescription\n\n\nPossible Location\n\n\nSuggested ISLE Path Destination\n\n\nCopy location\n\n\n\n\n\n\n\n\n\n\ntomcat-users.xml\n\n\nTomcat server config file\n\n\n/var/lib/tomcat7/conf/tomcat-users.xml\n\n\n/current_prod_islandora_config/tomcat/\n\n\nLocal ISLE config laptop\n\n\n\n\n\n\n\n\n\n\nSolr\n\n\nCopy the following below from the Islandora Production Server(s) to the suggested directory to the ISLE directory \ncurrent_prod_islandora_config/solr\n located on the local ISLE config laptop.\n\n\nThis data will be used in conjunction with a SOLR container.\n\n\n\n\n\n\n\n\nData\n\n\nDescription\n\n\nPossible Location\n\n\nSuggested ISLE Path Destination\n\n\nCopy location\n\n\n\n\n\n\n\n\n\n\nschema.xml\n\n\nSolr schema file\n\n\n/var/lib/tomcat7/webapps/solr/collection1/conf/schema.xml\n\n\n/current_prod_islandora_config/solr\n\n\nLocal ISLE config laptop\n\n\n\n\n\n\nsolrconfig.xml\n\n\nSolr config file\n\n\n/var/lib/tomcat7/webapps/solr/collection1/conf/solrconfig.xml\n\n\n/current_prod_islandora_config/solr\n\n\nLocal ISLE config laptop\n\n\n\n\n\n\nstopwords.txt\n\n\nSolr file for filtering out common words\n\n\n/var/lib/tomcat7/webapps/solr/collection1/conf/stopwords.txt\n\n\n/current_prod_islandora_config/solr\n\n\nLocal ISLE config laptop",
            "title": "Migration Export Checklist"
        },
        {
            "location": "/04_installation_migration/migration_export_checklist/#apache",
            "text": "Copy the following below from the Islandora Production Server(s) to the suggested directories  /current_prod_islandora_config/apache/  or  /data/apache/  on the ISLE directories located on both the local ISLE config laptop and remote ISLE Host server as designated.    /current_prod_islandora_config/apache/  should be a directory used for configurations to be merged or edited on an enduser's laptop ( local ISLE config laptop )    /data/apache/ should be a directory used for apache website code and data  to be copied to a storage area on the target ISLE Host server ( Remote ISLE Host server )  due to size.      This data and these configurations will be used in conjunction with an Apache container.     Data  Description  Possible Location  Suggested ISLE Path Destination  Copy location      html  Islandora/Drupal Website  /var/www/  yourdomain-data/apache/html/  Remote ISLE Host server    settings.php  Drupal settings.php file  /var/www/html/sites/default/  /current_prod_islandora_config/apache/  Local ISLE config laptop    php.ini  PHP configuration file  /etc/  /current_prod_islandora_config/apache/  Local ISLE config laptop    yoursite.conf  Apache webserver vhost file  /etc/apache2/sites-enabled/  /current_prod_islandora_config/apache/  Local ISLE config laptop",
            "title": "Apache"
        },
        {
            "location": "/04_installation_migration/migration_export_checklist/#apache-notes",
            "text": "/var/www/ html    Entire contents unless size prohibits should be copied to a directory on the remote ISLE host server.    If  html  is not used, then substitute with the appropriate directory for the Islandora / Drupal site      settings.php    If running multi-sites separate or rename appropriately e.g. multisite2_name_settings.php, multisite3_name_settings.php and so on...    WARNING:  Be sure to move this file from  yourdomain-data/apache/html/  only and not from your production Islandora site PRIOR to copying.      yoursite.conf   File will have different name but this should be the enabled Apache vhost file of your production Islandora website.  There may also be a seperate vhost that uses SSL and https. Copy that too if available.",
            "title": "Apache Notes"
        },
        {
            "location": "/04_installation_migration/migration_export_checklist/#fedora",
            "text": "Copy the following below from the Islandora Production Server(s) to the suggested directory  current_prod_islandora_config/fedora/  on the ISLE directories located on both the local ISLE config laptop and remote ISLE Host server as designated.  This data will be used in conjunction with a Fedora container.       File / Directory  Description  Possible Location  Suggested ISLE Path Destination  Copy location      datastreamStore  Entire Fedora data directory  /usr/local/fedora/data/  yourdomain-data/fedora/data/datastreamStore  Remote ISLE Host server    fedora-xacml-policies  Entire Fedora data directory  /usr/local/fedora/data/  yourdomain-data/fedora/data/fedora-xacml-policies  Remote ISLE Host server    objectStore  Entire Fedora data directory  /usr/local/fedora/data/  yourdomain-data/fedora/data/objectStore  Remote ISLE Host server    fedora.fcfg  Fedora repository config file  /usr/local/fedora/server/config/  /current_prod_islandora_config/fedora/  Local ISLE config laptop    fedora-users.xml  Fedora users config file  /usr/local/fedora/server/config/  /current_prod_islandora_config/fedora/  Local ISLE config laptop    filter-drupal.xml  Fedora Drupal filter file  /usr/local/fedora/server/config/  /current_prod_islandora_config/fedora/  Local ISLE config laptop",
            "title": "Fedora"
        },
        {
            "location": "/04_installation_migration/migration_export_checklist/#fedora-notes",
            "text": "Do not copy the following directories from the production Islandora fedora  /usr/local/fedora/data  directory.\n        * /usr/local/fedora/ data/activemq-data \n        * /usr/local/fedora/ data/resourceIndex",
            "title": "Fedora Notes"
        },
        {
            "location": "/04_installation_migration/migration_export_checklist/#gsearch",
            "text": "Copy the following below from the Islandora Production Server(s) to the suggested directory  current_prod_islandora_config/gsearch/  on the ISLE directory located on the local ISLE config laptop.  This data will be used in conjunction with a Fedora container.     File / Directory  Description  Possible Location  Suggested ISLE Path Destination  Copy location      fedoragsearch.properties  Gsearch config file  /var/lib/tomcat/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/  /current_prod_islandora_config/gsearch/  Local ISLE config laptop    fgsconfig-basic-configForIslandora.properties  Gsearch config file  /var/lib/tomcat7/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/  /current_prod_islandora_config/gsearch/  Local ISLE config laptop    fgsconfigObjects.properties  Gsearch config file  /var/lib/tomcat7/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/  /current_prod_islandora_config/gsearch/  Local ISLE config laptop    repository.properties  Gsearch config file  /var/lib/tomcat7/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/repository/FgsRepos/  /current_prod_islandora_config/gsearch/  Local ISLE config laptop    islandora_transforms  Transformation XSLTs directory  /var/lib/tomcat7/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/index/FgsIndex/  /current_prod_islandora_config/gsearch/  Local ISLE config laptop    foxmlToSolr.xslt  \"top-level\" transformational XSLT  /var/lib/tomcat7/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/index/FgsIndex/  /current_prod_islandora_config/gsearch/  Local ISLE config laptop",
            "title": "Gsearch"
        },
        {
            "location": "/04_installation_migration/migration_export_checklist/#mysql",
            "text": "Copy the following below from the Islandora Production Server(s) to the suggested directory  current_prod_islandora_config/mysql/  on the ISLE directory located on the local ISLE config laptop.  This data will be used in conjunction with a MySQL container.     Data  Description  Possible Location  Suggested COPY Method  Suggested ISLE Path Destination  Copy location      Databases  Drupal website databases  /var/lib/mysql  CLI, MySQL Workbench or Sequel Pro etc.  /current_prod_islandora_config/mysql/  Local ISLE config laptop    my.cnf  MySQL server config file  /etc/mysql/my.cnf  rsync / scp  /current_prod_islandora_config/mysql/  Local ISLE config laptop",
            "title": "MySQL"
        },
        {
            "location": "/04_installation_migration/migration_export_checklist/#mysql-notes",
            "text": "Drupal website databases can have a multitude of names and conventions. Confer with the appropriate IT resources for your institution's database naming conventions.    CLI == Command line    Recommended that the production databases be exported using the  .sql  and  .gz  file formats e.g.  drupal_site_2018.sql.gz  for better compression and minimal storage footprint.    If the enduser is running multi-sites, there will be additional databases to export.    Do not export the  fedora3  database as it will be recreated by the SQL index in later steps of the Migration Guide    If possible, on the production Apache webserver, run  drush cc all  from the command line on the production server in the appropriate sites directory PRIOR to db export(s)   Otherwise issues can occur on import due to all cache tables being larger than  innodb_log_file_size  allows",
            "title": "MySQL Notes"
        },
        {
            "location": "/04_installation_migration/migration_export_checklist/#mysql-tools-for-export",
            "text": "Here are a few pieces of documentation specific for the tasks above.  Caution : While the ISLE Project recommends use of export methods or tools such as mysqldump etc., it assumes that endusers are familiar with them and are aware of possible dangers of improperly exporting or copying production data. Ensure adequate backups of any production system(s) are made prior to any attempts. If you are not familiar or are uncomfortable with these processes, it is highly advisable to work with an appropriate IT resource.   Official MySQL documentation  mysqldump console utility documentation  Digital Ocean quick start for mysqldump export    Official MySQL GUI app - Workbench   For Linux, MacOS and Windows  Sequel Pro   MacOS only",
            "title": "MySQL Tools for Export"
        },
        {
            "location": "/04_installation_migration/migration_export_checklist/#tomcat",
            "text": "Copy the following below from the Islandora Production Server(s) to the suggested directory to the ISLE directory  current_prod_islandora_config/tomcat  located on the local ISLE config laptop.  This data will be used in conjunction with the Tomcat service found on a Fedora or SOLR container.     Data  Description  Possible Location  Suggested ISLE Path Destination  Copy location      tomcat-users.xml  Tomcat server config file  /var/lib/tomcat7/conf/tomcat-users.xml  /current_prod_islandora_config/tomcat/  Local ISLE config laptop",
            "title": "Tomcat"
        },
        {
            "location": "/04_installation_migration/migration_export_checklist/#solr",
            "text": "Copy the following below from the Islandora Production Server(s) to the suggested directory to the ISLE directory  current_prod_islandora_config/solr  located on the local ISLE config laptop.  This data will be used in conjunction with a SOLR container.     Data  Description  Possible Location  Suggested ISLE Path Destination  Copy location      schema.xml  Solr schema file  /var/lib/tomcat7/webapps/solr/collection1/conf/schema.xml  /current_prod_islandora_config/solr  Local ISLE config laptop    solrconfig.xml  Solr config file  /var/lib/tomcat7/webapps/solr/collection1/conf/solrconfig.xml  /current_prod_islandora_config/solr  Local ISLE config laptop    stopwords.txt  Solr file for filtering out common words  /var/lib/tomcat7/webapps/solr/collection1/conf/stopwords.txt  /current_prod_islandora_config/solr  Local ISLE config laptop",
            "title": "Solr"
        },
        {
            "location": "/04_installation_migration/migration_merge_checklist/",
            "text": "This section is to serve as a new checklist for the editing or merging of the copied Islandora Production server(s) data and config files to the appropriate config directory on the enduser's local laptop and ultimately copied / deployed back to the new ISLE Host Server.\n\n\nThe suggested workflow is for endusers to review the Production file(s) first, make note of any settings and then make appropriate edits within the \nyourdomain-config\n directory to change values, add passwords or usernames etc on your local laptop with the ultimate goal of checking all results into a git repository for deploy later on the ISLE Host server.\n\n\nThe only change is that unless otherwise directed e.g. Apache \nhtml\n and Fedora \ndata\n. all changes should be made on the local laptop in the \nyourdomain-config\n directory.\n\n\nPlease note as per the migration guide instructions the name of this directory shouldn't literally be \"yourdomain-config\" or \"yourdomain-data\" so replace \"yourdomain\" with the name of your intended Islandora site's domain.\n\n\nWhile this checklist will attempt to point out most of the merge challenges or pitfalls, you may encounter unique situations depending on the edits and customizations made to your Islandora environment in the past. This is a good place to reach out to the Islandora community for assistance.\n\n\nPlease note:\n\n\n\n\n\n\nIn some cases, some of the configuration files copied from your running production Islandora may have comments (#) in them to help guide endusers to make the appropriate edits e.g. (# enduser edit here)\n\n\n\n\n\n\nIn most cases, many of the configuration files copied from ISLE repository to \nyourdomain-config\n will have fake or empty settings in them. Please remove, edit or enter new values as advised.\n\n\n\n\n\n\n\n\nApache\n\n\nCompare, edit, merge or copy the following from the source directory \ncurrent-production-config/apache/\n to:\n\n\n\n\nyourdomain-config/apache/\n on your local laptop.\n\n\n\n\n\n\n\n\n\n\nData\n\n\nDescription\n\n\nProduction Data Copy\n\n\nMerge, Copy or Edit Location / Destination\n\n\nCopy location\n\n\n\n\n\n\n\n\n\n\nhtml\n\n\nIslandora/Drupal Website\n\n\ncurrent-production-config/apache/\n\n\nyourdomain-data/apache/\n\n\nRemote ISLE Host server\n\n\n\n\n\n\nsettings.php\n\n\nDrupal settings.php file\n\n\ncurrent-production-config/apache/\n\n\nyourdomain-config/apache/\n\n\nLocal ISLE config laptop\n\n\n\n\n\n\nsite.conf\n\n\nApache webserver vhost file\n\n\ncurrent-production-config/apache/\n\n\nreference file but do not copy\n\n\nLocal ISLE config laptop\n\n\n\n\n\n\n\n\nApache Edits\n\n\n\n\n\n\nhtml\n - endusers will have \ncopied\n this entire directory \ninstead\n to a new directory called \nyourdomain-data/apache/html/\n on your remote ISLE host server in the appropriate storage area.\n\n\n\n\n\n\nsettings.php\n - endusers will want to edit database and user names for Drupal sites to connect properly.\n\n\n\n\n\n\nLines 251 -253: Change the appropriate settings for the Drupal website database, associate database user name and password. Do not change the \nhost\n settings.  \n\n\n\n\n\n\nLine 288: \nRecommend adding a Drupal hash value here of 25+ alpha-numeric characters\n\n\n\n\n\n\nLine 312: \n$base_url\n should be commented out as it isn't used due to the proxy.\n\n\n\n\n\n\n\n\n\n\nApache - sites-enabled\n\n\nPlease note that endusers will take values from the \nsite.conf\n file and flow the information as needed into the to be renamed \nnewsite-sample-ssl.conf\n & \nnewsite-sample.conf\n files accordingly with the domain name of your choice. This file will not be copied to yourdomain-config/apache/ for any usage.\n\n\n\n\n\n\nWithin the \nsites-enabled\n directory, rename the files \nnewsite-sample-ssl.conf\n and \nnewsite-sample.conf\n to your domain names - example:\n\n\n\n\n\n\ndigital-collections.example.edu_ssl.conf\n\n\n\n\n\n\ndigital-collections.example.edu.conf\n\n\n\n\n\n\n\n\n\n\nEdit the previously named \nnewsite-sample.conf\n file and change lines 3 and 4 to point to the location of your apache logs on the container - example:\n\n\n\n\n\n\nErrorLog /var/log/apache2/digital-collections.example.edu.ssl.error.log\n\n\n\n\n\n\nCustomLog /var/log/apache2/digital-collections.example.edu.ssl.access.log combined\n\n\n\n\n\n\n\n\n\n\nEdit the previously named \nnewsite-sample-ssl.conf\n file and change lines 4 and 5 to point to the location of your apache logs on the container - example:\n\n\n\n\n\n\nErrorLog /var/log/apache2/digital-collections.example.edu.ssl.error.log\n\n\n\n\n\n\nCustomLog /var/log/apache2/digital-collections.example.edu.ssl.access.log combined\n\n\n\n\n\n\n\n\n\n\nEdit the previously named \nnewsite-sample-ssl.conf\n file and change lines 12, 13 and 14 to point to the location of your certs on the \napache\n container - example:\n\n\n```\n\n\nSSLCertificateFile  /certs/newsite-sample.pem\nSSLCertificateChainFile /certs/newsite-sample-interm.pem\nSSLCertificateKeyFile /certs/newsite-sample-key.pem\n\n\n\n```\n\n\n\n\n\n\nIf there are any additional customizations required, you'll need to copy them into these two vhost files accordingly.\n\n\n\n\n\n\nApache Optional Edits\n\n\n\n\n\n\n\n\nData\n\n\nDescription\n\n\nProduction Data Copy\n\n\nMerge, Copy or Edit Location / Destination\n\n\nCopy location\n\n\n\n\n\n\n\n\n\n\nphp.ini\n\n\nPHP configuration file\n\n\ncurrent-production-config/apache/\n\n\nyourdomain-config/apache/\n\n\nLocal ISLE config laptop\n\n\n\n\n\n\n\n\n\n\n\n\nphp.ini\n - endusers can make appropriate edits within \nyourdomain-config/apache/php.ini\n to increase the upload settings, memory etc. as needed. Otherwise leaving the default values should work.\n\n\n\n\n\n\nPlease note:\n an additional line will have to be added to the associated \ndocker-compose.yml\n in the Apache \nvolumes:\n section for this edit to work e.g. \n- ./apache/php.ini:/etc/php.ini\n\n\n\n\n\n\n\n\n\n\n\n\nData\n\n\nDescription\n\n\nProduction Data Copy\n\n\nMerge, Copy or Edit Location / Destination\n\n\nCopy location\n\n\n\n\n\n\n\n\n\n\ntmpreaper\n\n\nCronjob for tmpreaper\n\n\ncurrent-production-config/apache/\n\n\nyourdomain-config/apache/\n\n\nLocal ISLE config laptop\n\n\n\n\n\n\n\n\n\n\n\n\ntmpreaper\n - (optional) endusers may want to edit this tmpreaper cron job for different locations and/or times. The \ndocker-compose.yml\n file will need an associated bind-mount for this change.\n\n\n\n\n\n\nPlease note:\n an additional line will have to be added to the associated \ndocker-compose.yml\n in the Apache \nvolumes:\n section for this edit to work e.g. \n- ./apache/tmpreaper/cron:/etc/cron.d/tmpreaper-cron\n\n\n\n\n\n\nApache - ssl-certs\n\n\nIf need be, please refer to the \nSSL certificate\n section of the \nGlossary\n for relevant terms to help guide installation.\n\n\n\n\n\n\nCopy your original production SSL certificates for Apache into the \napache/ssl-certs\n subdirectory. They will and should have different names than the examples provided below dependent on the ISLE environment you are setting up e.g. (\nproduction, staging or development\n).\n\n\n\n\n\n\nThere can be up to 2 - 3 files involved in this process.\n\n\n\n\n\n\n1 x SSL Certificate Key File e.g. \nnewsite-sample-key.pem\n\n\n\n\nThis file is required.\n\n\nPlease also note that the file extensions can also be: \n.key\n or \n.pem\n\n\n\n\n\n\n\n\n1 x SSL Certificate File e.g. \nnewsite-sample.pem\n\n\n\n\nThis file is required.\n\n\nPlease also note that the file extensions can also be: \n.cer\n, \n.crt\n or \n.pem\n\n\n\n\n\n\n\n\n1 x SSL Certificate Chain File e.g. \nnewsite-sample-interm.pem\n\n\n\n\nThis file may be \noptional\n in some setups but is generally recommended for use by the \napache\n container when available.\n\n\nIt will not be used by the \nproxy\n container.\n\n\nPlease also note that the file extensions can also be: \n.cer\n, \n.crt\n or \n.pem\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nApache - ssl-certs (multi)\n\n\n\n\nWhen creating multiple environments for ISLE, please change all of the file and key names accordingly to reflect the environment e.g. adding (\n-prod, -stage, -dev\n to file names). Later on, this process will assist in organizing proper filing of files for the \nproxy\n container and stop any situation where a file gets overwritten or improperly referenced by the wrong environment.\n\n\n\n\nExample:\n\n\n* 1 x SSL Certificate Key File e.g. `newsite-dev-key.pem`\n* 1 x SSL Certificate File e.g. `newsite-dev.pem`\n* 1 x SSL Certificate Chain File e.g. `newsite-dev-interm.pem`\n\n\n\nFedora\n\n\nCompare, edit, merge or copy the following from the suggested directory \ncurrent-production-config/fedora/\n to:\n\n\n\n\nyourdomain-config/fedora/\n on your local laptop.\n\n\n\n\n\n\n\n\n\n\nData\n\n\nDescription\n\n\nPossible Location\n\n\nMerge, Copy or Edit Location / Destination\n\n\nCopy location\n\n\n\n\n\n\n\n\n\n\ndatastreamStore\n\n\nEntire Fedora data directory\n\n\n/usr/local/fedora/data/\n\n\nyourdomain-data/fedora/data/datastreamStore\n\n\nRemote ISLE Host server\n\n\n\n\n\n\nfedora-xacml-policies\n\n\nEntire Fedora data directory\n\n\n/usr/local/fedora/data/\n\n\nyourdomain-data/fedora/data/fedora-xacml-policies\n\n\nRemote ISLE Host server\n\n\n\n\n\n\nobjectStore\n\n\nEntire Fedora data directory\n\n\n/usr/local/fedora/data/\n\n\nyourdomain-data/fedora/data/objectStore\n\n\nRemote ISLE Host server\n\n\n\n\n\n\nfedora.fcfg\n\n\nFedora repository config file\n\n\n/usr/local/fedora/server/config/\n\n\nyourdomain-config/fedora/\n\n\nLocal ISLE config laptop\n\n\n\n\n\n\nfedora-users.xml\n\n\nFedora users config file\n\n\n/usr/local/fedora/server/config/\n\n\nyourdomain-config/fedora/\n\n\nLocal ISLE config laptop\n\n\n\n\n\n\nfilter-drupal.xml\n\n\nFedora Drupal filter file\n\n\n/usr/local/fedora/server/config/\n\n\nyourdomain-config/fedora/\n\n\nLocal ISLE config laptop\n\n\n\n\n\n\nrepository-policies\n\n\nFedora Drupal filter file\n\n\n/usr/local/fedora/server/config/\n\n\nyourdomain-config/fedora/\n\n\nLocal ISLE config laptop\n\n\n\n\n\n\n\n\nFedora Edits\n\n\n\n\n\n\nThe outlined contents (above) of the production Islandora Fedora \ndata\n directory should be copied to a new directory called \nyourdomain-data/fedora/data/\n on your remote ISLE host server in the appropriate storage area.\n\n\n\n\nDo not copy the following directories from the production Islandora fedora \n/usr/local/fedora/data\n directory.\n\n\n/usr/local/fedora/\ndata/activemq-data\n\n\n/usr/local/fedora/\ndata/resourceIndex\n\n\n\n\n\n\n\n\n\n\n\n\nfedora.fcfg\n - endusers will want to edit the following:\n\n\n\n\n\n\nLine: 562 (optional) to change the \nfedora_admin\n username for the \nfedora3\n database\n\n\n\n\n\n\nLine: 598 (necessary) to enter the \nfedora_admin\n user password for the \nfedora3\n database\n\n\n\n\n\n\n\n\n\n\nfedora-users.xml\n - endusers will want to edit the following:\n\n\n\n\nLines 3, 8, 14 and 19: Add the appropriate passwords or users as needed.  \n\n\n\n\n\n\n\n\nfilter-drupal.xml\n - endusers will want to edit\n\n\n\n\n\n\nLine 3: Add the appropriate Drupal site database name, Drupal site database user and Drupal site database user password in between all \n\"\"\n\n\n\n\n\n\nPlease note:\n For endusers using Drupal multi-sites, please add additional sites as guided in the example below\n\n\n\n\n\n\nExample\n\n\n\n\n\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<FilterDrupal_Connection>\n\n    <connection server=\"mysql\" port=\"3306\" dbname=\"drupalsite1\" user=\"drupalsite1_user\" password=\"drupalsite1_user_pw\">\n    <sql>\n       SELECT DISTINCT u.uid AS userid, u.name AS Name, u.pass AS Pass,r.name AS Role FROM (users u LEFT JOIN users_roles ON u.uid=users_roles.uid) LEFT JOIN role r ON r.rid=users_roles.rid WHERE u.name=? AND u.pass=?;\n    </sql>\n    </connection>\n\n    <connection server=\"mysql\" port=\"3306\" dbname=\"drupalsite2\" user=\"drupalsite2_user\" password=\"drupalsite2_user_pw\">\n    <sql>\n       SELECT DISTINCT u.uid AS userid, u.name AS Name, u.pass AS Pass,r.name AS Role FROM (users u LEFT JOIN users_roles ON u.uid=users_roles.uid) LEFT JOIN role r ON r.rid=users_roles.rid WHERE u.name=? AND u.pass=?;\n    </sql>\n    </connection>\n\n</FilterDrupal_Connection>\n\n\n\n\n\n\nfedora/repository-policies\n - endusers can edit the files contained within for more granular or customized Fedora user permissions or repository access.\n\n\n\n\nSolr\n\n\nCompare, edit, merge or copy the following from the source directory \ncurrent-production-config/solr/\n to:\n\n\n\n\nyourdomain-config/solr/\n on your local laptop.\n\n\n\n\n\n\n\n\n\n\nData\n\n\nDescription\n\n\nPossible Location\n\n\nMerge, Copy or Edit Location / Destination\n\n\nCopy location\n\n\n\n\n\n\n\n\n\n\nschema.xml\n\n\nSolr index config file\n\n\n../solr/collection1/conf\n\n\nyourdomain-config/solr/\n\n\nLocal ISLE config laptop\n\n\n\n\n\n\nsolrconfig.xml\n\n\nSolr config file\n\n\n../solr/collection1/conf\n\n\nyourdomain-config/solr/\n\n\nLocal ISLE config laptop\n\n\n\n\n\n\nstopwords.txt\n\n\nsolr webserver vhost file\n\n\n../solr/collection1/conf\n\n\nyourdomain-config/solr/\n\n\nLocal ISLE config laptop\n\n\n\n\n\n\n\n\nSolr Edits\n\n\n\n\nschema.xml\n\n\nUsually the first file one configures when setting up a new Solr installation\n\n\n\n\nThe schema declares\n\n\n\n\nwhat kinds of fields there are\n\n\nwhich field should be used as the unique/primary key\n\n\nwhich fields are required\n\n\nhow to index and search each field\n\n\n\n\n\n\n\n\nsolrconfig.xml\n\n\n\n\nThe solrconfig.xml file is the configuration file with the most parameters affecting Solr itself.\n\n\n\n\nIn solrconfig.xml, one can configure the following:\n\n\n\n\nrequest handlers, which process requests to Solr, e.g. requests to add documents to the index or requests to return results for a query\n\n\nprocesses that \"listen\" for particular query-related events; listeners can be used to trigger the execution of special code\n\n\nthe Request Dispatcher for managing HTTP communications\n\n\nthe Admin Web interface\n\n\nparameters related to replication and duplication\n\n\n\n\n\n\n\n\nstopwords.txt\n\n\n\n\n_Using the stopwords.txt file, one can avoid the common words of a language, which do not add a significant value to any search.\n\n\n\n\nFor example, a, an, the, you, I, am, and so on. One can specify words to be removed from the Solr search in this file line-by-line.\n\n\n\n\n\n\nAdditional Locations:\n\n\n\n\n/opt/solr\n\n\n/usr/local/solr\n\n\n/var/lib/tomcat7/webapps/solr\n\n\n/usr/share/tomcat/webapps/solr\n\n\n\n\n\n\nProxy directory\n\n\nIf need be, please refer to the \nSystems\n section of the \nGlossary\n for relevant terms to help guide installation.\n\n\nThis directory and service will not exist on any current islandora production systems. Please pick one of the following guides to complete this configuration.\n\n\n\n\n\n\nIf the migrated production site is to be the first or only site running on the ISLE host server, please follow the \nNew Site Installation Guide - w/ Single ISLE Environment\n, \n### Proxy directory\n section, lines 317 - 395.\n\n\n\n\n\n\nIf the migrated production site is not the first or only site running on the ISLE host server, please follow the \nNew Site Installation Guide - w/ multiple ISLE Environments\n\n\n\n\nRead the \nAssumptions / Prerequisites\n section, lines 16 -32\n\n\nRead the \nMultiple ISLE / Islandora Environments\n section, lines 36 -88\n\n\nAll of the sections starting with \nProxy directory\n paying particular attention to anything labelled with \n(multi)\n, lines 384 - 623",
            "title": "Migration Merge Checklist"
        },
        {
            "location": "/04_installation_migration/migration_merge_checklist/#apache",
            "text": "Compare, edit, merge or copy the following from the source directory  current-production-config/apache/  to:   yourdomain-config/apache/  on your local laptop.      Data  Description  Production Data Copy  Merge, Copy or Edit Location / Destination  Copy location      html  Islandora/Drupal Website  current-production-config/apache/  yourdomain-data/apache/  Remote ISLE Host server    settings.php  Drupal settings.php file  current-production-config/apache/  yourdomain-config/apache/  Local ISLE config laptop    site.conf  Apache webserver vhost file  current-production-config/apache/  reference file but do not copy  Local ISLE config laptop",
            "title": "Apache"
        },
        {
            "location": "/04_installation_migration/migration_merge_checklist/#apache-edits",
            "text": "html  - endusers will have  copied  this entire directory  instead  to a new directory called  yourdomain-data/apache/html/  on your remote ISLE host server in the appropriate storage area.    settings.php  - endusers will want to edit database and user names for Drupal sites to connect properly.    Lines 251 -253: Change the appropriate settings for the Drupal website database, associate database user name and password. Do not change the  host  settings.      Line 288:  Recommend adding a Drupal hash value here of 25+ alpha-numeric characters    Line 312:  $base_url  should be commented out as it isn't used due to the proxy.",
            "title": "Apache Edits"
        },
        {
            "location": "/04_installation_migration/migration_merge_checklist/#apache-sites-enabled",
            "text": "Please note that endusers will take values from the  site.conf  file and flow the information as needed into the to be renamed  newsite-sample-ssl.conf  &  newsite-sample.conf  files accordingly with the domain name of your choice. This file will not be copied to yourdomain-config/apache/ for any usage.    Within the  sites-enabled  directory, rename the files  newsite-sample-ssl.conf  and  newsite-sample.conf  to your domain names - example:    digital-collections.example.edu_ssl.conf    digital-collections.example.edu.conf      Edit the previously named  newsite-sample.conf  file and change lines 3 and 4 to point to the location of your apache logs on the container - example:    ErrorLog /var/log/apache2/digital-collections.example.edu.ssl.error.log    CustomLog /var/log/apache2/digital-collections.example.edu.ssl.access.log combined      Edit the previously named  newsite-sample-ssl.conf  file and change lines 4 and 5 to point to the location of your apache logs on the container - example:    ErrorLog /var/log/apache2/digital-collections.example.edu.ssl.error.log    CustomLog /var/log/apache2/digital-collections.example.edu.ssl.access.log combined      Edit the previously named  newsite-sample-ssl.conf  file and change lines 12, 13 and 14 to point to the location of your certs on the  apache  container - example:  ```  SSLCertificateFile  /certs/newsite-sample.pem\nSSLCertificateChainFile /certs/newsite-sample-interm.pem\nSSLCertificateKeyFile /certs/newsite-sample-key.pem  ```    If there are any additional customizations required, you'll need to copy them into these two vhost files accordingly.",
            "title": "Apache - sites-enabled"
        },
        {
            "location": "/04_installation_migration/migration_merge_checklist/#apache-optional-edits",
            "text": "Data  Description  Production Data Copy  Merge, Copy or Edit Location / Destination  Copy location      php.ini  PHP configuration file  current-production-config/apache/  yourdomain-config/apache/  Local ISLE config laptop       php.ini  - endusers can make appropriate edits within  yourdomain-config/apache/php.ini  to increase the upload settings, memory etc. as needed. Otherwise leaving the default values should work.    Please note:  an additional line will have to be added to the associated  docker-compose.yml  in the Apache  volumes:  section for this edit to work e.g.  - ./apache/php.ini:/etc/php.ini       Data  Description  Production Data Copy  Merge, Copy or Edit Location / Destination  Copy location      tmpreaper  Cronjob for tmpreaper  current-production-config/apache/  yourdomain-config/apache/  Local ISLE config laptop       tmpreaper  - (optional) endusers may want to edit this tmpreaper cron job for different locations and/or times. The  docker-compose.yml  file will need an associated bind-mount for this change.    Please note:  an additional line will have to be added to the associated  docker-compose.yml  in the Apache  volumes:  section for this edit to work e.g.  - ./apache/tmpreaper/cron:/etc/cron.d/tmpreaper-cron",
            "title": "Apache Optional Edits"
        },
        {
            "location": "/04_installation_migration/migration_merge_checklist/#apache-ssl-certs",
            "text": "If need be, please refer to the  SSL certificate  section of the  Glossary  for relevant terms to help guide installation.    Copy your original production SSL certificates for Apache into the  apache/ssl-certs  subdirectory. They will and should have different names than the examples provided below dependent on the ISLE environment you are setting up e.g. ( production, staging or development ).    There can be up to 2 - 3 files involved in this process.    1 x SSL Certificate Key File e.g.  newsite-sample-key.pem   This file is required.  Please also note that the file extensions can also be:  .key  or  .pem     1 x SSL Certificate File e.g.  newsite-sample.pem   This file is required.  Please also note that the file extensions can also be:  .cer ,  .crt  or  .pem     1 x SSL Certificate Chain File e.g.  newsite-sample-interm.pem   This file may be  optional  in some setups but is generally recommended for use by the  apache  container when available.  It will not be used by the  proxy  container.  Please also note that the file extensions can also be:  .cer ,  .crt  or  .pem",
            "title": "Apache - ssl-certs"
        },
        {
            "location": "/04_installation_migration/migration_merge_checklist/#apache-ssl-certs-multi",
            "text": "When creating multiple environments for ISLE, please change all of the file and key names accordingly to reflect the environment e.g. adding ( -prod, -stage, -dev  to file names). Later on, this process will assist in organizing proper filing of files for the  proxy  container and stop any situation where a file gets overwritten or improperly referenced by the wrong environment.   Example:  * 1 x SSL Certificate Key File e.g. `newsite-dev-key.pem`\n* 1 x SSL Certificate File e.g. `newsite-dev.pem`\n* 1 x SSL Certificate Chain File e.g. `newsite-dev-interm.pem`",
            "title": "Apache - ssl-certs (multi)"
        },
        {
            "location": "/04_installation_migration/migration_merge_checklist/#fedora",
            "text": "Compare, edit, merge or copy the following from the suggested directory  current-production-config/fedora/  to:   yourdomain-config/fedora/  on your local laptop.      Data  Description  Possible Location  Merge, Copy or Edit Location / Destination  Copy location      datastreamStore  Entire Fedora data directory  /usr/local/fedora/data/  yourdomain-data/fedora/data/datastreamStore  Remote ISLE Host server    fedora-xacml-policies  Entire Fedora data directory  /usr/local/fedora/data/  yourdomain-data/fedora/data/fedora-xacml-policies  Remote ISLE Host server    objectStore  Entire Fedora data directory  /usr/local/fedora/data/  yourdomain-data/fedora/data/objectStore  Remote ISLE Host server    fedora.fcfg  Fedora repository config file  /usr/local/fedora/server/config/  yourdomain-config/fedora/  Local ISLE config laptop    fedora-users.xml  Fedora users config file  /usr/local/fedora/server/config/  yourdomain-config/fedora/  Local ISLE config laptop    filter-drupal.xml  Fedora Drupal filter file  /usr/local/fedora/server/config/  yourdomain-config/fedora/  Local ISLE config laptop    repository-policies  Fedora Drupal filter file  /usr/local/fedora/server/config/  yourdomain-config/fedora/  Local ISLE config laptop",
            "title": "Fedora"
        },
        {
            "location": "/04_installation_migration/migration_merge_checklist/#fedora-edits",
            "text": "The outlined contents (above) of the production Islandora Fedora  data  directory should be copied to a new directory called  yourdomain-data/fedora/data/  on your remote ISLE host server in the appropriate storage area.   Do not copy the following directories from the production Islandora fedora  /usr/local/fedora/data  directory.  /usr/local/fedora/ data/activemq-data  /usr/local/fedora/ data/resourceIndex       fedora.fcfg  - endusers will want to edit the following:    Line: 562 (optional) to change the  fedora_admin  username for the  fedora3  database    Line: 598 (necessary) to enter the  fedora_admin  user password for the  fedora3  database      fedora-users.xml  - endusers will want to edit the following:   Lines 3, 8, 14 and 19: Add the appropriate passwords or users as needed.       filter-drupal.xml  - endusers will want to edit    Line 3: Add the appropriate Drupal site database name, Drupal site database user and Drupal site database user password in between all  \"\"    Please note:  For endusers using Drupal multi-sites, please add additional sites as guided in the example below    Example    <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<FilterDrupal_Connection>\n\n    <connection server=\"mysql\" port=\"3306\" dbname=\"drupalsite1\" user=\"drupalsite1_user\" password=\"drupalsite1_user_pw\">\n    <sql>\n       SELECT DISTINCT u.uid AS userid, u.name AS Name, u.pass AS Pass,r.name AS Role FROM (users u LEFT JOIN users_roles ON u.uid=users_roles.uid) LEFT JOIN role r ON r.rid=users_roles.rid WHERE u.name=? AND u.pass=?;\n    </sql>\n    </connection>\n\n    <connection server=\"mysql\" port=\"3306\" dbname=\"drupalsite2\" user=\"drupalsite2_user\" password=\"drupalsite2_user_pw\">\n    <sql>\n       SELECT DISTINCT u.uid AS userid, u.name AS Name, u.pass AS Pass,r.name AS Role FROM (users u LEFT JOIN users_roles ON u.uid=users_roles.uid) LEFT JOIN role r ON r.rid=users_roles.rid WHERE u.name=? AND u.pass=?;\n    </sql>\n    </connection>\n\n</FilterDrupal_Connection>   fedora/repository-policies  - endusers can edit the files contained within for more granular or customized Fedora user permissions or repository access.",
            "title": "Fedora Edits"
        },
        {
            "location": "/04_installation_migration/migration_merge_checklist/#solr",
            "text": "Compare, edit, merge or copy the following from the source directory  current-production-config/solr/  to:   yourdomain-config/solr/  on your local laptop.      Data  Description  Possible Location  Merge, Copy or Edit Location / Destination  Copy location      schema.xml  Solr index config file  ../solr/collection1/conf  yourdomain-config/solr/  Local ISLE config laptop    solrconfig.xml  Solr config file  ../solr/collection1/conf  yourdomain-config/solr/  Local ISLE config laptop    stopwords.txt  solr webserver vhost file  ../solr/collection1/conf  yourdomain-config/solr/  Local ISLE config laptop",
            "title": "Solr"
        },
        {
            "location": "/04_installation_migration/migration_merge_checklist/#solr-edits",
            "text": "schema.xml  Usually the first file one configures when setting up a new Solr installation   The schema declares   what kinds of fields there are  which field should be used as the unique/primary key  which fields are required  how to index and search each field     solrconfig.xml   The solrconfig.xml file is the configuration file with the most parameters affecting Solr itself.   In solrconfig.xml, one can configure the following:   request handlers, which process requests to Solr, e.g. requests to add documents to the index or requests to return results for a query  processes that \"listen\" for particular query-related events; listeners can be used to trigger the execution of special code  the Request Dispatcher for managing HTTP communications  the Admin Web interface  parameters related to replication and duplication     stopwords.txt   _Using the stopwords.txt file, one can avoid the common words of a language, which do not add a significant value to any search.   For example, a, an, the, you, I, am, and so on. One can specify words to be removed from the Solr search in this file line-by-line.    Additional Locations:   /opt/solr  /usr/local/solr  /var/lib/tomcat7/webapps/solr  /usr/share/tomcat/webapps/solr",
            "title": "Solr Edits"
        },
        {
            "location": "/04_installation_migration/migration_merge_checklist/#proxy-directory",
            "text": "If need be, please refer to the  Systems  section of the  Glossary  for relevant terms to help guide installation.  This directory and service will not exist on any current islandora production systems. Please pick one of the following guides to complete this configuration.    If the migrated production site is to be the first or only site running on the ISLE host server, please follow the  New Site Installation Guide - w/ Single ISLE Environment ,  ### Proxy directory  section, lines 317 - 395.    If the migrated production site is not the first or only site running on the ISLE host server, please follow the  New Site Installation Guide - w/ multiple ISLE Environments   Read the  Assumptions / Prerequisites  section, lines 16 -32  Read the  Multiple ISLE / Islandora Environments  section, lines 36 -88  All of the sections starting with  Proxy directory  paying particular attention to anything labelled with  (multi) , lines 384 - 623",
            "title": "Proxy directory"
        },
        {
            "location": "/04_installation_migration/migration_reindex_process/",
            "text": "When migrating any non-ISLE Islandora site, it is crucial to rebuild (reindex) the following three indices from the FOXML and datastream files on disk.\n\n\nFedora's indices:\n\n\n\n\n\n\nResource Index - The Resource Index is the Fedora module that provides the infrastructure for indexing relationships among objects and their components.\n\n\n\n\n\n\nSQL database - \nfedora3\n contains information vital for the Drupal site to connect to Fedora correctly.\n\n\n\n\n\n\nSolr index\n\n\n\n\nSolr Index - Solr an open source enterprise search platform works in conjunction with the Islandora Solr module to provide a way to configure the Islandora search functions, the search results display, and the display of metadata on object pages. The index serves as a list of those objects for fast searching across large collections.\n\n\n\n\nYou can use the command-line interactive utility \nfedora-rebuild.sh\n on the \nfedora\n container to rebuild all indices when the Fedora (not Tomcat) server is offline.\n\n\nDepending on the size of your repository, this entire process may take minutes (thousands of objects) or hours (millions of objects) to complete.\n\n\nAssumptions / Pre-Requisites\n\n\n\n\n\n\nAll containers are currently running\n\n\n\n\n\n\ntomcat_admin_password\n = The tomcat admin password from the Fedora container.\n\n\n\n\n\n\nISLE_HOST_IP\n = The IP address of your ISLE Host server.\n\n\n\n\n\n\nShutdown Fedora Method 1:\n\n\n\n\n\n\nOpen a browser and navigate to \nhttp://ISLE_HOST_IP:8080/manager/html\n\n\n\n\nUser:     \nadmin\n\n\nPassword: \ntomcat_admin_password\n\n\n\n\n\n\n\n\nScroll down to the \nfedora\n row and on the right in the \nCommands\n column, click the \nstop\n button.\n\n\n\n\n\n\nWait 20 seconds.        \n\n\n\n\n\n\nMove onto the Reindex Fedora RI (1 of 3) section.\n\n\n\n\n\n\nShutdown Fedora Method 2:\n\n\ntomcat_admin_password\n = Change this to your tomcat admin password from the Fedora container.\n\n\nShell into the running \nfedora\n container\n* \ndocker exec -it compass-fedora-dev bash\n\n\n\n\n\n\nwget \"http://admin:tomcat_admin_password:8080/manager/text/stop?path=/fedora\" -O - -q\n\n\n\n\n\n\nType: \nexit\n to exit the \nfedora\n container.\n\n\n\n\n\n\nMove onto the Reindex Fedora RI (1 of 3) section.\n\n\n\n\n\n\nReindex Fedora RI (1 of 3)\n\n\n\n\n\n\nShell into the \nfedora\n container: \ndocker exec -it compass-fedora-dev bash\n\n\n\n\n\n\ncd /usr/local/fedora/server/bin\n\n\n\n\n\n\n\n\n\n\nThis command will take from 10 - 30+ mins to complete depending on the size of your Fedora collection.\n\n\n\n\n\n\nIf it fails immediately, check the log it creates for details: \ntail -f /usr/local/tomcat/logs/fedora_ri.log\n\n\n\n\n\n\n/bin/sh fedora-rebuild.sh -r org.fcrepo.server.resourceIndex.ResourceIndexRebuilder > /usr/local/tomcat/logs/fedora_ri.log 2>&1\n\n\n\n\n\n\n\n\n\n\nStay within the \nfedora\n container and continue to the next section Reindex SQL database (2 of 3).\n\n\n\n\n\n\n\n\nReindex SQL database (2 of 3)\n\n\nmysqlrootpassword\n = Change this to your MySQL root password from the MySQL container.\n\n\nConnect to the mysql container from the fedora container to truncate \nfedora3\n tables.\n\n\n\n\n\n\nmysql -h mysql -u root -pmysqlrootpassword\n\n\n\n\n\n\nPlease note:\n ^ there should be no space between the last command \n-p\n and your mysql root password. (mysqlrootpassword)\n\n\n\n\n\n\nThe \nmysql\n prompt should now appear. You are now connected to the \nmysql\n container via the mysql client on the \nfedora\n container.\n\n\nSelect the \nfedora3\n database.\n\n\n\n\nuse fedora3;\n\n\n\n\nThe mysql prompt should now display something similar to this: \nMySQL [fedora3]>\n\n\nDisplay all of the tables of the \nfedora3\n database.\n\n\n\n\nshow tables;\n\n\n\n\nExample:\n\n\n+---------------------+\n| Tables_in_fedora3   |\n+---------------------+\n| dcDates             |\n| doFields            |\n| doRegistry          |\n| fcrepoRebuildStatus |\n| modelDeploymentMap  |\n| pidGen              |\n+---------------------+\n6 rows in set (0.00 sec)\n\n\n\n\n\n\nEnter the following commands:\n\n\ntruncate table dcDates;\n\n\ntruncate table doFields;\n\n\ntruncate table doRegistry;\n\n\ntruncate table fcrepoRebuildStatus;\n\n\ntruncate table modelDeploymentMap;\n\n\ntruncate table pidGen;\n\n\n\n\n\n\n\n\nReturn to the terminal with \nfedora\n container shelled in.\n\n\n\n\nexit\n\n\n\n\nThe mysql prompt should disappear and the prompt for \nfedora\n should reappear. You've been returned to the \nfedora\n container.\n\n\n\n\n\n\ncd /usr/local/fedora/server/bin\n\n\n\n\n\n\nThis command will take from 10 - 30+ mins to complete depending on the size of your Fedora collection.\n\n\n\n\n\n\nIf it fails immediately, check the log it creates for details:  \ntail -f /usr/local/tomcat/logs/sql_ri.log\n\n\n\n\n\n\n/bin/sh fedora-rebuild.sh -r org.fcrepo.server.utilities.rebuild.SQLRebuilder > /usr/local/tomcat/logs/sql_ri.log 2>&1\n\n\n\n\n\n\n\n\n\n\nStay within the \nfedora\n container and continue to the next section Reindex Solr (3 of 3).\n\n\n\n\n\n\n\n\nReindex Solr (3 of 3)\n\n\nfgsAdmin_password\n  = Change this to your Fedora Gsearch (fgsAdmin) password from the Fedora container.\n\n\nWARNING\n\nThis reindex process takes the longest of all three, with up to \n1 - 30 or more hours\n to complete depending on the size of your Fedora collection.\n\n\nAs such, it is recommended starting a screen session prior to running the following command. Learn more about \nscreen here\n\n\n\n\n\n\nWhether you use \nscreen\n prior or not, shell into the \nfedora\n container: \ndocker exec -it compass-fedora-dev bash\n\n\n\n\n\n\ncd /usr/local/tomcat/webapps/fedoragsearch/client\n\n\n\n\n\n\n/bin/sh runRESTClient.sh localhost:8080 updateIndex fromFoxmlFiles\n\n\n\n\nUser: \nfgsAdmin\n\n\nPassword: \nfgsAdmin_password\n\n\n\n\n\n\n\n\nAgain this process will take up to \n1 - 30 or more hours\n to complete depending on the size of your Fedora collection.\n\n\n\n\nYou can tail either Fedora Gsearch or Solr logs, (\nlocations here\n) to watch the indexing process (\nif necessary\n).\n\n\n\n\n\n\n\n\nType \nexit\n when finished to exit the container.",
            "title": "Migration Reindex Process"
        },
        {
            "location": "/04_installation_migration/migration_reindex_process/#assumptions-pre-requisites",
            "text": "All containers are currently running    tomcat_admin_password  = The tomcat admin password from the Fedora container.    ISLE_HOST_IP  = The IP address of your ISLE Host server.",
            "title": "Assumptions / Pre-Requisites"
        },
        {
            "location": "/04_installation_migration/migration_reindex_process/#shutdown-fedora-method-1",
            "text": "Open a browser and navigate to  http://ISLE_HOST_IP:8080/manager/html   User:      admin  Password:  tomcat_admin_password     Scroll down to the  fedora  row and on the right in the  Commands  column, click the  stop  button.    Wait 20 seconds.            Move onto the Reindex Fedora RI (1 of 3) section.",
            "title": "Shutdown Fedora Method 1:"
        },
        {
            "location": "/04_installation_migration/migration_reindex_process/#shutdown-fedora-method-2",
            "text": "tomcat_admin_password  = Change this to your tomcat admin password from the Fedora container.  Shell into the running  fedora  container\n*  docker exec -it compass-fedora-dev bash    wget \"http://admin:tomcat_admin_password:8080/manager/text/stop?path=/fedora\" -O - -q    Type:  exit  to exit the  fedora  container.    Move onto the Reindex Fedora RI (1 of 3) section.",
            "title": "Shutdown Fedora Method 2:"
        },
        {
            "location": "/04_installation_migration/migration_reindex_process/#reindex-fedora-ri-1-of-3",
            "text": "Shell into the  fedora  container:  docker exec -it compass-fedora-dev bash    cd /usr/local/fedora/server/bin      This command will take from 10 - 30+ mins to complete depending on the size of your Fedora collection.    If it fails immediately, check the log it creates for details:  tail -f /usr/local/tomcat/logs/fedora_ri.log    /bin/sh fedora-rebuild.sh -r org.fcrepo.server.resourceIndex.ResourceIndexRebuilder > /usr/local/tomcat/logs/fedora_ri.log 2>&1      Stay within the  fedora  container and continue to the next section Reindex SQL database (2 of 3).",
            "title": "Reindex Fedora RI (1 of 3)"
        },
        {
            "location": "/04_installation_migration/migration_reindex_process/#reindex-sql-database-2-of-3",
            "text": "mysqlrootpassword  = Change this to your MySQL root password from the MySQL container.  Connect to the mysql container from the fedora container to truncate  fedora3  tables.    mysql -h mysql -u root -pmysqlrootpassword    Please note:  ^ there should be no space between the last command  -p  and your mysql root password. (mysqlrootpassword)    The  mysql  prompt should now appear. You are now connected to the  mysql  container via the mysql client on the  fedora  container.  Select the  fedora3  database.   use fedora3;   The mysql prompt should now display something similar to this:  MySQL [fedora3]>  Display all of the tables of the  fedora3  database.   show tables;   Example:  +---------------------+\n| Tables_in_fedora3   |\n+---------------------+\n| dcDates             |\n| doFields            |\n| doRegistry          |\n| fcrepoRebuildStatus |\n| modelDeploymentMap  |\n| pidGen              |\n+---------------------+\n6 rows in set (0.00 sec)   Enter the following commands:  truncate table dcDates;  truncate table doFields;  truncate table doRegistry;  truncate table fcrepoRebuildStatus;  truncate table modelDeploymentMap;  truncate table pidGen;     Return to the terminal with  fedora  container shelled in.   exit   The mysql prompt should disappear and the prompt for  fedora  should reappear. You've been returned to the  fedora  container.    cd /usr/local/fedora/server/bin    This command will take from 10 - 30+ mins to complete depending on the size of your Fedora collection.    If it fails immediately, check the log it creates for details:   tail -f /usr/local/tomcat/logs/sql_ri.log    /bin/sh fedora-rebuild.sh -r org.fcrepo.server.utilities.rebuild.SQLRebuilder > /usr/local/tomcat/logs/sql_ri.log 2>&1      Stay within the  fedora  container and continue to the next section Reindex Solr (3 of 3).",
            "title": "Reindex SQL database (2 of 3)"
        },
        {
            "location": "/04_installation_migration/migration_reindex_process/#reindex-solr-3-of-3",
            "text": "fgsAdmin_password   = Change this to your Fedora Gsearch (fgsAdmin) password from the Fedora container.  WARNING \nThis reindex process takes the longest of all three, with up to  1 - 30 or more hours  to complete depending on the size of your Fedora collection.  As such, it is recommended starting a screen session prior to running the following command. Learn more about  screen here    Whether you use  screen  prior or not, shell into the  fedora  container:  docker exec -it compass-fedora-dev bash    cd /usr/local/tomcat/webapps/fedoragsearch/client    /bin/sh runRESTClient.sh localhost:8080 updateIndex fromFoxmlFiles   User:  fgsAdmin  Password:  fgsAdmin_password     Again this process will take up to  1 - 30 or more hours  to complete depending on the size of your Fedora collection.   You can tail either Fedora Gsearch or Solr logs, ( locations here ) to watch the indexing process ( if necessary ).     Type  exit  when finished to exit the container.",
            "title": "Reindex Solr (3 of 3)"
        },
        {
            "location": "/05_developer_docs/dev_contributing_to_project/",
            "text": "",
            "title": "Contributing to Project"
        },
        {
            "location": "/05_developer_docs/dev_documentation_overview/",
            "text": "The ISLE project uses \nmkdocs\n a static site generator designed for building project documentation. Documentation source files are written in \nMarkdown\n, and configured with a single \nYAML\n configuration file. The \nmkdocs\n software then creates static \nHTML\n pages for hosting on Github Pages. This software can also be used locally on an enduser's laptop or workstation for review and editing of materials.\n\n\nPlease note there are two key elements to the ISLE Documentation.\n\n\n\n\n\n\nISLE Documentation Github.com Pages \n(static HTML):\n  \n\n\n\n\nUsed by endusers for Documentation\n\n\nClean, crisp nicely formatted hosted ISLE Documentation with navigation.\n\n\nhttps://islandora-collaboration-group.github.io/ISLE-Documentation/\n\n\n\n\n\n\n\n\nISLE Documentation Github.com Repository \n(Markdown files):\n  \n\n\n\n\nUsed by ISLE Maintainers to create and manage ISLE Documentation\n\n\nMarkdown\n files (\n.md\n) stored in an online git repository that when rendered by the \nmkdocs\n software produce the above mentioned nicely formatted static HTML pages.\n\n\nhttps://github.com/Islandora-Collaboration-Group/ISLE-Documentation\n\n\n\n\n\n\n\n\nPlease refer to the \nDocumentation\n section of the \nGlossary\n if terms used are not clear.\n\n\nA very handy primer for writing documentation using \nMkDocs\n has been written here: \nhttp://www.mkdocs.org/user-guide/writing-your-docs/\n\n\n\n\nProject Directory structure\n\n\n\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 docs\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 01_installation_host_server\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 02_installation_development\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 03_installation_new_site\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 04_installation_migration\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 05_developer_docs\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 06_specifications\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Previous_Structure_For_Merging\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 about.md\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 assets\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 glossary.md\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 index.md\n\u251c\u2500\u2500 mkdocs.yml\n\n\n\n\n\n\n\n\n\n\n\nDirectory or file\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nREADME.md\n\n\nDescription of the documentation project contents and how to use them\n\n\n\n\n\n\ndocs\n\n\nwhere all documentation sections and topical pages are kept\n\n\n\n\n\n\nabout.md\n\n\nDescription of the ISLE project, its maintainers and this documentation repository\n\n\n\n\n\n\nassets\n\n\nImage or logo files used in documentation\n\n\n\n\n\n\nglossary.md\n\n\nA list of terms used in documentation\n\n\n\n\n\n\nindex.md\n\n\nThe homepage (first page of the documentation\n\n\n\n\n\n\nmkdocs.yml\n\n\nYAML file that acts as the section and page directory\n\n\n\n\n\n\n\n\nSections and Pages\n\n\nWithin the \ndocs\n directory, there are 6 major topical sections.\n\n\n\n\n\n\nAll sections are have numbered prefixes e.g. \n01_\n , \n02_\n to indicate order of documentation progression or narrative.\n\n\n\n\n\n\nSections contain relevant topics and pages.\n\n\n\n\n\n\nAll pages have relevant prefixes to their sections.\n\n\n\n\n\n\nPage file names may differ from their Page titles in the \nmkdocs.yml\n file.\n\n\n\n\n\n\nAll topic of the page short and concise to one or two keywords  \n\n\n\n\n\n\nPlease keep all filenames lowercase\n\n\n\n\n\n\nPlease ensure that all files are Markdown (\n.md\n) files otherwise the documentation system will fail.\n\n\n\n\n\n\n\n\n\n\n\n\nSection\n\n\nPage Prefix\n\n\nAll topics related to\n\n\n\n\n\n\n\n\n\n\n01_installation_host_server\n\n\nhost_server_\n\n\nHost server installation\n\n\n\n\n\n\n02_installation_development\n\n\nild_\n\n\nISLE test site installation (\nisle.localdomain\n)\n\n\n\n\n\n\n03_installation_new_site\n\n\nnew_site_\n\n\nNew Islandora site installation in ISLE\n\n\n\n\n\n\n04_installation_migration\n\n\nmigration_\n\n\nMigrating an existing production Islandora site to ISLE\n\n\n\n\n\n\n05_developer_docs\n\n\ndev_\n\n\nDocumentation or development of ISLE\n\n\n\n\n\n\n06_specifications\n\n\nspecs_\n\n\nSystems or software specifications of ISLE",
            "title": "Documentation Overview"
        },
        {
            "location": "/05_developer_docs/dev_documentation_overview/#project-directory-structure",
            "text": "\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 docs\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 01_installation_host_server\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 02_installation_development\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 03_installation_new_site\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 04_installation_migration\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 05_developer_docs\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 06_specifications\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Previous_Structure_For_Merging\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 about.md\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 assets\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 glossary.md\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 index.md\n\u251c\u2500\u2500 mkdocs.yml     Directory or file  Description      README.md  Description of the documentation project contents and how to use them    docs  where all documentation sections and topical pages are kept    about.md  Description of the ISLE project, its maintainers and this documentation repository    assets  Image or logo files used in documentation    glossary.md  A list of terms used in documentation    index.md  The homepage (first page of the documentation    mkdocs.yml  YAML file that acts as the section and page directory",
            "title": "Project Directory structure"
        },
        {
            "location": "/05_developer_docs/dev_documentation_overview/#sections-and-pages",
            "text": "Within the  docs  directory, there are 6 major topical sections.    All sections are have numbered prefixes e.g.  01_  ,  02_  to indicate order of documentation progression or narrative.    Sections contain relevant topics and pages.    All pages have relevant prefixes to their sections.    Page file names may differ from their Page titles in the  mkdocs.yml  file.    All topic of the page short and concise to one or two keywords      Please keep all filenames lowercase    Please ensure that all files are Markdown ( .md ) files otherwise the documentation system will fail.       Section  Page Prefix  All topics related to      01_installation_host_server  host_server_  Host server installation    02_installation_development  ild_  ISLE test site installation ( isle.localdomain )    03_installation_new_site  new_site_  New Islandora site installation in ISLE    04_installation_migration  migration_  Migrating an existing production Islandora site to ISLE    05_developer_docs  dev_  Documentation or development of ISLE    06_specifications  specs_  Systems or software specifications of ISLE",
            "title": "Sections and Pages"
        },
        {
            "location": "/05_developer_docs/dev_documentation_editing_online/",
            "text": "Overview\n\n\n\n\nNavigate to online ISLE-Documentation repo\n\n\nEdit existing pages\n\n\nAdding new pages\n\n\nUpdating mkdocs.yml\n\n\n\n\n\n\nCommit changes using a new branch\n\n\nCreate pull request for review\n\n\n\n\nPlease note:\n You'll need to create separate pull requests for each type of change whether editing or adding new pages with a \nmkdocs.yml\n file update. Using the online editor means you can only do one thing at a time.\n\n\nIf you need to edit more than one file or want to create more than one new page of content, it is recommended to instead follow the steps contained within the \nDocumentation Editing - Local\n Guide.\n\n\n\n\nNavigate to online ISLE-Documentation repo\n\n\n\n\nIn a web browser navigate to \nhttps://github.com/Islandora-Collaboration-Group/ISLE-Documentation\n\n\n\n\n\n\nEdit existing pages\n\n\n\n\n\n\nClick into the \ndocs\n directory and navigate to the appropriate \n.md\n file you would like to edit.\n\n\n\n\n\n\nOnce the file has been selected, you should see on the right hand side of the page, a navigation bar that will display \nRaw | Blame | History\n, computer monitor icon, a pen / pencil icon and a trashcan icon. Click the pen / pencil icon to edit the file.\n\n\n\n\n\n\nThe page should change indicating that it can now be edited.\n\n\n\n\n\n\nMake the appropriate edits as needed.\n\n\n\n\n\n\nWhen finished and ready to \"save\" the changes, follow the instructions immediately in the \nCommit changes\n section below.\n\n\n\n\n\n\n\n\nAdding new pages\n\n\nPlease note:\n If you are adding new pages to the Documentation, in addition to creating the new page, you'll need to edit the \nmkdocs.yml\n (YAML) file at the root (base) of the ISLE-Documentation project directory in order for the page to show up in the documentation after adding the new page.\n\n\nThe example used below is how to create a new documentation page that will be about building giant ISLE robots with the title of \"Building Giant ISLE Robots\" and be located in the Development section.\n\n\n\n\n\n\nClick into the \ndocs/05_developer_docs\n directory\n\n\n\n\n\n\nOn the right hand side of the page, a navigation bar that will display \nCreate new file | Upload files | Find File History\n, click the \nCreate new file\n button.\n\n\n\n\n\n\nIn the empty \nName your file...\n field at the top of the page, enter \ndev_building_giant_robots.md\n\n\n\n\n\n\nEnter the appropriate content to the page.\n\n\n\n\n\n\nWhen finished and ready to \"save\" the changes, follow the instructions immediately in the \nCommit changes\n section below.\n\n\n\n\n\n\n\n\nUpdating mkdocs\n\n\nIf you have added a new page to the Documentation, you'll need to edit the \nmkdocs.yml\n (YAML) file at the root (base) of the ISLE-Documentation project directory in order for the page to show up in the documentation.\n\n\n\n\n\n\nClick into the \nmkdocs.yml\n file.\n\n\n\n\n\n\nOnce the file has been selected, you should see on the right hand side of the page, a navigation bar that will display \nRaw | Blame | History\n, computer monitor icon, a pen / pencil icon and a trashcan icon. Click the pen / pencil icon to edit the file.\n\n\n\n\n\n\nThe page should change indicating that it can now be edited.\n\n\n\n\n\n\nMake the appropriate edits as needed.\n\n\n\n\n\n\nIn order for \nmkdocs\n to understand that there is a new page and page title to display in the rendered documentation, one must use the YAML code convention (syntax) to enter.\n\n\nYAML Code Convention Breakdown:\n\n\n\n\n\n\n'Page Title': '/section/filename.md'\n\n\n\n\n\n\nWithin the \nDeveloper Docs\n section of the open \nmkdocs.yml\n file, add this new line in the appropriate order.\n\n\n\n\n\n\n- 'Building Giant ISLE Robots': '05_developer_docs/dev_building_giant_robots.md'\n\n\n- 'Developer Docs':\n  - 'Building Giant ISLE Robots': '05_developer_docs/dev_building_giant_robots.md'\n  - 'Contributing to Project': '05_developer_docs/dev_contributing_to_project.md'\n  - 'Documentation Overview': '05_developer_docs/dev_documentation_overview.md'\n\n\n\n\n\n\nWhen finished and ready to \"save\" the changes, follow the instructions immediately in the \nCommit changes\n section below.\n\n\n\n\n\n\nCommit changes\n\n\n\n\nWhen finished editing, adding or updating, scroll down to the \nCommit changes\n section.\n\n\n\n\nIn the first empty field, enter a short description of the file edited e.g. \nUpdate Glossary.md\n\n\n\n\n\n\nIn the second larger empty field, enter a larger description of the edits\n  made to the file. Two to five sentences should suffice.\n\n\n\n\n\n\nOnce finished, select the second radio button at the bottom\n\n\n\n\nIts label displays: \nCreate a new branch for this commit and start a pull request\n\n\nChange the branch name as needed or leave as the default.\n\n\nClick the green \nPropose File Change\n\n\n\n\n\n\n\n\nDO NOT\n SELECT THE 1ST RADIO BUTTON - \nCommit directly to the master branch\n as this will cause issues though it is selected by default.\n\n\nCreate pull request for review\n\n\nThe \"Open a pull request\" page should now appear along with text like \nThe change you just made was written to a new branch named githubusername-docs-fix2. Create a pull request below to propose these changes.\n\n\n\n\nThe first and second text fields may contain part of the short description. Either keep the default text or change accordingly.\n\n\nClick the green \nCreate pull request\n button.\n\n\n\n\nThis pull request should now appear in the \nPull Requests\n section of the ISLE Repo, ready for review, commentary or inclusion by the ISLE Maintainers.",
            "title": "Documentation Editing - Online"
        },
        {
            "location": "/05_developer_docs/dev_documentation_editing_online/#overview",
            "text": "Navigate to online ISLE-Documentation repo  Edit existing pages  Adding new pages  Updating mkdocs.yml    Commit changes using a new branch  Create pull request for review   Please note:  You'll need to create separate pull requests for each type of change whether editing or adding new pages with a  mkdocs.yml  file update. Using the online editor means you can only do one thing at a time.  If you need to edit more than one file or want to create more than one new page of content, it is recommended to instead follow the steps contained within the  Documentation Editing - Local  Guide.",
            "title": "Overview"
        },
        {
            "location": "/05_developer_docs/dev_documentation_editing_online/#navigate-to-online-isle-documentation-repo",
            "text": "In a web browser navigate to  https://github.com/Islandora-Collaboration-Group/ISLE-Documentation",
            "title": "Navigate to online ISLE-Documentation repo"
        },
        {
            "location": "/05_developer_docs/dev_documentation_editing_online/#edit-existing-pages",
            "text": "Click into the  docs  directory and navigate to the appropriate  .md  file you would like to edit.    Once the file has been selected, you should see on the right hand side of the page, a navigation bar that will display  Raw | Blame | History , computer monitor icon, a pen / pencil icon and a trashcan icon. Click the pen / pencil icon to edit the file.    The page should change indicating that it can now be edited.    Make the appropriate edits as needed.    When finished and ready to \"save\" the changes, follow the instructions immediately in the  Commit changes  section below.",
            "title": "Edit existing pages"
        },
        {
            "location": "/05_developer_docs/dev_documentation_editing_online/#adding-new-pages",
            "text": "Please note:  If you are adding new pages to the Documentation, in addition to creating the new page, you'll need to edit the  mkdocs.yml  (YAML) file at the root (base) of the ISLE-Documentation project directory in order for the page to show up in the documentation after adding the new page.  The example used below is how to create a new documentation page that will be about building giant ISLE robots with the title of \"Building Giant ISLE Robots\" and be located in the Development section.    Click into the  docs/05_developer_docs  directory    On the right hand side of the page, a navigation bar that will display  Create new file | Upload files | Find File History , click the  Create new file  button.    In the empty  Name your file...  field at the top of the page, enter  dev_building_giant_robots.md    Enter the appropriate content to the page.    When finished and ready to \"save\" the changes, follow the instructions immediately in the  Commit changes  section below.",
            "title": "Adding new pages"
        },
        {
            "location": "/05_developer_docs/dev_documentation_editing_online/#updating-mkdocs",
            "text": "If you have added a new page to the Documentation, you'll need to edit the  mkdocs.yml  (YAML) file at the root (base) of the ISLE-Documentation project directory in order for the page to show up in the documentation.    Click into the  mkdocs.yml  file.    Once the file has been selected, you should see on the right hand side of the page, a navigation bar that will display  Raw | Blame | History , computer monitor icon, a pen / pencil icon and a trashcan icon. Click the pen / pencil icon to edit the file.    The page should change indicating that it can now be edited.    Make the appropriate edits as needed.    In order for  mkdocs  to understand that there is a new page and page title to display in the rendered documentation, one must use the YAML code convention (syntax) to enter.  YAML Code Convention Breakdown:    'Page Title': '/section/filename.md'    Within the  Developer Docs  section of the open  mkdocs.yml  file, add this new line in the appropriate order.    - 'Building Giant ISLE Robots': '05_developer_docs/dev_building_giant_robots.md'  - 'Developer Docs':\n  - 'Building Giant ISLE Robots': '05_developer_docs/dev_building_giant_robots.md'\n  - 'Contributing to Project': '05_developer_docs/dev_contributing_to_project.md'\n  - 'Documentation Overview': '05_developer_docs/dev_documentation_overview.md'   When finished and ready to \"save\" the changes, follow the instructions immediately in the  Commit changes  section below.",
            "title": "Updating mkdocs"
        },
        {
            "location": "/05_developer_docs/dev_documentation_editing_online/#commit-changes",
            "text": "When finished editing, adding or updating, scroll down to the  Commit changes  section.   In the first empty field, enter a short description of the file edited e.g.  Update Glossary.md    In the second larger empty field, enter a larger description of the edits\n  made to the file. Two to five sentences should suffice.    Once finished, select the second radio button at the bottom   Its label displays:  Create a new branch for this commit and start a pull request  Change the branch name as needed or leave as the default.  Click the green  Propose File Change     DO NOT  SELECT THE 1ST RADIO BUTTON -  Commit directly to the master branch  as this will cause issues though it is selected by default.",
            "title": "Commit changes"
        },
        {
            "location": "/05_developer_docs/dev_documentation_editing_online/#create-pull-request-for-review",
            "text": "The \"Open a pull request\" page should now appear along with text like  The change you just made was written to a new branch named githubusername-docs-fix2. Create a pull request below to propose these changes.   The first and second text fields may contain part of the short description. Either keep the default text or change accordingly.  Click the green  Create pull request  button.   This pull request should now appear in the  Pull Requests  section of the ISLE Repo, ready for review, commentary or inclusion by the ISLE Maintainers.",
            "title": "Create pull request for review"
        },
        {
            "location": "/05_developer_docs/dev_documentation_editing_local/",
            "text": "Overview\n\n\n\n\nRun the \nmkdocs\n software\n\n\nEdit documentation files locally\n\n\nCommit changes to git\n\n\nPush committed changes to the online ISLE Github.com git repository\n\n\nCreate pull request for review on ISLE Github.com\n\n\n\n\nAssumptions / Prerequisites\n\n\n\n\nmkdocs\n and \nmkdocs-material\n theme are installed following the \nInstalling Mkdocs\n documentation.\n\n\nThe ISLE Documentation project directory has been cloned to the enduser's laptop / workstation in an appropriate Code or Project Directory.\n\n\ngit clone https://github.com/Islandora-Collaboration-Group/ISLE-Documentation.git\n\n\nFamiliarity or comfortability with git and cli commands.\n\n\nEnduser has a web browser opened to this URL: \nhttp://127.0.0.1:8000/\n\n\nEnduser has a terminal open with \nmkdocs serve\n running.\n\n\n\n\nCreate a new git branch\n\n\nAs there is a review process of any new changes to the ISLE code or documentation projects by the Maintainers, using git pull requests are ideal to avoid issues of missing materials, inappropriately edited files or incorrect overwrites of critical data.\n\n\n\n\nWhile \nmkdocs serve\n is running in the terminal, open up a new terminal or terminal tab and \ncd to pathto/ISLE-Documentation project directory\n\n\n\n\nYou will now create a new git branch which will allow you to make changes without fear of losing the original code / file versions kept in \nmaster\n. The new branch name can be anything you like but we suggest that you use a convention that identifies you clearly e.g. \ngithubusername-docs-fix2\n or \njanedoe-doc-fixes1\n\n\n\n\n\n\ngit checkout -b githubusername-docs-fix2\n\n\n\n\n\n\nProceed to edit or create new files as necessary using a text editor of your choice.\n\n\n\n\n\n\nAdding new pages\n\n\nIf you are adding new pages to the Documentation, in addition to creating the new page, you'll need to edit the \nmkdocs.yml\n (YAML) file at the root (base) of the ISLE-Documentation project directory in order for the page to show up in the documentation.\n\n\nThe example used below is how to create a new documentation page that will be about building giant ISLE robots with the title of \"Building Giant ISLE Robots\" and be located in the Development section.\n\n\n\n\n\n\nCreate a new empty file in the \ndocs/05_developer_docs\n directory e.g. \ndev_building_giant_robots.md\n\n\n\n\n\n\nOpen up the \nmkdocs.yml\n file in a text editor of your choice.\n\n\n\n\n\n\nIn order for \nmkdocs\n to understand that there is a new page and page title to display in the rendered documentation, one must use the YAML code convention (syntax) to enter.\n\n\nYAML Code Convention Breakdown:\n\n\n\n\n\n\n'Page Title': '/section/filename.md'\n\n\n\n\n\n\nWithin the \nDeveloper Docs\n section of the open \nmkdocs.yml\n file, add this new line in the appropriate order.\n\n\n\n\n\n\n- 'Building Giant ISLE Robots': '05_developer_docs/dev_building_giant_robots.md'\n\n\n- 'Developer Docs':\n  - 'Building Giant ISLE Robots': '05_developer_docs/dev_building_giant_robots.md'\n  - 'Contributing to Project': '05_developer_docs/dev_contributing_to_project.md'\n  - 'Documentation Overview': '05_developer_docs/dev_documentation_overview.md'\n\n\n\n\n\n\n\n\nThe enduser can now review the contents of this new page at http://127.0.0.1:8000/05_developer_docs/dev_building_giant_robots/\n\n\n\n\n\n\nEdit the contents of \ndev_building_giant_robots.md\n and save the file each time. The associated webpage will refresh with the new changes.\n\n\n\n\n\n\nCommit changes to git\n\n\nOnce finished with adding all new pages and editing files, it is time to add everything to git and then push to the remote ISLE githbu.com repo for review by ISLE Maintainers.\n\n\nGit status\n\n\n\n\nWithin the open terminal, enter \ngit status\n\n\n\n\nThe example git status output below displays that several files have been modified (edited or changed) and that there is a new file called \ndev_building_giant_robots.md\n has been created.\n\n\ngit status\n\nOn branch githubusername-docs-fix2\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git checkout -- <file>...\" to discard changes in working directory)\n\n    modified:   docs/06_specifications/specs_diagram_network.md\n    modified:   docs/Glossary.md\n    modified:   mkdocs.yml\n\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n\n    docs/05_developer_docs/dev_building_giant_robots.md\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\n\n\n\n\nGit add files\n\n\nYou now need to add these changed / new files to git.\n\n\n\n\ngit add docs/06_specifications/specs_diagram_network.md\n\n\ngit add docs/Glossary.md\n\n\ngit add mkdocs.yml\n\n\ngit add docs/05_developer_docs/dev_building_giant_robots.md\n\n\n\n\nGit commit with message\n\n\nNow it is time to package up all these additions with a git commit command. Please ensure that you commit with a descriptive message of changes etc.\n\n\n\n\ngit commit -m \"Tweaked some specs in specs_diagram_network.md. Updated the Glossary with more terms. Made new Building Giant Robots page. I love big robots. Added new files and titles to mkdocs.yml \"\n\n\n\n\nGit push to ISLE Github repository\n\n\n\n\ngit push origin githubusername-docs-fix2\n\n\n\n\nCreate a pull request on ISLE Github.com repo\n\n\nIn order for the ISLE Maintainers to review suggested changes a \"pull request\" will need to be created. This process is a way for Maintainers to see a summary of the suggested changes to be made with any helpful comments and a catalog of potential differences between the original files and the new ones.\n\n\nIf you run into trouble, this Github.com support page may be of use: \nhttps://help.github.com/articles/creating-a-pull-request/\n\n\n\n\n\n\nOn GitHub, navigate to the main page of the ISLE-Documentation repository.\n\n\n\n\n\n\nIn the \"Branch\" menu, choose the branch that contains your commits e.g. \ngithubusername-docs-fix2\n\n\n\n\n\n\nTo the right of the Branch menu, click \nNew pull request\n.\n\n\n\n\n\n\nUse the base branch dropdown menu to select the branch you'd like to merge your changes into (\nmaster\n), then use the compare branch drop-down menu to choose the topic branch you made your changes in.(\ngithubusername-docs-fix2\n)\n\n\n\n\n\n\nbase:master\n <--- \ncompare:githubusername-docs-fix2\n\n\n\n\n\n\nType a title and description for your pull request.\n\n\n\n\n\n\nClick the green \nCreate pull request\n button at the bottom.\n\n\n\n\n\n\nThis pull request should now appear in the \nPull Requests\n section of the ISLE Repo, ready for review, commentary or inclusion by the ISLE Maintainers.",
            "title": "Documentation Editing - Local"
        },
        {
            "location": "/05_developer_docs/dev_documentation_editing_local/#overview",
            "text": "Run the  mkdocs  software  Edit documentation files locally  Commit changes to git  Push committed changes to the online ISLE Github.com git repository  Create pull request for review on ISLE Github.com",
            "title": "Overview"
        },
        {
            "location": "/05_developer_docs/dev_documentation_editing_local/#assumptions-prerequisites",
            "text": "mkdocs  and  mkdocs-material  theme are installed following the  Installing Mkdocs  documentation.  The ISLE Documentation project directory has been cloned to the enduser's laptop / workstation in an appropriate Code or Project Directory.  git clone https://github.com/Islandora-Collaboration-Group/ISLE-Documentation.git  Familiarity or comfortability with git and cli commands.  Enduser has a web browser opened to this URL:  http://127.0.0.1:8000/  Enduser has a terminal open with  mkdocs serve  running.",
            "title": "Assumptions / Prerequisites"
        },
        {
            "location": "/05_developer_docs/dev_documentation_editing_local/#create-a-new-git-branch",
            "text": "As there is a review process of any new changes to the ISLE code or documentation projects by the Maintainers, using git pull requests are ideal to avoid issues of missing materials, inappropriately edited files or incorrect overwrites of critical data.   While  mkdocs serve  is running in the terminal, open up a new terminal or terminal tab and  cd to pathto/ISLE-Documentation project directory   You will now create a new git branch which will allow you to make changes without fear of losing the original code / file versions kept in  master . The new branch name can be anything you like but we suggest that you use a convention that identifies you clearly e.g.  githubusername-docs-fix2  or  janedoe-doc-fixes1    git checkout -b githubusername-docs-fix2    Proceed to edit or create new files as necessary using a text editor of your choice.",
            "title": "Create a new git branch"
        },
        {
            "location": "/05_developer_docs/dev_documentation_editing_local/#adding-new-pages",
            "text": "If you are adding new pages to the Documentation, in addition to creating the new page, you'll need to edit the  mkdocs.yml  (YAML) file at the root (base) of the ISLE-Documentation project directory in order for the page to show up in the documentation.  The example used below is how to create a new documentation page that will be about building giant ISLE robots with the title of \"Building Giant ISLE Robots\" and be located in the Development section.    Create a new empty file in the  docs/05_developer_docs  directory e.g.  dev_building_giant_robots.md    Open up the  mkdocs.yml  file in a text editor of your choice.    In order for  mkdocs  to understand that there is a new page and page title to display in the rendered documentation, one must use the YAML code convention (syntax) to enter.  YAML Code Convention Breakdown:    'Page Title': '/section/filename.md'    Within the  Developer Docs  section of the open  mkdocs.yml  file, add this new line in the appropriate order.    - 'Building Giant ISLE Robots': '05_developer_docs/dev_building_giant_robots.md'  - 'Developer Docs':\n  - 'Building Giant ISLE Robots': '05_developer_docs/dev_building_giant_robots.md'\n  - 'Contributing to Project': '05_developer_docs/dev_contributing_to_project.md'\n  - 'Documentation Overview': '05_developer_docs/dev_documentation_overview.md'    The enduser can now review the contents of this new page at http://127.0.0.1:8000/05_developer_docs/dev_building_giant_robots/    Edit the contents of  dev_building_giant_robots.md  and save the file each time. The associated webpage will refresh with the new changes.",
            "title": "Adding new pages"
        },
        {
            "location": "/05_developer_docs/dev_documentation_editing_local/#commit-changes-to-git",
            "text": "Once finished with adding all new pages and editing files, it is time to add everything to git and then push to the remote ISLE githbu.com repo for review by ISLE Maintainers.",
            "title": "Commit changes to git"
        },
        {
            "location": "/05_developer_docs/dev_documentation_editing_local/#git-status",
            "text": "Within the open terminal, enter  git status   The example git status output below displays that several files have been modified (edited or changed) and that there is a new file called  dev_building_giant_robots.md  has been created.  git status\n\nOn branch githubusername-docs-fix2\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git checkout -- <file>...\" to discard changes in working directory)\n\n    modified:   docs/06_specifications/specs_diagram_network.md\n    modified:   docs/Glossary.md\n    modified:   mkdocs.yml\n\nUntracked files:\n  (use \"git add <file>...\" to include in what will be committed)\n\n    docs/05_developer_docs/dev_building_giant_robots.md\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")",
            "title": "Git status"
        },
        {
            "location": "/05_developer_docs/dev_documentation_editing_local/#git-add-files",
            "text": "You now need to add these changed / new files to git.   git add docs/06_specifications/specs_diagram_network.md  git add docs/Glossary.md  git add mkdocs.yml  git add docs/05_developer_docs/dev_building_giant_robots.md",
            "title": "Git add files"
        },
        {
            "location": "/05_developer_docs/dev_documentation_editing_local/#git-commit-with-message",
            "text": "Now it is time to package up all these additions with a git commit command. Please ensure that you commit with a descriptive message of changes etc.   git commit -m \"Tweaked some specs in specs_diagram_network.md. Updated the Glossary with more terms. Made new Building Giant Robots page. I love big robots. Added new files and titles to mkdocs.yml \"",
            "title": "Git commit with message"
        },
        {
            "location": "/05_developer_docs/dev_documentation_editing_local/#git-push-to-isle-github-repository",
            "text": "git push origin githubusername-docs-fix2",
            "title": "Git push to ISLE Github repository"
        },
        {
            "location": "/05_developer_docs/dev_documentation_editing_local/#create-a-pull-request-on-isle-githubcom-repo",
            "text": "In order for the ISLE Maintainers to review suggested changes a \"pull request\" will need to be created. This process is a way for Maintainers to see a summary of the suggested changes to be made with any helpful comments and a catalog of potential differences between the original files and the new ones.  If you run into trouble, this Github.com support page may be of use:  https://help.github.com/articles/creating-a-pull-request/    On GitHub, navigate to the main page of the ISLE-Documentation repository.    In the \"Branch\" menu, choose the branch that contains your commits e.g.  githubusername-docs-fix2    To the right of the Branch menu, click  New pull request .    Use the base branch dropdown menu to select the branch you'd like to merge your changes into ( master ), then use the compare branch drop-down menu to choose the topic branch you made your changes in.( githubusername-docs-fix2 )    base:master  <---  compare:githubusername-docs-fix2    Type a title and description for your pull request.    Click the green  Create pull request  button at the bottom.    This pull request should now appear in the  Pull Requests  section of the ISLE Repo, ready for review, commentary or inclusion by the ISLE Maintainers.",
            "title": "Create a pull request on ISLE Github.com repo"
        },
        {
            "location": "/05_developer_docs/dev_documentation_mkdocs/",
            "text": "Assumptions / Prerequisites\n\n\n\n\nPython 2.7+ or higher is installed on the enduser's laptop / workstation\n\n\nThe ISLE Documentation project directory has been cloned to the enduser's laptop / workstation in an appropriate Code or Project Directory.\n\n\ngit clone https://github.com/Islandora-Collaboration-Group/ISLE-Documentation.git\n\n\nFamiliarity or comfortability with git and cli commands.\n\n\n\n\nStep 1. Install mkdocs\n\n\n\n\nPlease follow the instructions found here: \nhttp://www.mkdocs.org/#installation\n\n\n\n\nExample: (All OS)\n\n\n\n\nsudo -H pip install mkdocs\n\n\n\n\n\n\nStep 2. Install the mkdocs-material theme\n\n\nThe ISLE Documentation Theme can be found here: \nhttps://github.com/squidfunk/mkdocs-material\n\n\nExample: (All OS)\n\n\n\n\nsudo -H pip install mkdocs-material\n\n\n\n\n\n\nStep 3. Run the mkdocs software\n\n\n\n\nOpen a terminal and \ncd to pathto/ISLE-Documentation project directory\n\n\nmkdocs serve\n\n\n\n\nINFO    -  Building documentation...\nINFO    -  Cleaning site directory\n[I 180310 15:50:39 server:283] Serving on http://127.0.0.1:8000\n[I 180310 15:50:39 handlers:60] Start watching changes\n[I 180310 15:50:39 handlers:62] Start detecting changes\n[I 180310 15:50:42 handlers:133] Browser Connected: http://127.0.0.1:8000/\n\n\n\n\n\n\nOpen up a browser and navigate to \nhttp://127.0.0.1:8000/\n\n\nIt is critical for this terminal to keep running\n\n\nas mkdocs will report file changes and any potential issues.\n\n\nTo review changes in real time via the browser\n\n\n\n\n\n\nUse the terminal output for debugging issues or missing files, links etc.\n\n\nTo stop \nmkdocs\n, click the \nCntrl\n and \nc\n key at the same time. \n(Cntrl-C)",
            "title": "Installing Mkdocs"
        },
        {
            "location": "/05_developer_docs/dev_documentation_mkdocs/#assumptions-prerequisites",
            "text": "Python 2.7+ or higher is installed on the enduser's laptop / workstation  The ISLE Documentation project directory has been cloned to the enduser's laptop / workstation in an appropriate Code or Project Directory.  git clone https://github.com/Islandora-Collaboration-Group/ISLE-Documentation.git  Familiarity or comfortability with git and cli commands.",
            "title": "Assumptions / Prerequisites"
        },
        {
            "location": "/05_developer_docs/dev_documentation_mkdocs/#step-1-install-mkdocs",
            "text": "Please follow the instructions found here:  http://www.mkdocs.org/#installation   Example: (All OS)   sudo -H pip install mkdocs",
            "title": "Step 1. Install mkdocs"
        },
        {
            "location": "/05_developer_docs/dev_documentation_mkdocs/#step-2-install-the-mkdocs-material-theme",
            "text": "The ISLE Documentation Theme can be found here:  https://github.com/squidfunk/mkdocs-material  Example: (All OS)   sudo -H pip install mkdocs-material",
            "title": "Step 2. Install the mkdocs-material theme"
        },
        {
            "location": "/05_developer_docs/dev_documentation_mkdocs/#step-3-run-the-mkdocs-software",
            "text": "Open a terminal and  cd to pathto/ISLE-Documentation project directory  mkdocs serve   INFO    -  Building documentation...\nINFO    -  Cleaning site directory\n[I 180310 15:50:39 server:283] Serving on http://127.0.0.1:8000\n[I 180310 15:50:39 handlers:60] Start watching changes\n[I 180310 15:50:39 handlers:62] Start detecting changes\n[I 180310 15:50:42 handlers:133] Browser Connected: http://127.0.0.1:8000/   Open up a browser and navigate to  http://127.0.0.1:8000/  It is critical for this terminal to keep running  as mkdocs will report file changes and any potential issues.  To review changes in real time via the browser    Use the terminal output for debugging issues or missing files, links etc.  To stop  mkdocs , click the  Cntrl  and  c  key at the same time.  (Cntrl-C)",
            "title": "Step 3. Run the mkdocs software"
        },
        {
            "location": "/05_developer_docs/dev_about_maintainers/",
            "text": "",
            "title": "About Maintainers"
        },
        {
            "location": "/05_developer_docs/dev_about_project/",
            "text": "",
            "title": "About Project"
        },
        {
            "location": "/05_developer_docs/dev_release_process/",
            "text": "",
            "title": "Release process"
        },
        {
            "location": "/05_developer_docs/dev_example_user_story/",
            "text": "",
            "title": "Example User Story"
        },
        {
            "location": "/05_developer_docs/dev_policies/",
            "text": "",
            "title": "Policies"
        },
        {
            "location": "/05_developer_docs/dev_build_guide/",
            "text": "",
            "title": "Build Guide"
        },
        {
            "location": "/05_developer_docs/dev_testing_guide/",
            "text": "",
            "title": "Testing Guide"
        },
        {
            "location": "/05_developer_docs/dev_push_images_dockerhub/",
            "text": "",
            "title": "Pushing images to Dockerhub Guide"
        },
        {
            "location": "/05_developer_docs/dev_announcements_releases/",
            "text": "",
            "title": "Announcements of new releases"
        },
        {
            "location": "/05_developer_docs/dev_ansible_guide/",
            "text": "You have the choice of using Ansible to deploy the Docker Host server dependencies instead of performing manual commands on either a CentOS or Ubuntu OS. The Ansible script and configuration files can be found in the root folder of the ISLE git repo in a directory named \nansible\n. Additionally, the Ansible script is designed to detect the chosen operating system and then install the appropriate dependencies with minimal user interaction or prior configuration.\n\n\nAnsible is an free open source automation platform / tool which runs on Linux, Mac or BSD, doesn\u2019t use local or remote agents and is relatively easy to setup. Ansible can help with server configuration management, application deployment, task automation and IT orchestration (\nrunning tasks in sequence on several different servers or devices\n).\n\n\nIf you are not familiar with the Ansible, it is recommended to start with their documentation.\n\n\n\n\nAnsible website\n\n\nWhat is Ansible?\n\n\nAnsible Documentation\n\n\n\n\nNotes:\n\n\n\n\n\n\nFor MacOS users using a local ISLE Host VM on their laptop or workstation, please scroll down to line \n395\n the section called\n\nUsing Ansible on MacOS\n.\n\n\n\n\n\n\nWindows sadly as of yet \ncannot be used\n as a Ansible control machine  \n\n\n\n\n\n\nDo not use this script if running \nDocker for Mac\n or \nDocker for Windows\n as the dependencies are not required.\n\n\n\n\n\n\nThis script can be used with the supplied Vagrant profiles (Ubuntu or CentOS) found within the \nvagrant\n directory of the ISLE repo.\n\n\n\n\n\n\nPrerequisites / Assumptions\n\n\n\n\n\n\nFamiliarity or knowledge of Ansible\n\n\n\n\n\n\nAnsible control workstation, laptop or server that runs only MacOs, BSD or Linux with the following:\n\n\n\n\nAnsible 2.2+\n (choice of \ninstall methods\n)\n\n\nopenssh\n (2.2.x+)\n\n\ngit\n (2.15.1+)\n\n\npython\n (2.7+)\n\n\nThe \nISLE project repository\n cloned to an appropriate location.\n\n\n\n\n\n\n\n\nA previously created ISLE Host Server running either of these operating systems:\n\n\n\n\nUbuntu 16.04 LTS\n\n\nCentOS 7   \n\n\n\n\n\n\n\n\nAn account with ssh access to the ISLE Host Server\n\n\n\n\n\n\nAn account with password-less sudo access on the ISLE Host Server\n\n\n\n\n\n\nThe IP of the ISLE Host server\n\n\n\n\n\n\n\n\nAnsible Deploy Script Explanation\n\n\nWithin the \ndocker_install.yml\n Ansible playbook, there are the following roles which perform different actions or cause different events on the ISLE Host server.\n\n\n\n\n\n\n\n\nAnsible Role\n\n\nAction / Event\n\n\n\n\n\n\n\n\n\n\ndependencies\n\n\nInstalls software dependencies & tools as described above\n\n\n\n\n\n\nusers_groups\n\n\nAdds users, groups and updates permissions as described above\n\n\n\n\n\n\ndocker\n\n\nInstalls Docker\n\n\n\n\n\n\ndocker_compose\n\n\nInstalls Docker Compose\n\n\n\n\n\n\ngit_clone\n\n\nClones the current ISLE git repository to \n/opt/ISLE\n\n\n\n\n\n\ndocker_images\n\n\nPulls down the latest ISLE Docker Images from Dockerhub.com\n\n\n\n\n\n\n\n\nInstalls software dependencies & tools including:\n\n\nThe Ansible script will deploy the following to the ISLE Host server:\n\n\n\n\n\n\n\n\nUbuntu / Debian\n\n\nCentOS\n\n\n\n\n\n\n\n\n\n\nsoftware-properties-common\n\n\nlibselinux-python\n\n\n\n\n\n\npython-software-properties\n\n\nlibsemanage-python\n\n\n\n\n\n\n--\n\n\nyum-utils\n\n\n\n\n\n\nntp\n\n\nntp\n\n\n\n\n\n\nopenssh-client\n\n\nopenssh-clients\n\n\n\n\n\n\nrsync\n\n\nrsync\n\n\n\n\n\n\ncurl\n\n\ncurl\n\n\n\n\n\n\nwget\n\n\nwget\n\n\n\n\n\n\ngit\n\n\ngit\n\n\n\n\n\n\nzip\n\n\nzip\n\n\n\n\n\n\nunzip\n\n\nunzip\n\n\n\n\n\n\nvim\n\n\nvim\n\n\n\n\n\n\nnano\n\n\nnano\n\n\n\n\n\n\nemacs24-nox\n\n\nemacs\n\n\n\n\n\n\nhtop\n\n\nhtop\n\n\n\n\n\n\napt-transport-https\n\n\n--\n\n\n\n\n\n\nca-certificates\n\n\n--\n\n\n\n\n\n\n\n\nMakes ISLE Host service changes\n\n\nPlease Note:\n \nAny of these services can be re-enabled post installation see appropriate documentation for opening ports on firewalls etc.\n\n\n\n\n\n\n\n\nUbuntu / Debian\n\n\nCentOS\n\n\n\n\n\n\n\n\n\n\nenables ntp service\n\n\nenables ntp service\n\n\n\n\n\n\ndisables ufw\n\n\ndisables iptables\n\n\n\n\n\n\n--\n\n\nsets selinux to permissive\n\n\n\n\n\n\n\n\nAdds users, groups and updates permissions\n\n\n\n\nCreates the \nislandora\n user\n\n\nAlong with an appropriate password\n\n\ngenerates a ssh key\n\n\nbestows sudo password-less access\n\n\n\n\nGives the \nislandora\n user the ability to run Docker & Docker Compose by adding the account to the Docker group.  \n\n\n\n\n\n\nDisables \nroot\n user access via ssh\n\n\n\n\nDisables use of passwords with ssh.\n\n\nkey based access only to the ISLE Host server\n\n\n\n\nInstalls additional software\n\n\n\n\n\n\nDocker\n\n\n\n\n\n\nDocker Compose\n\n\n\n\n\n\nGit clones the ISLE repo to \n/opt/ISLE\n\n\n\n\n\n\nPulls down the most recent ISLE images\n\n\n\n\n\n\nAnsible script directory structure\n\n\nansible\n\u251c\u2500\u2500 docker_install.yml\n\u251c\u2500\u2500 host_vars\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 host_local_macos_isle_localdomain.yml\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 isle-prod-project.institution.yml\n\u251c\u2500\u2500 inventory\n\u2514\u2500\u2500 roles\n    \u251c\u2500\u2500 dependencies\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 ubuntu.yml\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 main.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 centos.yml\n    \u251c\u2500\u2500 docker\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 install.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 main.yml\n    \u251c\u2500\u2500 docker_compose\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 install.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 main.yml\n    \u251c\u2500\u2500 docker_images\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 images_pull.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 main.yml\n    \u251c\u2500\u2500 git_clone\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 git_clone.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 main.yml\n    \u2514\u2500\u2500 users_groups\n        \u251c\u2500\u2500 files\n        \u2502\u00a0\u00a0 \u2514\u2500\u2500 islandora\n        \u2514\u2500\u2500 tasks\n            \u251c\u2500\u2500 groups.yml\n            \u251c\u2500\u2500 main.yml\n            \u251c\u2500\u2500 secure.yml\n            \u251c\u2500\u2500 ssh.yml\n            \u2514\u2500\u2500 users.yml\n\n\n\n\nConfigure Ansible Script to deploy to ISLE Host\n\n\nTo configure the Ansible script to deploy to one's institutional ISLE Host Server, please review and edit the following files within the \nansible\n directory.\n\n\n\n\nansible/docker_install.yml\n\n\nansible/inventory\n\n\nansible/host_vars/isle-prod-project.institution.yml\n\n\n\n\nBasically wherever \nisle-prod-project.institution\n appears as a value in these three files, please replace with the appropriate ISLE Host server fully qualified domain name (\nfqdn\n) e.g. \nyourislesite.institution.com\n\n\nOne can open up and edit all files in a text editor e.g. Atom, Textedit, Textwrangler etc.\n\n\nansible/docker_install.yml\n\n\nThis is the Ansible playbook necessary to deploy software to the ISLE host server.\n\n\n\n\nAt the top of the file remove \nisle-prod-project.institution\n and replace with the appropriate \nfqdn\n.  \n\n\n\n\nansible/inventory.yml\n\n\nThis is the possible list of server(s) to deploy to using Ansible and its associated playbook(s).\n\n\nPlease Note:\n These instructions below are repeated within the file itself.\n\n\n\n\n\n\nLine 7: remove \nisle-prod-project.institution\n from in between the brackets and replace with the appropriate \nfqdn\n\n\n\n\n\n\nLine 8: Add the appropriate ISLE Host server user account that has \nsudo\n passwordless permissions to the end of \nansible_ssh_user=\n\n\nExample\n: \nansible_ssh_user=janesmith\n\n\n\n\n\n\nLine 8: Add the appropriate path to this ISLE Host Server user accounts public ssh key to the end of \nansible_ssh_private_key_file=\n\n\n\n\n\n\nExample\n of inventory using settings for local Ansible deploy laptop:\n\n\n\n\n\n\nansible_ssh_private_key_file=/home/janesmith/.ssh/id_rsa.pub\n\n\n\n\nPlease Note:\n This key is typically found on the local control (Ansible deploy laptop / workstation) system and should have been previously copied to the appropriate ISLE Host server user account's \n/home/islehostserver_user/.ssh/authorized_keys\n file.\n\n\n\n\nFinal Example\n end result for inventory file with all settings above\n\n\n\n\n[yourislesite.institution.com]   \nyourislesite.institution.com ansible_connection=ssh ansible_ssh_user=janesmith ansible_ssh_private_key_file=/home/janesmith/.ssh/id_rsa.pub\n\n\n\n\nansible/isle-prod-project.institution.yml\n\n\n\n\n\n\nCopy this file and rename the copy to with the appropriate \nfqdn\n\n\n\n\n\n\nExample\n of how \nhost_vars\n directory should now contain two files:  \n\n\n\n\n\n\nansible\n\u251c\u2500\u2500 docker_install.yml\n\u251c\u2500\u2500 host_vars\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 isle-prod-project.institution.yml\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 yourislesite.institution.com.yml\n\u251c\u2500\u2500 inventory\n\u2514\u2500\u2500 roles\n\n\n\n\n\n\n\n\nEdit the following lines within the newly created file i.e. \nyourislesite.institution.com.yml\n and remove the comments (#) as asked\n\n\n\n\n\n\nPlease Note:\n \nThe \nfqdn\n in the \ninventory\n file should match this filename as well.\n\n\n\n\n\n\nExamples ONLY\n (\nDo not enter these literal values\n)  \n\n\n\n\n\n\nLine 9: \nansible_ssh_host: 192.168.1.16\n\n\n\n\nThis is the IP address of the ISLE Host server\n\n\n\n\n\n\n\n\nLine 10: \nansible_ssh_user: janesmith\n  \n\n\n\n\nThis is the appropriate ISLE Host server user account that has \nsudo\n passwordless permissions.\n\n\n\n\n\n\n\n\nLine 15: \npub_locale: /home/janesmith/.ssh/id_rsa.pub\n\n\n\n\nThis is the key found on the local control (Ansible deploy laptop / workstation) system which has been previously copied to the appropriate ISLE Host server user account's \n/home/islehostserver_user/.ssh/authorized_keys\n file.\n\n\n\n\n\n\n\n\n\n\nAnsible commands to test connection\n\n\n\n\nTest if the Ansible control laptop / workstation can connect to the ISLE Host server by running these commands. On the local Ansible control laptop / workstation, open a terminal window and enter the following:\n\n\n\n\ncd /path/to/ISLE/repo/ansible\n\nansible -i inventory isle-host-server -m ping\n\n\n\n\n\n\nExample\n output of above command (\nIGNORE THE WARNING\n)\n\n\n\n\n[WARNING]: Found both group and host with same name: isle-host-server   \n\nisle-host-server | SUCCESS => {\n     \"changed\": false,\n     \"ping\": \"pong\"\n   }\n\n\n\n\nPlease Note:\n \nIf SUCCESS doesn't appear as a value or if the wording of the prompt is in RED with \"host doesn't exist ...\", review all steps above and check the settings. Do not advance until the \nExample\n output above matches.\n  \n\n\nAnsible commands for deploy\n\n\n\n\n\n\nTo deploy to the ISLE Host Server, run this command.\n\n\nansible-playbook -i inventory docker_install.yml\n\n\n\n\n\n\nAnsible will start displaying output within the terminal. If any turn red and the script terminates, please review the above settings and connectivity to the server. Attempt to rerun the script.\n\n\nQC Review checklist\n\n\nTo ensure a successful deploy to the ISLE Server, please review the following to ensure that the deploy to the Islandora Host server was successful.\n\n\nOpen a terminal window on the Ansible control laptop /workstation and \nssh\n into the Islandora Host server using the appropriate enduser account setup prior to the deploy.\n\n\nExample\n:\n\n\nssh enduser@isle-prod-project.institution\n\n\n\n\nDocker\n\n\n\n\n\n\nTo check where Docker has been installed to, enter:  \n\n\nwhich docker\n    \n\n\nExample\n output:      \n\n\n/usr/bin/docker\n\n\n\n\n\n\nTo check which version of Docker has been installed, enter:\n\n\ndocker --version\n\n\nExample\n output:\n\n\nDocker version 17.12.0-ce, build c97c6d6\n\n\n\n\n\n\nTo check if Docker is running, enter:\n\n\nservice docker status\n   \n\n\nExample\n output:\n\n\n\n\n\n\nRedirecting to /bin/systemctl status docker.service\n\u25cf docker.service - Docker Application Container Engine\n  Loaded: loaded (/usr/lib/systemd/system/docker.service; enabled; vendor preset: disabled)\n  Active: active (running) since Thu 2018-03-18 14:36:55 EST; 1 weeks 4 days ago\n    Docs: https://docs.docker.com\nMain PID: 23066 (dockerd)\n  Memory: 55.3M\n....\n\n\n\n\n\n\n\n\nTo check if the ISLE images have been downloaded on the ISLE Host server, enter:\n\n\ndocker image ls\n\n\nExample\n output:  \n\n\n\n\n\n\nREPOSITORY                         TAG                 IMAGE ID            CREATED             SIZE\nislandoracollabgroup/isle-fedora   latest              6e2749ca2c2f        2 weeks ago         2.43GB\nislandoracollabgroup/isle-apache   latest              82fe4ae16932        2 weeks ago         2.18GB\nislandoracollabgroup/isle-solr     latest              7fba26c10433        2 weeks ago         784MB\nislandoracollabgroup/isle-mysql    latest              f34162f1e0f8        2 weeks ago         299MB\nislandoracollabgroup/isle-proxy    latest              5gdc45f1a074        2 weeks ago         199MB\n\n\n\n\nDocker Compose\n\n\n\n\n\n\nTo check where Docker-compose has been installed to, enter:  \n\n\nwhich docker-compose\n\n\nExample\n output:\n\n\n/usr/local/bin/docker-compose\n\n\n\n\n\n\nTo check which version of Docker-compose has been installed, enter:\n\n\ndocker-compose -version\n\n\nExample\n output:\n\n\ndocker-compose version 1.20.1, build 1719ceb\n\n\n\n\n\n\nIslandora user\n\n\n\n\n\n\nTo check if the \nislandora\n user has been created, enter:\n\n\ncat /etc/passwd\n  \n\n\nExample\n output:\n\n\nislandora:x:1002:1002::/home/islandora:/bin/bash\n\n\n\n\n\n\nISLE Project directory\n\n\n\n\n\n\nTo check if the ISLE project git repo has been cloned to \n/opt/ISLE\n, enter:\n\n\nls -lh /opt/ISLE\n\n\nExample\n output:\n\n\n\n\n\n\ntotal 24K\ndrwxr-xr-x. 3 islandora islandora  110 Jan 17 09:17 apache\ndrwxr-xr-x. 5 islandora islandora   84 Jan 23 13:44 config\n-rwxr-xr-x. 1 islandora islandora 2.0K Jan 18 16:58 docker-compose.yml\ndrwxr-xr-x. 7 islandora islandora  143 Jan 17 09:17 docs\ndrwxr-xr-x. 7 islandora islandora  102 Jan 17 09:17 fedora\n-rwxr-xr-x. 1 islandora islandora  12K Jan 17 09:17 mkdocs.yml\ndrwxr-xr-x. 3 islandora islandora   54 Jan 17 09:17 mysql\ndrwxr-xr-x. 3 islandora islandora   54 Jan 17 09:17 proxy\n-rwxr-xr-x. 1 islandora islandora 4.1K Jan 17 09:17 README.md\ndrwxr-xr-x. 4 islandora islandora   50 Jan 17 09:17 solr\n\n\n\n\nOnce this script has finished one can:\n\n\n\n\n\n\nAdd any appropriate public ssh keys to \n/home/islandora/.ssh/authorized_keys\n prior to attempting to ssh to the Islandora Host server as the \nislandora\n user.\n\n\n\n\n\n\nAdd the \n/home/islandora/.ssh/id_rsa.pub\n key to any git repository contained within the Migration Guide. (Additional instructions appear in that guide if this process is unfamiliar.)\n\n\n\n\n\n\nProceed to bottom of this page for next steps.\n\n\n\n\nWalkthrough: Using Ansible on a MacOS control machine\n\n\n\n\n\n\nTo install \nAnsible\n on the enduser's MacOS laptop / workstation.\n\n\n\n\n\n\nInstall Ansible via Python pip\n\n\n\n\nFollow here \nhttp://docs.ansible.com/ansible/latest/intro_installation.html#latest-releases-via-pip\n\n\n\n\n\n\n\n\nOr install Ansible via Homebrew (better)\n\n\n\n\n/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n\n\nbrew install ansible\n\n\n\n\n\n\n\n\n\n\n\n\nThere is a ready made Ansible script for the MacOS hosted isle.localdomain called \nansible/host_vars/host_local_macos_isle_localdomain.yml\n\n\n\n\n\n\nUse \nvagrant\n for the \nansible_ssh_user=\n value in the \nansible/inventory\n file\n\n\n\n\n\n\nUse \n~/Users/enduser/.vagrant.d/insecure_private_key\n for the \nansible_ssh_private_key_file\n value in the \nansible/inventory\n file\n\n\n\n\n\n\n\n\n\n\nExample\n\n\n[host_local_macos_isle_localdomain]\nhost_local_macos_isle_localdomain ansible_connection=ssh ansible_ssh_user=vagrant ansible_ssh_private_key_file=/Users/enduser/.vagrant.d/insecure_private_key\n\n\n\n\n\n\n\n\nLine 13\n in the \nansible/host_vars/host_local_macos_isle_localdomain.yml\n file will need to be edited with the correct path to the enduser's id_rsa.pub  file. Change the \nenduser\n value to the real username. (\nassumes the\n \nid_rsa.pub\n \nfile exists!\n)\n\n\n\n\n\n\nLine 3\n in the \nansible/docker_install.yml\n file will need to be edited, change the value of \nisle-prod-project.institution\n to \nhost_local_macos_isle_localdomain\n\n\n\n\n\n\nOnce these files have been edited, open a terminal and enter:\n\n\n\n\ncd path_to/ISLE/ansible/\n\n\n\n\n\n\n\n\nTest the connection to the ISLE Host Vagrant Ubuntu VM\n\n\n\n\nansible -i inventory host_local_macos_isle_localdomain -m ping\n\n\n\n\n\n\n\n\nExample\n output of above command (\nIGNORE THE WARNING\n)\n\n\n[WARNING]: Found both group and host with same name: host_local_macos_isle_localdomain   \nhost_local_macos_isle_localdomain | SUCCESS => {\n   \"changed\": false,\n   \"ping\": \"pong\"\n }\n\n\n\n\nPlease Note:\n \nIf SUCCESS doesn't appear as a value or if the wording of the prompt is in RED with \"host doesn't exist ...\", review all steps above and check the settings. Do not advance until the \nExample\n output above matches.\n  \n\n\n\n\nTo deploy to the ISLE Host Server, run this command.\n\n\n\n\nansible-playbook -i inventory docker_install.yml\n\n\nAnsible will start displaying output within the terminal. If any turn red and the script terminates, please review the above settings and connectivity to the server. Attempt to rerun the script.",
            "title": "Ansible Guide"
        },
        {
            "location": "/05_developer_docs/dev_ansible_guide/#prerequisites-assumptions",
            "text": "Familiarity or knowledge of Ansible    Ansible control workstation, laptop or server that runs only MacOs, BSD or Linux with the following:   Ansible 2.2+  (choice of  install methods )  openssh  (2.2.x+)  git  (2.15.1+)  python  (2.7+)  The  ISLE project repository  cloned to an appropriate location.     A previously created ISLE Host Server running either of these operating systems:   Ubuntu 16.04 LTS  CentOS 7        An account with ssh access to the ISLE Host Server    An account with password-less sudo access on the ISLE Host Server    The IP of the ISLE Host server",
            "title": "Prerequisites / Assumptions"
        },
        {
            "location": "/05_developer_docs/dev_ansible_guide/#ansible-deploy-script-explanation",
            "text": "Within the  docker_install.yml  Ansible playbook, there are the following roles which perform different actions or cause different events on the ISLE Host server.     Ansible Role  Action / Event      dependencies  Installs software dependencies & tools as described above    users_groups  Adds users, groups and updates permissions as described above    docker  Installs Docker    docker_compose  Installs Docker Compose    git_clone  Clones the current ISLE git repository to  /opt/ISLE    docker_images  Pulls down the latest ISLE Docker Images from Dockerhub.com",
            "title": "Ansible Deploy Script Explanation"
        },
        {
            "location": "/05_developer_docs/dev_ansible_guide/#installs-software-dependencies-tools-including",
            "text": "The Ansible script will deploy the following to the ISLE Host server:     Ubuntu / Debian  CentOS      software-properties-common  libselinux-python    python-software-properties  libsemanage-python    --  yum-utils    ntp  ntp    openssh-client  openssh-clients    rsync  rsync    curl  curl    wget  wget    git  git    zip  zip    unzip  unzip    vim  vim    nano  nano    emacs24-nox  emacs    htop  htop    apt-transport-https  --    ca-certificates  --",
            "title": "Installs software dependencies &amp; tools including:"
        },
        {
            "location": "/05_developer_docs/dev_ansible_guide/#makes-isle-host-service-changes",
            "text": "Please Note:   Any of these services can be re-enabled post installation see appropriate documentation for opening ports on firewalls etc.     Ubuntu / Debian  CentOS      enables ntp service  enables ntp service    disables ufw  disables iptables    --  sets selinux to permissive",
            "title": "Makes ISLE Host service changes"
        },
        {
            "location": "/05_developer_docs/dev_ansible_guide/#adds-users-groups-and-updates-permissions",
            "text": "Creates the  islandora  user  Along with an appropriate password  generates a ssh key  bestows sudo password-less access   Gives the  islandora  user the ability to run Docker & Docker Compose by adding the account to the Docker group.      Disables  root  user access via ssh   Disables use of passwords with ssh.  key based access only to the ISLE Host server",
            "title": "Adds users, groups and updates permissions"
        },
        {
            "location": "/05_developer_docs/dev_ansible_guide/#installs-additional-software",
            "text": "Docker    Docker Compose    Git clones the ISLE repo to  /opt/ISLE    Pulls down the most recent ISLE images",
            "title": "Installs additional software"
        },
        {
            "location": "/05_developer_docs/dev_ansible_guide/#ansible-script-directory-structure",
            "text": "ansible\n\u251c\u2500\u2500 docker_install.yml\n\u251c\u2500\u2500 host_vars\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 host_local_macos_isle_localdomain.yml\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 isle-prod-project.institution.yml\n\u251c\u2500\u2500 inventory\n\u2514\u2500\u2500 roles\n    \u251c\u2500\u2500 dependencies\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 ubuntu.yml\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 main.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 centos.yml\n    \u251c\u2500\u2500 docker\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 install.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 main.yml\n    \u251c\u2500\u2500 docker_compose\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 install.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 main.yml\n    \u251c\u2500\u2500 docker_images\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 images_pull.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 main.yml\n    \u251c\u2500\u2500 git_clone\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 git_clone.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 main.yml\n    \u2514\u2500\u2500 users_groups\n        \u251c\u2500\u2500 files\n        \u2502\u00a0\u00a0 \u2514\u2500\u2500 islandora\n        \u2514\u2500\u2500 tasks\n            \u251c\u2500\u2500 groups.yml\n            \u251c\u2500\u2500 main.yml\n            \u251c\u2500\u2500 secure.yml\n            \u251c\u2500\u2500 ssh.yml\n            \u2514\u2500\u2500 users.yml",
            "title": "Ansible script directory structure"
        },
        {
            "location": "/05_developer_docs/dev_ansible_guide/#configure-ansible-script-to-deploy-to-isle-host",
            "text": "To configure the Ansible script to deploy to one's institutional ISLE Host Server, please review and edit the following files within the  ansible  directory.   ansible/docker_install.yml  ansible/inventory  ansible/host_vars/isle-prod-project.institution.yml   Basically wherever  isle-prod-project.institution  appears as a value in these three files, please replace with the appropriate ISLE Host server fully qualified domain name ( fqdn ) e.g.  yourislesite.institution.com  One can open up and edit all files in a text editor e.g. Atom, Textedit, Textwrangler etc.",
            "title": "Configure Ansible Script to deploy to ISLE Host"
        },
        {
            "location": "/05_developer_docs/dev_ansible_guide/#ansibledocker_installyml",
            "text": "This is the Ansible playbook necessary to deploy software to the ISLE host server.   At the top of the file remove  isle-prod-project.institution  and replace with the appropriate  fqdn .",
            "title": "ansible/docker_install.yml"
        },
        {
            "location": "/05_developer_docs/dev_ansible_guide/#ansibleinventoryyml",
            "text": "This is the possible list of server(s) to deploy to using Ansible and its associated playbook(s).  Please Note:  These instructions below are repeated within the file itself.    Line 7: remove  isle-prod-project.institution  from in between the brackets and replace with the appropriate  fqdn    Line 8: Add the appropriate ISLE Host server user account that has  sudo  passwordless permissions to the end of  ansible_ssh_user=  Example :  ansible_ssh_user=janesmith    Line 8: Add the appropriate path to this ISLE Host Server user accounts public ssh key to the end of  ansible_ssh_private_key_file=    Example  of inventory using settings for local Ansible deploy laptop:    ansible_ssh_private_key_file=/home/janesmith/.ssh/id_rsa.pub  Please Note:  This key is typically found on the local control (Ansible deploy laptop / workstation) system and should have been previously copied to the appropriate ISLE Host server user account's  /home/islehostserver_user/.ssh/authorized_keys  file.   Final Example  end result for inventory file with all settings above   [yourislesite.institution.com]   \nyourislesite.institution.com ansible_connection=ssh ansible_ssh_user=janesmith ansible_ssh_private_key_file=/home/janesmith/.ssh/id_rsa.pub",
            "title": "ansible/inventory.yml"
        },
        {
            "location": "/05_developer_docs/dev_ansible_guide/#ansibleisle-prod-projectinstitutionyml",
            "text": "Copy this file and rename the copy to with the appropriate  fqdn    Example  of how  host_vars  directory should now contain two files:      ansible\n\u251c\u2500\u2500 docker_install.yml\n\u251c\u2500\u2500 host_vars\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 isle-prod-project.institution.yml\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 yourislesite.institution.com.yml\n\u251c\u2500\u2500 inventory\n\u2514\u2500\u2500 roles    Edit the following lines within the newly created file i.e.  yourislesite.institution.com.yml  and remove the comments (#) as asked    Please Note:   The  fqdn  in the  inventory  file should match this filename as well.    Examples ONLY  ( Do not enter these literal values )      Line 9:  ansible_ssh_host: 192.168.1.16   This is the IP address of the ISLE Host server     Line 10:  ansible_ssh_user: janesmith      This is the appropriate ISLE Host server user account that has  sudo  passwordless permissions.     Line 15:  pub_locale: /home/janesmith/.ssh/id_rsa.pub   This is the key found on the local control (Ansible deploy laptop / workstation) system which has been previously copied to the appropriate ISLE Host server user account's  /home/islehostserver_user/.ssh/authorized_keys  file.",
            "title": "ansible/isle-prod-project.institution.yml"
        },
        {
            "location": "/05_developer_docs/dev_ansible_guide/#ansible-commands-to-test-connection",
            "text": "Test if the Ansible control laptop / workstation can connect to the ISLE Host server by running these commands. On the local Ansible control laptop / workstation, open a terminal window and enter the following:   cd /path/to/ISLE/repo/ansible\n\nansible -i inventory isle-host-server -m ping   Example  output of above command ( IGNORE THE WARNING )   [WARNING]: Found both group and host with same name: isle-host-server   \n\nisle-host-server | SUCCESS => {\n     \"changed\": false,\n     \"ping\": \"pong\"\n   }  Please Note:   If SUCCESS doesn't appear as a value or if the wording of the prompt is in RED with \"host doesn't exist ...\", review all steps above and check the settings. Do not advance until the  Example  output above matches.",
            "title": "Ansible commands to test connection"
        },
        {
            "location": "/05_developer_docs/dev_ansible_guide/#ansible-commands-for-deploy",
            "text": "To deploy to the ISLE Host Server, run this command.  ansible-playbook -i inventory docker_install.yml    Ansible will start displaying output within the terminal. If any turn red and the script terminates, please review the above settings and connectivity to the server. Attempt to rerun the script.",
            "title": "Ansible commands for deploy"
        },
        {
            "location": "/05_developer_docs/dev_ansible_guide/#qc-review-checklist",
            "text": "To ensure a successful deploy to the ISLE Server, please review the following to ensure that the deploy to the Islandora Host server was successful.  Open a terminal window on the Ansible control laptop /workstation and  ssh  into the Islandora Host server using the appropriate enduser account setup prior to the deploy.  Example :  ssh enduser@isle-prod-project.institution",
            "title": "QC Review checklist"
        },
        {
            "location": "/05_developer_docs/dev_ansible_guide/#docker",
            "text": "To check where Docker has been installed to, enter:    which docker       Example  output:        /usr/bin/docker    To check which version of Docker has been installed, enter:  docker --version  Example  output:  Docker version 17.12.0-ce, build c97c6d6    To check if Docker is running, enter:  service docker status      Example  output:    Redirecting to /bin/systemctl status docker.service\n\u25cf docker.service - Docker Application Container Engine\n  Loaded: loaded (/usr/lib/systemd/system/docker.service; enabled; vendor preset: disabled)\n  Active: active (running) since Thu 2018-03-18 14:36:55 EST; 1 weeks 4 days ago\n    Docs: https://docs.docker.com\nMain PID: 23066 (dockerd)\n  Memory: 55.3M\n....    To check if the ISLE images have been downloaded on the ISLE Host server, enter:  docker image ls  Example  output:      REPOSITORY                         TAG                 IMAGE ID            CREATED             SIZE\nislandoracollabgroup/isle-fedora   latest              6e2749ca2c2f        2 weeks ago         2.43GB\nislandoracollabgroup/isle-apache   latest              82fe4ae16932        2 weeks ago         2.18GB\nislandoracollabgroup/isle-solr     latest              7fba26c10433        2 weeks ago         784MB\nislandoracollabgroup/isle-mysql    latest              f34162f1e0f8        2 weeks ago         299MB\nislandoracollabgroup/isle-proxy    latest              5gdc45f1a074        2 weeks ago         199MB",
            "title": "Docker"
        },
        {
            "location": "/05_developer_docs/dev_ansible_guide/#docker-compose",
            "text": "To check where Docker-compose has been installed to, enter:    which docker-compose  Example  output:  /usr/local/bin/docker-compose    To check which version of Docker-compose has been installed, enter:  docker-compose -version  Example  output:  docker-compose version 1.20.1, build 1719ceb",
            "title": "Docker Compose"
        },
        {
            "location": "/05_developer_docs/dev_ansible_guide/#islandora-user",
            "text": "To check if the  islandora  user has been created, enter:  cat /etc/passwd     Example  output:  islandora:x:1002:1002::/home/islandora:/bin/bash",
            "title": "Islandora user"
        },
        {
            "location": "/05_developer_docs/dev_ansible_guide/#isle-project-directory",
            "text": "To check if the ISLE project git repo has been cloned to  /opt/ISLE , enter:  ls -lh /opt/ISLE  Example  output:    total 24K\ndrwxr-xr-x. 3 islandora islandora  110 Jan 17 09:17 apache\ndrwxr-xr-x. 5 islandora islandora   84 Jan 23 13:44 config\n-rwxr-xr-x. 1 islandora islandora 2.0K Jan 18 16:58 docker-compose.yml\ndrwxr-xr-x. 7 islandora islandora  143 Jan 17 09:17 docs\ndrwxr-xr-x. 7 islandora islandora  102 Jan 17 09:17 fedora\n-rwxr-xr-x. 1 islandora islandora  12K Jan 17 09:17 mkdocs.yml\ndrwxr-xr-x. 3 islandora islandora   54 Jan 17 09:17 mysql\ndrwxr-xr-x. 3 islandora islandora   54 Jan 17 09:17 proxy\n-rwxr-xr-x. 1 islandora islandora 4.1K Jan 17 09:17 README.md\ndrwxr-xr-x. 4 islandora islandora   50 Jan 17 09:17 solr  Once this script has finished one can:    Add any appropriate public ssh keys to  /home/islandora/.ssh/authorized_keys  prior to attempting to ssh to the Islandora Host server as the  islandora  user.    Add the  /home/islandora/.ssh/id_rsa.pub  key to any git repository contained within the Migration Guide. (Additional instructions appear in that guide if this process is unfamiliar.)    Proceed to bottom of this page for next steps.",
            "title": "ISLE Project directory"
        },
        {
            "location": "/05_developer_docs/dev_ansible_guide/#walkthrough-using-ansible-on-a-macos-control-machine",
            "text": "To install  Ansible  on the enduser's MacOS laptop / workstation.    Install Ansible via Python pip   Follow here  http://docs.ansible.com/ansible/latest/intro_installation.html#latest-releases-via-pip     Or install Ansible via Homebrew (better)   /usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"  brew install ansible       There is a ready made Ansible script for the MacOS hosted isle.localdomain called  ansible/host_vars/host_local_macos_isle_localdomain.yml    Use  vagrant  for the  ansible_ssh_user=  value in the  ansible/inventory  file    Use  ~/Users/enduser/.vagrant.d/insecure_private_key  for the  ansible_ssh_private_key_file  value in the  ansible/inventory  file      Example  [host_local_macos_isle_localdomain]\nhost_local_macos_isle_localdomain ansible_connection=ssh ansible_ssh_user=vagrant ansible_ssh_private_key_file=/Users/enduser/.vagrant.d/insecure_private_key    Line 13  in the  ansible/host_vars/host_local_macos_isle_localdomain.yml  file will need to be edited with the correct path to the enduser's id_rsa.pub  file. Change the  enduser  value to the real username. ( assumes the   id_rsa.pub   file exists! )    Line 3  in the  ansible/docker_install.yml  file will need to be edited, change the value of  isle-prod-project.institution  to  host_local_macos_isle_localdomain    Once these files have been edited, open a terminal and enter:   cd path_to/ISLE/ansible/     Test the connection to the ISLE Host Vagrant Ubuntu VM   ansible -i inventory host_local_macos_isle_localdomain -m ping     Example  output of above command ( IGNORE THE WARNING )  [WARNING]: Found both group and host with same name: host_local_macos_isle_localdomain   \nhost_local_macos_isle_localdomain | SUCCESS => {\n   \"changed\": false,\n   \"ping\": \"pong\"\n }  Please Note:   If SUCCESS doesn't appear as a value or if the wording of the prompt is in RED with \"host doesn't exist ...\", review all steps above and check the settings. Do not advance until the  Example  output above matches.      To deploy to the ISLE Host Server, run this command.   ansible-playbook -i inventory docker_install.yml  Ansible will start displaying output within the terminal. If any turn red and the script terminates, please review the above settings and connectivity to the server. Attempt to rerun the script.",
            "title": "Walkthrough: Using Ansible on a MacOS control machine"
        },
        {
            "location": "/06_specifications/specs_dockerfiles/",
            "text": "",
            "title": "Dockerfiles"
        },
        {
            "location": "/06_specifications/specs_docker_containers_images/",
            "text": "ISLE Image\n\n\nContainer\n\n\nSoftware / Service\n\n\nVersion\n\n\nLogs Path on Container\n\n\n\n\n\n\n\n\n\n\nislandoracollabgroup/isle-apache\n\n\nisle-apache\n\n\nDocker Tag\n\n\nlatest, 2.4\n\n\n\n\n\n\n\n\nuses the official Docker base image\n\n\n\n\nApache\n\n\n2.4\n\n\n/var/log/apache2/\n\n\n\n\n\n\nubuntu:14.04\n\n\n\n\nDjatoka\n\n\n1.1\n\n\n\n\n\n\n\n\n\n\n\n\nDrupal\n\n\n7.5x+\n\n\n\n\n\n\n\n\n\n\n\n\nIslandora\n\n\n7.x-1.1x\n\n\n\n\n\n\n\n\n\n\n\n\nOpenJDK\n\n\nJDK 8.x\n\n\n\n\n\n\n\n\n\n\n\n\nOracle Java\n\n\nJDK 8.x\n\n\n\n\n\n\n\n\n\n\n\n\nPHP\n\n\n5.6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nContainer\n\n\nSoftware / Service\n\n\nVersion\n\n\nLogs Path on Container\n\n\n\n\n\n\n\n\n\n\nisle-fedora\n\n\nDocker Tag\n\n\nlatest, 2.4\n\n\n\n\n\n\n\n\n\n\nDjatoka\n\n\n1.1\n\n\n/usr/local/tomcat/logs/djatoka.log\n\n\n\n\n\n\n\n\nDrupal filter\n\n\n3.8.1\n\n\n\n\n\n\n\n\n\n\nFedora\n\n\n3.8.1\n\n\n/usr/local/fedora/server/logs/fedora.log\n\n\n\n\n\n\n\n\nGsearch\n\n\nDG Patched (2.8.x)\n\n\n/usr/local/fedora/server/logs/fedoragsearch.daily.log\n\n\n\n\n\n\n\n\nGSearch Extensions\n\n\n0.1.3\n\n\n\n\n\n\n\n\n\n\nIslandora Transforms (XSLTs)\n\n\nlatest XSLTs from DG \nrepo\n\n\n\n\n\n\n\n\n\n\nMySQL (client)\n\n\n5.6\n\n\n\n\n\n\n\n\n\n\nOpenJDK\n\n\nJDK 8.x\n\n\n\n\n\n\n\n\n\n\nOracle Java\n\n\nJDK 8.x\n\n\n\n\n\n\n\n\n\n\nTomcat\n\n\n8.x\n\n\n/usr/local/tomcat/logs/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nContainer\n\n\nSoftware / Service\n\n\nVersion\n\n\nLogs Path on Container\n\n\n\n\n\n\n\n\n\n\nisle-mysql\n\n\nDocker Tag\n\n\nlatest, 5.6\n\n\n\n\n\n\n\n\n\n\nMySQL (server)\n\n\n5.6\n\n\n/var/log/mysql/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nContainer\n\n\nSoftware / Service\n\n\nVersion\n\n\nLogs Path on Container\n\n\n\n\n\n\n\n\n\n\nisle-solr\n\n\nDocker Tag\n\n\nlatest, 2.4\n\n\n\n\n\n\n\n\n\n\nOpenJDK\n\n\nJDK 8.x\n\n\n\n\n\n\n\n\n\n\nSolr\n\n\n4.10.4\n\n\n/usr/local/tomcat/logs/solr.log\n\n\n\n\n\n\n\n\nTomcat\n\n\n8.x\n\n\n/usr/local/tomcat/logs/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nContainer\n\n\nSoftware / Service\n\n\nVersion\n\n\n\n\n\n\n\n\n\n\nisle-proxy\n\n\nDocker Tag\n\n\nlatest, 1.13\n\n\n\n\n\n\n\n\nNginx\n\n\n1.13",
            "title": "Docker Containers & Images"
        },
        {
            "location": "/06_specifications/specs_diagram_network/",
            "text": "",
            "title": "Diagram of network and connections"
        },
        {
            "location": "/06_specifications/specs_supported_software_matrix/",
            "text": "Software\n\n\nVersion\n\n\nSoftware Website\n\n\n\n\n\n\n\n\n\n\nApache\n\n\n2.4\n\n\nhttps://httpd.apache.org/\n\n\n\n\n\n\nDjatoka\n\n\n1.1\n\n\nhttps://sourceforge.net/projects/djatoka/\n\n\n\n\n\n\nDrupal\n\n\n7.5x+\n\n\nhttps://www.drupal.org/\n\n\n\n\n\n\nDrupal filter\n\n\n3.8.1\n\n\nhttps://github.com/Islandora/islandora_drupal_filter\n\n\n\n\n\n\nFedora\n\n\n3.8.1\n\n\nhttp://fedorarepository.org/\n\n\n\n\n\n\nGsearch\n\n\n2.8.x\n\n\nhttps://github.com/discoverygarden/gsearch\n\n\n\n\n\n\nGSearch Extensions\n\n\n0.1.3\n\n\nhttps://github.com/discoverygarden/dgi_gsearch_extensions\n\n\n\n\n\n\nIslandora\n\n\n7.x-1.1x\n\n\nhttps://github.com/Islandora/islandora\n\n\n\n\n\n\nIslandora Transforms (XSLTs)\n\n\nlatest\n\n\nhttps://github.com/discoverygarden/islandora_transforms\n\n\n\n\n\n\nMySQL\n\n\n5.6\n\n\nhttps://www.mysql.com/\n\n\n\n\n\n\nNginx\n\n\n1.13\n\n\nhttps://www.nginx.com/\n\n\n\n\n\n\nOpenJDK\n\n\nJDK 8.x\n\n\nhttp://openjdk.java.net/\n\n\n\n\n\n\nOracle Java\n\n\nJDK 8.x\n\n\nhttp://www.oracle.com/technetwork/java/javase/overview/index.html\n\n\n\n\n\n\nPHP\n\n\n5.6\n\n\nhttp://www.php.net/\n\n\n\n\n\n\nSolr\n\n\n4.10.4\n\n\nhttp://lucene.apache.org/solr/\n\n\n\n\n\n\nTomcat\n\n\n8.x\n\n\nhttp://tomcat.apache.org/",
            "title": "Supported ISLE Software Matrix"
        },
        {
            "location": "/06_specifications/specs_supported_drupal_modules_matrix/",
            "text": "Please find below a list o all involved Drupal and Islandora Modules on the test site \nisle.locadomain\n.\n\n\n\n\n\n\n\n\nPackage\n\n\nName\n\n\nType\n\n\nStatus\n\n\nVersion\n\n\n\n\n\n\n\n\n\n\nAdministration\n\n\nActions permissions (VBO) (actions_permissions)\n\n\nModule\n\n\nNot installed\n\n\n7.x-3.4\n\n\n\n\n\n\nAdministration\n\n\nAdministration Development tools (admin_devel)\n\n\nModule\n\n\nNot installed\n\n\n7.x-3.0-rc5\n\n\n\n\n\n\nAdministration\n\n\nAdministration menu (admin_menu)\n\n\nModule\n\n\nNot installed\n\n\n7.x-3.0-rc5\n\n\n\n\n\n\nAdministration\n\n\nAdministration menu Toolbar style (admin_menu_toolbar)\n\n\nModule\n\n\nNot installed\n\n\n7.x-3.0-rc5\n\n\n\n\n\n\nChaos tool suite\n\n\nBulk Export (bulk_export)\n\n\nModule\n\n\nNot installed\n\n\n7.x-1.14\n\n\n\n\n\n\nChaos tool suite\n\n\nChaos tools (ctools)\n\n\nModule\n\n\nEnabled\n\n\n7.x-1.14\n\n\n\n\n\n\nChaos tool suite\n\n\nChaos Tools (CTools) AJAX Example (ctools_ajax_sample)\n\n\nModule\n\n\nNot installed\n\n\n7.x-1.14\n\n\n\n\n\n\nChaos tool suite\n\n\nChaos Tools (CTools) Plugin Example (ctools_plugin_example)\n\n\nModule\n\n\nNot installed\n\n\n7.x-1.14\n\n\n\n\n\n\nChaos tool suite\n\n\nCustom content panes (ctools_custom_content)\n\n\nModule\n\n\nNot installed\n\n\n7.x-1.14\n\n\n\n\n\n\nChaos tool suite\n\n\nCustom rulesets (ctools_access_ruleset)\n\n\nModule\n\n\nNot installed\n\n\n7.x-1.14\n\n\n\n\n\n\nChaos tool suite\n\n\nPage manager (page_manager)\n\n\nModule\n\n\nNot installed\n\n\n7.x-1.14\n\n\n\n\n\n\nChaos tool suite\n\n\nStylizer (stylizer)\n\n\nModule\n\n\nNot installed\n\n\n7.x-1.14\n\n\n\n\n\n\nChaos tool suite\n\n\nTerm Depth access (term_depth)\n\n\nModule\n\n\nNot installed\n\n\n7.x-1.14\n\n\n\n\n\n\nChaos tool suite\n\n\nViews content panes (views_content)\n\n\nModule\n\n\nNot installed\n\n\n7.x-1.14\n\n\n\n\n\n\nCore\n\n\nAggregator (aggregator)\n\n\nModule\n\n\nNot installed\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nBlock (block)\n\n\nModule\n\n\nEnabled\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nBlog (blog)\n\n\nModule\n\n\nNot installed\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nBook (book)\n\n\nModule\n\n\nNot installed\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nColor (color)\n\n\nModule\n\n\nEnabled\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nComment (comment)\n\n\nModule\n\n\nEnabled\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nContact (contact)\n\n\nModule\n\n\nNot installed\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nContent translation (translation)\n\n\nModule\n\n\nNot installed\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nContextual links (contextual)\n\n\nModule\n\n\nEnabled\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nDashboard (dashboard)\n\n\nModule\n\n\nEnabled\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nDatabase logging (dblog)\n\n\nModule\n\n\nEnabled\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nField (field)\n\n\nModule\n\n\nEnabled\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nField SQL storage (field_sql_storage)\n\n\nModule\n\n\nEnabled\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nField UI (field_ui)\n\n\nModule\n\n\nEnabled\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nFile (file)\n\n\nModule\n\n\nEnabled\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nFilter (filter)\n\n\nModule\n\n\nEnabled\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nForum (forum)\n\n\nModule\n\n\nNot installed\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nHelp (help)\n\n\nModule\n\n\nEnabled\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nImage (image)\n\n\nModule\n\n\nEnabled\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nList (list)\n\n\nModule\n\n\nEnabled\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nLocale (locale)\n\n\nModule\n\n\nNot installed\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nMenu (menu)\n\n\nModule\n\n\nEnabled\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nNode (node)\n\n\nModule\n\n\nEnabled\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nNumber (number)\n\n\nModule\n\n\nEnabled\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nOpenID (openid)\n\n\nModule\n\n\nNot installed\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nOptions (options)\n\n\nModule\n\n\nEnabled\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nOverlay (overlay)\n\n\nModule\n\n\nEnabled\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nPath (path)\n\n\nModule\n\n\nEnabled\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nPHP filter (php)\n\n\nModule\n\n\nNot installed\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nPoll (poll)\n\n\nModule\n\n\nNot installed\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nRDF (rdf)\n\n\nModule\n\n\nEnabled\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nSearch (search)\n\n\nModule\n\n\nEnabled\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nShortcut (shortcut)\n\n\nModule\n\n\nEnabled\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nStatistics (statistics)\n\n\nModule\n\n\nNot installed\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nSyslog (syslog)\n\n\nModule\n\n\nNot installed\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nSystem (system)\n\n\nModule\n\n\nEnabled\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nTaxonomy (taxonomy)\n\n\nModule\n\n\nEnabled\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nTesting (simpletest)\n\n\nModule\n\n\nNot installed\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nText (text)\n\n\nModule\n\n\nEnabled\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nToolbar (toolbar)\n\n\nModule\n\n\nEnabled\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nTracker (tracker)\n\n\nModule\n\n\nNot installed\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nTrigger (trigger)\n\n\nModule\n\n\nNot installed\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nUpdate manager (update)\n\n\nModule\n\n\nEnabled\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nUser (user)\n\n\nModule\n\n\nEnabled\n\n\n7.57\n\n\n\n\n\n\nDate/Time\n\n\nDate (date)\n\n\nModule\n\n\nNot installed\n\n\n7.x-2.10\n\n\n\n\n\n\nDate/Time\n\n\nDate All Day (date_all_day)\n\n\nModule\n\n\nNot installed\n\n\n7.x-2.10\n\n\n\n\n\n\nDate/Time\n\n\nDate API (date_api)\n\n\nModule\n\n\nEnabled\n\n\n7.x-2.10\n\n\n\n\n\n\nDate/Time\n\n\nDate Context (date_context)\n\n\nModule\n\n\nNot installed\n\n\n7.x-2.10\n\n\n\n\n\n\nDate/Time\n\n\nDate Picker (datepicker)\n\n\nModule\n\n\nEnabled\n\n\n7.x-1.0\n\n\n\n\n\n\nDate/Time\n\n\nDate Picker Block (datepicker_block)\n\n\nModule\n\n\nNot installed\n\n\n7.x-1.0\n\n\n\n\n\n\nDate/Time\n\n\nDate Picker Views (datepicker_views)\n\n\nModule\n\n\nEnabled\n\n\n7.x-1.0\n\n\n\n\n\n\nDate/Time\n\n\nDate Popup (date_popup)\n\n\nModule\n\n\nEnabled\n\n\n7.x-2.10\n\n\n\n\n\n\nDate/Time\n\n\nDate Repeat API (date_repeat)\n\n\nModule\n\n\nNot installed\n\n\n7.x-2.10\n\n\n\n\n\n\nDate/Time\n\n\nDate Repeat Field (date_repeat_field)\n\n\nModule\n\n\nNot installed\n\n\n7.x-2.10\n\n\n\n\n\n\nDate/Time\n\n\nDate Tools (date_tools)\n\n\nModule\n\n\nNot installed\n\n\n7.x-2.10\n\n\n\n\n\n\nDate/Time\n\n\nDate Views (date_views)\n\n\nModule\n\n\nEnabled\n\n\n7.x-2.10\n\n\n\n\n\n\nDevelopment\n\n\nDevel (devel)\n\n\nModule\n\n\nNot installed\n\n\n7.x-1.5\n\n\n\n\n\n\nDevelopment\n\n\nDevel generate (devel_generate)\n\n\nModule\n\n\nNot installed\n\n\n7.x-1.5\n\n\n\n\n\n\nDevelopment\n\n\nDevel node access (devel_node_access)\n\n\nModule\n\n\nNot installed\n\n\n7.x-1.5\n\n\n\n\n\n\nDevelopment\n\n\nNodequeue generate (nodequeue_generate)\n\n\nModule\n\n\nNot installed\n\n\n7.x-2.1\n\n\n\n\n\n\nFeatures\n\n\nDate Migration Example (date_migrate_example)\n\n\nModule\n\n\nNot installed\n\n\n7.x-2.10\n\n\n\n\n\n\nFeatures\n\n\nFeatures (features)\n\n\nModule\n\n\nNot installed\n\n\n7.x-2.10\n\n\n\n\n\n\nFeatures extra\n\n\nFE Block (fe_block)\n\n\nModule\n\n\nNot installed\n\n\n7.x-1.0\n\n\n\n\n\n\nFeatures extra\n\n\nFE Date (fe_date)\n\n\nModule\n\n\nNot installed\n\n\n7.x-1.0\n\n\n\n\n\n\nFeatures extra\n\n\nFE Nodequeue (fe_nodequeue)\n\n\nModule\n\n\nNot installed\n\n\n7.x-1.0\n\n\n\n\n\n\nFeatures extra\n\n\nFE Profile (fe_profile)\n\n\nModule\n\n\nNot installed\n\n\n7.x-1.0\n\n\n\n\n\n\nFields\n\n\nEntity Reference (entityreference)\n\n\nModule\n\n\nNot installed\n\n\n7.x-1.5\n\n\n\n\n\n\nFields\n\n\nEntity Reference Behavior Example (entityreference_behavior_example)\n\n\nModule\n\n\nNot installed\n\n\n7.x-1.5\n\n\n\n\n\n\nFields\n\n\nField Group (field_group)\n\n\nModule\n\n\nEnabled\n\n\n7.x-1.6\n\n\n\n\n\n\nFields\n\n\nLink (link)\n\n\nModule\n\n\nNot installed\n\n\n7.x-1.4\n\n\n\n\n\n\nIslandora\n\n\nCompound Object Zip File Importer\n\n\nModule\n\n\nNot installed\n\n\n7.x-dev\n\n\n\n\n\n\n\n\n(islandora_compound_object_zip_importer)\n\n\n\n\n\n\n\n\n\n\n\n\nIslandora\n\n\nIslandora (islandora)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora\n\n\nIslandora Book Batch (islandora_book_batch)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora\n\n\nIslandora Entities CSV Import (islandora_entities_csv_import)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora\n\n\nIslandora Multi Importer (islandora_multi_importer)\n\n\nModule\n\n\nEnabled\n\n\n\n\n\n\n\n\nIslandora\n\n\nIslandora Newspaper Batch (islandora_newspaper_batch)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora\n\n\nIslandora Populator (islandora_populator)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora\n\n\nIslandora Solr Facet Pages (islandora_solr_facet_pages)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora\n\n\nIslandora Solr Metadata (islandora_solr_metadata)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora\n\n\nIslandora Webform (islandora_webform)\n\n\nModule\n\n\nEnabled\n\n\n7.x-1.4-rc1\n\n\n\n\n\n\nIslandora\n\n\nIslandora Webform Ingest (islandora_webform_ingest)\n\n\nModule\n\n\nEnabled\n\n\n\n\n\n\n\n\nIslandora\n\n\nIslandora XSLT Populator (islandora_xslt_populator)\n\n\nModule\n\n\nNot installed\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Dependencies\n\n\nIslandora Form - Fieldpanel element (islandora_form_fieldpanel)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Dependencies\n\n\nIslandora XML Form API (xml_form_api)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Dependencies\n\n\nIslandora XML Form Elements (xml_form_elements)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Dependencies\n\n\nIslandora XML Schema API (xml_schema_api)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Dependencies\n\n\nObjective Forms (objective_forms)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Dependencies\n\n\nPHP Lib (php_lib)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Search\n\n\nIslandora Solr (islandora_solr)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Search\n\n\nIslandora Solr display profiles (islandora_solr_config)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Search\n\n\nIslandora Solr Views (islandora_solr_views)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Solution Packs\n\n\nBibutils (bibutils)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Solution Packs\n\n\nCitation Exporter (citation_exporter)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Solution Packs\n\n\nCiteproc (citeproc)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Solution Packs\n\n\nDOI Importer (doi_importer)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Solution Packs\n\n\nDOI Populator (doi_populator)\n\n\nModule\n\n\nNot installed\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Solution Packs\n\n\nEndNote XML Populator (endnotexml_populator)\n\n\nModule\n\n\nNot installed\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Solution Packs\n\n\nEndNoteXML Importer (endnotexml_importer)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Solution Packs\n\n\nIslandora Audio (islandora_audio)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Solution Packs\n\n\nIslandora basic collection (islandora_basic_collection)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Solution Packs\n\n\nIslandora basic image (islandora_basic_image)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Solution Packs\n\n\nIslandora Bibliography (islandora_bibliography)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Solution Packs\n\n\nIslandora Book Solution Pack (islandora_book)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Solution Packs\n\n\nIslandora compound object (islandora_compound_object)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Solution Packs\n\n\nIslandora Disk Image Solution Pack (islandora_disk_image)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Solution Packs\n\n\nIslandora DOI (islandora_doi)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Solution Packs\n\n\nIslandora EndNote XML (islandora_endnotexml)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Solution Packs\n\n\nIslandora Entities (islandora_entities)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Solution Packs\n\n\nIslandora example simple text (islandora_example_simple_text)\n\n\nModule\n\n\nNot installed\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Solution Packs\n\n\nIslandora Google Scholar (islandora_google_scholar)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Solution Packs\n\n\nIslandora Large Image Solution Pack (islandora_large_image)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Solution Packs\n\n\nIslandora newspaper (islandora_newspaper)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Solution Packs\n\n\nIslandora Paged Content (islandora_paged_content)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Solution Packs\n\n\nIslandora PDF (islandora_pdf)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Solution Packs\n\n\nIslandora PMID (islandora_pmid)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Solution Packs\n\n\nIslandora RIS (islandora_ris)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Solution Packs\n\n\nIslandora Scholar (islandora_scholar)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Solution Packs\n\n\nIslandora Scholar Embargo (islandora_scholar_embargo)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Solution Packs\n\n\nIslandora Video Solution Pack (islandora_video)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Solution Packs\n\n\nIslandora Web ARChive Solution Pack (islandora_web_archive)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Solution Packs\n\n\nPMID Populator (pmid_populator)\n\n\nModule\n\n\nNot installed\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Solution Packs\n\n\nPubmed Importer (pmid_importer)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Solution Packs\n\n\nRIS Importer (ris_importer)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Solution Packs\n\n\nRIS Populator (ris_populator)\n\n\nModule\n\n\nNot installed\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Tools\n\n\nCSL (csl)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Tools\n\n\nIslandora Altmetrics Badge (islandora_altmetrics)\n\n\nModule\n\n\nEnabled\n\n\n\n\n\n\n\n\nIslandora Tools\n\n\nIslandora Badges (islandora_badges)\n\n\nModule\n\n\nEnabled\n\n\n\n\n\n\n\n\nIslandora Tools\n\n\nIslandora BagIt (islandora_bagit)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Tools\n\n\nIslandora Batch (islandora_batch)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Tools\n\n\nIslandora Batch Importer (islandora_importer)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Tools\n\n\nIslandora Batch Report (islandora_batch_report)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Tools\n\n\nIslandora Bookmark (islandora_bookmark)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Tools\n\n\nIslandora Bookmark CSV Exports (islandora_bookmark_csv_exports)\n\n\nModule\n\n\nNot installed\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Tools\n\n\nIslandora Checksum (islandora_checksum)\n\n\nModule\n\n\nNot installed\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Tools\n\n\nIslandora Checksum Checker (islandora_checksum_checker)\n\n\nModule\n\n\nNot installed\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Tools\n\n\nIslandora FITS (islandora_fits)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Tools\n\n\nIslandora Image Annotation (islandora_image_annotation)\n\n\nModule\n\n\nNot installed\n\n\n\n\n\n\n\n\nIslandora Tools\n\n\nIslandora MARCXML (islandora_marcxml)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Tools\n\n\nIslandora oaDOI (islandora_oadoi)\n\n\nModule\n\n\nNot installed\n\n\n\n\n\n\n\n\nIslandora Tools\n\n\nIslandora OAI Provider (islandora_oai)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Tools\n\n\nIslandora OCR (islandora_ocr)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Tools\n\n\nIslandora pathauto (islandora_pathauto)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Tools\n\n\nIslandora PREMIS (islandora_premis)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Tools\n\n\nIslandora Scopus Badge (islandora_scopus)\n\n\nModule\n\n\nNot installed\n\n\n\n\n\n\n\n\nIslandora Tools\n\n\nIslandora Simple Workflow (islandora_simple_workflow)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Tools\n\n\nIslandora Sync (islandora_sync)\n\n\nModule\n\n\nNot installed\n\n\n\n\n\n\n\n\nIslandora Tools\n\n\nIslandora Usage Stats (islandora_usage_stats)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Tools\n\n\nIslandora Web of Science Badge (islandora_wos)\n\n\nModule\n\n\nNot installed\n\n\n\n\n\n\n\n\nIslandora Tools\n\n\nIslandora Xacml Api (islandora_xacml_api)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Tools\n\n\nIslandora XACML Editor (islandora_xacml_editor)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Tools\n\n\nIslandora XML Form Builder (xml_form_builder)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Tools\n\n\nIslandora XML Forms (xml_forms)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Tools\n\n\nIslandora XML sitemap (islandora_xmlsitemap)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Tools\n\n\nZip File Importer (zip_importer)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Viewers\n\n\nIslandora Internet Archive BookReader\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\n\n\n(islandora_internet_archive_bookreader)\n\n\n\n\n\n\n\n\n\n\n\n\nIslandora Viewers\n\n\nIslandora JW Player (islandora_jwplayer)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Viewers\n\n\nIslandora OpenSeadragon (islandora_openseadragon)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Viewers\n\n\nIslandora pdf.js (islandora_pdfjs)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nIslandora Viewers\n\n\nIslandora video.js (islandora_videojs)\n\n\nModule\n\n\nEnabled\n\n\n7.x-dev\n\n\n\n\n\n\nMultilingual -\n\n\nPanels translation (i18n_panels)\n\n\nModule\n\n\nNot installed\n\n\n7.x-3.9\n\n\n\n\n\n\nInternationalization\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMultilingual -\n\n\nRules translation (rules_i18n)\n\n\nModule\n\n\nNot installed\n\n\n7.x-2.10\n\n\n\n\n\n\nInternationalization\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNodequeue\n\n\nNodequeue (nodequeue)\n\n\nModule\n\n\nNot installed\n\n\n7.x-2.1\n\n\n\n\n\n\nNodequeue\n\n\nNodequeue Service (nodequeue_service)\n\n\nModule\n\n\nNot installed\n\n\n7.x-2.1\n\n\n\n\n\n\nNodequeue\n\n\nSmartqueue taxonomy (smartqueue)\n\n\nModule\n\n\nNot installed\n\n\n7.x-2.1\n\n\n\n\n\n\nOther\n\n\nColorbox (colorbox)\n\n\nModule\n\n\nEnabled\n\n\n7.x-2.13\n\n\n\n\n\n\nOther\n\n\nEntity API (entity)\n\n\nModule\n\n\nEnabled\n\n\n7.x-1.9\n\n\n\n\n\n\nOther\n\n\nEntity tokens (entity_token)\n\n\nModule\n\n\nEnabled\n\n\n7.x-1.9\n\n\n\n\n\n\nOther\n\n\nEntity view modes (entity_view_mode)\n\n\nModule\n\n\nNot installed\n\n\n7.x-1.0-rc1\n\n\n\n\n\n\nOther\n\n\nEnvironment indicator (environment_indicator)\n\n\nModule\n\n\nNot installed\n\n\n7.x-2.9\n\n\n\n\n\n\nOther\n\n\nEnvironment indicator variables (environment_indicator_variable)\n\n\nModule\n\n\nNot installed\n\n\n7.x-2.9\n\n\n\n\n\n\nOther\n\n\nImageMagick (imagemagick)\n\n\nModule\n\n\nEnabled\n\n\n7.x-1.0\n\n\n\n\n\n\nOther\n\n\nImageMagick Advanced (imagemagick_advanced)\n\n\nModule\n\n\nNot installed\n\n\n7.x-1.0\n\n\n\n\n\n\nOther\n\n\nIslandora Sync Field Collection (islandora_sync_field_collection)\n\n\nModule\n\n\nNot installed\n\n\n\n\n\n\n\n\nOther\n\n\nIslandora Sync Relation (islandora_sync_relation)\n\n\nModule\n\n\nNot installed\n\n\n\n\n\n\n\n\nOther\n\n\nLibraries (libraries)\n\n\nModule\n\n\nEnabled\n\n\n7.x-2.3\n\n\n\n\n\n\nOther\n\n\nPathauto (pathauto)\n\n\nModule\n\n\nEnabled\n\n\n7.x-1.3\n\n\n\n\n\n\nOther\n\n\nStage File Proxy (stage_file_proxy)\n\n\nModule\n\n\nNot installed\n\n\n7.x-1.7\n\n\n\n\n\n\nOther\n\n\nStrongarm (strongarm)\n\n\nModule\n\n\nNot installed\n\n\n7.x-2.0\n\n\n\n\n\n\nOther\n\n\nToken (token)\n\n\nModule\n\n\nEnabled\n\n\n7.x-1.7\n\n\n\n\n\n\nPanels\n\n\nMini panels (panels_mini)\n\n\nModule\n\n\nNot installed\n\n\n7.x-3.9\n\n\n\n\n\n\nPanels\n\n\nPanel nodes (panels_node)\n\n\nModule\n\n\nNot installed\n\n\n7.x-3.9\n\n\n\n\n\n\nPanels\n\n\nPanels (panels)\n\n\nModule\n\n\nNot installed\n\n\n7.x-3.9\n\n\n\n\n\n\nPanels\n\n\nPanels In-Place Editor (panels_ipe)\n\n\nModule\n\n\nNot installed\n\n\n7.x-3.9\n\n\n\n\n\n\nRules\n\n\nRules (rules)\n\n\nModule\n\n\nEnabled\n\n\n7.x-2.10\n\n\n\n\n\n\nRules\n\n\nRules Scheduler (rules_scheduler)\n\n\nModule\n\n\nNot installed\n\n\n7.x-2.10\n\n\n\n\n\n\nRules\n\n\nRules UI (rules_admin)\n\n\nModule\n\n\nNot installed\n\n\n7.x-2.10\n\n\n\n\n\n\nStatistics\n\n\nGoogle Analytics (googleanalytics)\n\n\nModule\n\n\nNot installed\n\n\n7.x-2.4\n\n\n\n\n\n\nTesting\n\n\nFeatures Extra test feature (features_extra_test)\n\n\nModule\n\n\nNot installed\n\n\n7.x-1.0\n\n\n\n\n\n\nUser interface\n\n\njQuery Update (jquery_update)\n\n\nModule\n\n\nEnabled\n\n\n7.x-2.7\n\n\n\n\n\n\nViews\n\n\nViews (views)\n\n\nModule\n\n\nEnabled\n\n\n7.x-3.18\n\n\n\n\n\n\nViews\n\n\nViews Bulk Operations (views_bulk_operations)\n\n\nModule\n\n\nNot installed\n\n\n7.x-3.4\n\n\n\n\n\n\nViews\n\n\nViews Data Export (views_data_export)\n\n\nModule\n\n\nEnabled\n\n\n7.x-3.2\n\n\n\n\n\n\nViews\n\n\nViews Slideshow (views_slideshow)\n\n\nModule\n\n\nNot installed\n\n\n7.x-3.9\n\n\n\n\n\n\nViews\n\n\nViews Slideshow Simple Pager (views_slideshow_simple_pager)\n\n\nModule\n\n\nNot installed\n\n\n7.x-3.9\n\n\n\n\n\n\nViews\n\n\nViews Slideshow: Cycle (views_slideshow_cycle)\n\n\nModule\n\n\nNot installed\n\n\n7.x-3.9\n\n\n\n\n\n\nViews\n\n\nViews UI (views_ui)\n\n\nModule\n\n\nEnabled\n\n\n7.x-3.18\n\n\n\n\n\n\nWebform\n\n\nWebform (webform)\n\n\nModule\n\n\nEnabled\n\n\n7.x-4.16\n\n\n\n\n\n\nWebform\n\n\nWebform AJAX (webform_ajax)\n\n\nModule\n\n\nEnabled\n\n\n7.x-1.1\n\n\n\n\n\n\nWebform\n\n\nWebform Bonus Pack (webform_bonus)\n\n\nModule\n\n\nEnabled\n\n\n7.x-3.x-dev\n\n\n\n\n\n\nWebform\n\n\nWebform Digest (webform_digest)\n\n\nModule\n\n\nNot installed\n\n\n7.x-3.x-dev\n\n\n\n\n\n\nWebform\n\n\nWebform to Google Docs (webform_to_gdocs)\n\n\nModule\n\n\nNot installed\n\n\n7.x-4.3\n\n\n\n\n\n\nWebform\n\n\nWebform Workflow (webform_workflow)\n\n\nModule\n\n\nNot installed\n\n\n7.x-1.0-alpha2\n\n\n\n\n\n\nXML sitemap\n\n\nXML sitemap (xmlsitemap)\n\n\nModule\n\n\nEnabled\n\n\n7.x-2.3\n\n\n\n\n\n\nXML sitemap\n\n\nXML sitemap custom (xmlsitemap_custom)\n\n\nModule\n\n\nEnabled\n\n\n7.x-2.3\n\n\n\n\n\n\nXML sitemap\n\n\nXML sitemap engines (xmlsitemap_engines)\n\n\nModule\n\n\nNot installed\n\n\n7.x-2.3\n\n\n\n\n\n\nXML sitemap\n\n\nXML sitemap internationalization (xmlsitemap_i18n)\n\n\nModule\n\n\nNot installed\n\n\n7.x-2.3\n\n\n\n\n\n\nXML sitemap\n\n\nXML sitemap menu (xmlsitemap_menu)\n\n\nModule\n\n\nNot installed\n\n\n7.x-2.3\n\n\n\n\n\n\nXML sitemap\n\n\nXML sitemap node (xmlsitemap_node)\n\n\nModule\n\n\nNot installed\n\n\n7.x-2.3\n\n\n\n\n\n\nXML sitemap\n\n\nXML sitemap taxonomy (xmlsitemap_taxonomy)\n\n\nModule\n\n\nNot installed\n\n\n7.x-2.3\n\n\n\n\n\n\nXML sitemap\n\n\nXML sitemap user (xmlsitemap_user)\n\n\nModule\n\n\nNot installed\n\n\n7.x-2.3\n\n\n\n\n\n\nCore\n\n\nBartik (bartik)\n\n\nTheme\n\n\nEnabled\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nGarland (garland)\n\n\nTheme\n\n\nDisabled\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nSeven (seven)\n\n\nTheme\n\n\nEnabled\n\n\n7.57\n\n\n\n\n\n\nCore\n\n\nStark (stark)\n\n\nTheme\n\n\nDisabled\n\n\n7.57",
            "title": "Supported Drupal Modules on Test Site Matrix"
        }
    ]
}