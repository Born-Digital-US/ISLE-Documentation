{
    "docs": [
        {
            "location": "/", 
            "text": "Islandora Enterprise (ISLE)\n\n\nWelcome to the documentation for ISLE, a set of resources for building a fully functioning Islandora system quickly using a system building tool called [Docker] (https://docker.com). This documentation aims to cover every feature of ISLE from end-to-end, covering as much detail as possible. If you are just getting started with ISLE, please review the [getting started guide] first.\n\n\nThe navigation to the left will take you through all the components of ISLE as well as various examples and step-by-step instructions for spinning up an Islandora instance using ISLE. For details about how ISLE came into being please read the [ISLE Executive Summary].\n\n\nContributors welcome!\n\n\n\n\nIf you have questions, please contact \nDavid Keiser-Clark\n or post them on the \nIsle Updates Group\n.", 
            "title": "Home"
        }, 
        {
            "location": "/#islandora-enterprise-isle", 
            "text": "Welcome to the documentation for ISLE, a set of resources for building a fully functioning Islandora system quickly using a system building tool called [Docker] (https://docker.com). This documentation aims to cover every feature of ISLE from end-to-end, covering as much detail as possible. If you are just getting started with ISLE, please review the [getting started guide] first.  The navigation to the left will take you through all the components of ISLE as well as various examples and step-by-step instructions for spinning up an Islandora instance using ISLE. For details about how ISLE came into being please read the [ISLE Executive Summary].", 
            "title": "Islandora Enterprise (ISLE)"
        }, 
        {
            "location": "/#contributors-welcome", 
            "text": "If you have questions, please contact  David Keiser-Clark  or post them on the  Isle Updates Group .", 
            "title": "Contributors welcome!"
        }, 
        {
            "location": "/about/", 
            "text": "Islandora Enterprise (ISLE)\n is a new project in development that will address one of the most significant pain-points in Islandora: installation and maintenance.\n\n\nIslandora\n is an open-source software \nframework\n designed to help institutions and organizations and their audiences collaboratively manage, and discover digital assets using a best-practices framework.\n\n\nISLE is an orchestrated group of Docker containers to be run on a server, laptop or cloud instance with a minimal suite of tools enabling an efficient deploy and release of an updated production-ready Islandora environment.\n\n\nISLE functions as both an initial installer and maintenance updater with the ability to build new production, staging and sandbox environments as distributable, lightweight and fast \u201ccontainers\u201d in a \nDocker Engine\n environment.\n\n\nThis process allows folks to choose between hosting:\n\n\n\n\nlocally on a laptop for development work\n\n\nlocally in an institutional data center\n\n\nin a cloud environment such as (\nAmazon Web Services\n).\n\n\n\n\nISLE\u2019s production-ready platform will be updated monthly with:\n\n\n\n\ncritical security patches\n\n\nfull stack software updates\n\n\na suite of commonly installed features and solution packs.\n\n\n\n\nISLE is designed to be an evolving but trusted environment to help create a managed process for migrating to the next major release of Islandora (termed CLAW).\n\n\nProject Overview\n\n\nISLE public repository: https://github.com/Islandora-Collaboration-Group/ISLE\n\n\nWhat is Islandora Enterprise (ISLE)?\n\n\nIslandora Enterprise (ISLE) is a new project in development that will address one of the most significant pain-points in Islandora: installation and maintenance.\n\n\nHow does it work?\n\n\nISLE separates an institution\u2019s customizations from core code, and moves that core code into containers that are easily updated, simplifying and largely automating the process of installation and updates/maintenance of Islandora. ISLE also bundles together the best shared modules into a common, production-ready and security-hardened platform.\n\n\nWhy is it needed?\n\n\nIslandora is a powerful digital repository comprised of more than 80 different open-source software libraries. This complex ecosystem makes Islandora difficult and expensive to install, maintain and customize. ISLE lowers the barrier to entry for new schools while allowing existing institutions to reallocate funds towards development or ingestion instead of maintenance.\n\n\nHigh Level Objective\n\n\nTo deliver a secure and production-ready Islandora stack (\u201cISLE\u201d) that reduces the involved support time and effort for installation, maintenance and customization.\n\n\nISLE Functional Definition\n\n\nBy ISLE, it is meant a system that will:  \n\n\n\n\nFunction as both an initial installer and maintenance updater for Islandora stacks with up-to-date components suitable for use as staging, development or production environments, as well as for use on personal computers for development work.\n\n\nConsist of a public, tagged set of Docker containers.\n\n\nInclude use of an orchestration tool such as Docker Composer.\n\n\nAllow for the replacement of older containers with newer versions.\n\n\nBe updated to include new component security patch releases within one calendar month.\n\n\nSupport institution-specific customizations (XSLTs/Islandora Transforms, Solr, schemas, config.xml, MODS configurations/forms, XACML policies) able to persist through container upgrades and replacements.\n\n\nThese will be stored in a git repository and a mechanism will be provided to reintegrate with the installed Docker containers as part of an upgrade.\n\n\n\n\n\n\nSupport for either institutional hosting or Amazon Web Services (AWS) for the Docker host server.\n\n\nSupport data store flexibility on institutional hosting or an AWS cloud environment.\n\n\nEncompass critical security patches, and full stack software updates, plus dependencies for commonly installed features and all available solution packs.\n\n\nInclude an integrated ISLE/Islandora test suite (expected to utilize TravisCI) to be utilized, developed in conjunction with the Islandora Foundation and the current Islandora release managers\n\n\nInclude documentation that covers end usage, a how-to guide to set up an initial ISLE installation, a how-to guide for an established installation to upgrade containers to the latest versions, and a functional description of mechanics, administrative system management and the process for future ISLE development\n\n\n\n\nISLE Documents\n\n\n\n\nISLE Executive Summary\n (a concise overview in plain English)\n\n\nISLE Specifications\n (based on the older, now closed, \nISLE MVP\n doc)\n\n\nISLE Supporters\n (list of institutions)", 
            "title": "About"
        }, 
        {
            "location": "/about/#project-overview", 
            "text": "ISLE public repository: https://github.com/Islandora-Collaboration-Group/ISLE", 
            "title": "Project Overview"
        }, 
        {
            "location": "/about/#what-is-islandora-enterprise-isle", 
            "text": "Islandora Enterprise (ISLE) is a new project in development that will address one of the most significant pain-points in Islandora: installation and maintenance.", 
            "title": "What is Islandora Enterprise (ISLE)?"
        }, 
        {
            "location": "/about/#how-does-it-work", 
            "text": "ISLE separates an institution\u2019s customizations from core code, and moves that core code into containers that are easily updated, simplifying and largely automating the process of installation and updates/maintenance of Islandora. ISLE also bundles together the best shared modules into a common, production-ready and security-hardened platform.", 
            "title": "How does it work?"
        }, 
        {
            "location": "/about/#why-is-it-needed", 
            "text": "Islandora is a powerful digital repository comprised of more than 80 different open-source software libraries. This complex ecosystem makes Islandora difficult and expensive to install, maintain and customize. ISLE lowers the barrier to entry for new schools while allowing existing institutions to reallocate funds towards development or ingestion instead of maintenance.", 
            "title": "Why is it needed?"
        }, 
        {
            "location": "/about/#high-level-objective", 
            "text": "To deliver a secure and production-ready Islandora stack (\u201cISLE\u201d) that reduces the involved support time and effort for installation, maintenance and customization.", 
            "title": "High Level Objective"
        }, 
        {
            "location": "/about/#isle-functional-definition", 
            "text": "By ISLE, it is meant a system that will:     Function as both an initial installer and maintenance updater for Islandora stacks with up-to-date components suitable for use as staging, development or production environments, as well as for use on personal computers for development work.  Consist of a public, tagged set of Docker containers.  Include use of an orchestration tool such as Docker Composer.  Allow for the replacement of older containers with newer versions.  Be updated to include new component security patch releases within one calendar month.  Support institution-specific customizations (XSLTs/Islandora Transforms, Solr, schemas, config.xml, MODS configurations/forms, XACML policies) able to persist through container upgrades and replacements.  These will be stored in a git repository and a mechanism will be provided to reintegrate with the installed Docker containers as part of an upgrade.    Support for either institutional hosting or Amazon Web Services (AWS) for the Docker host server.  Support data store flexibility on institutional hosting or an AWS cloud environment.  Encompass critical security patches, and full stack software updates, plus dependencies for commonly installed features and all available solution packs.  Include an integrated ISLE/Islandora test suite (expected to utilize TravisCI) to be utilized, developed in conjunction with the Islandora Foundation and the current Islandora release managers  Include documentation that covers end usage, a how-to guide to set up an initial ISLE installation, a how-to guide for an established installation to upgrade containers to the latest versions, and a functional description of mechanics, administrative system management and the process for future ISLE development", 
            "title": "ISLE Functional Definition"
        }, 
        {
            "location": "/about/#isle-documents", 
            "text": "ISLE Executive Summary  (a concise overview in plain English)  ISLE Specifications  (based on the older, now closed,  ISLE MVP  doc)  ISLE Supporters  (list of institutions)", 
            "title": "ISLE Documents"
        }, 
        {
            "location": "/Glossary/", 
            "text": "ISLE Basics\n\n\nIn simple terms, ISLE is a set of resources that allow one to build a fully functioning Islandora system fairly quickly using a system building tool called [Docker] (https://docker.com)\n\n\nGlossary of Terms\n\n\nVirtualization\n\n\n\n\n\n\nVM\n: Virtual Machine - A virtual machine is a software computer that, similar to a physical computer, runs an operating system and applications comprised of specification and configuration files backed by the resources of a host (the physical computer).\n\n\n\n\n\n\nVirtualbox\n: \nVirtualBox\nis a general-purpose full virtualizer for x86 hardware, targeted at server, desktop and embedded use.\n\n\n\n\n\n\nVagrant\n: \nVagrant\n provides easy to configure, reproducible, and portable work environments. Vagrant works on Mac, Linux, Windows, and more. Within the ISLE project there is a vagrant folder.\n\n\n\n\n\n\nDocker for Mac\n: \nDocker for Mac\n is an easy-to-install desktop app for building, debugging and testing Dockerized apps on a Mac. Docker for Mac is a complete development environment deeply integrated with the MacOS Hypervisor framework, networking and filesystem\n\n\n\n\n\n\nDocker\n\n\n\n\n\n\nDocker\n: System virtualization software used to build ISLE - Docker is used to create virtual servers called containers based on pre-built images. A \"recipe\" file called docker-compose.yml orchestrates the setting up and networking of the containers.\n\n\n\n\n\n\nContainers\n: virtual \"servers\" created by Docker - each major component of Islandora runs in its own container.\n\n\n\n\n\n\nImages\n: source for the containers - these are built and updated by ISLE developers and stored on Dockerhub.\n\n\n\n\n\n\nDockerhub\n: website/repository that provides access to the latest images for the ISLE containers.\n\n\n\n\n\n\nISLE on GitHub\n: the ISLE repository on github.com contains documentation and configuration files necessary to build ISLE.\n\n\n\n\n\n\nHost Server\n: Also called \"the host\" - this is the base computer upon which the entire ISLE stack is built - this can be a virtual machine on a laptop (LOCAL), or\na server you connected to via ssh (REMOTE).\n\n\n\n\n\n\nVolume\n a Docker controlled place to hold data on the local file system. Used to persist data across containers.\n\n\n\n\n\n\nNetwork\n refers to a defined Docker network that is controlled by docker. ThIS has powerful implications in production.\n\n\n\n\nISLE services: fedora, solr, apache, mysql, and proxy communicate using an internal private stack network. The service proxy also joins an insecure network that is accessible to the WAN (or for testing \"WAN\" likely means a smaller internal network). Why two networks? Swarms, scaling, replicating.\n\n\n\n\n\n\n\n\nVariables go here...\n*", 
            "title": "Glossary of Terms and Variables"
        }, 
        {
            "location": "/Glossary/#isle-basics", 
            "text": "In simple terms, ISLE is a set of resources that allow one to build a fully functioning Islandora system fairly quickly using a system building tool called [Docker] (https://docker.com)  Glossary of Terms", 
            "title": "ISLE Basics"
        }, 
        {
            "location": "/Glossary/#virtualization", 
            "text": "VM : Virtual Machine - A virtual machine is a software computer that, similar to a physical computer, runs an operating system and applications comprised of specification and configuration files backed by the resources of a host (the physical computer).    Virtualbox :  VirtualBox is a general-purpose full virtualizer for x86 hardware, targeted at server, desktop and embedded use.    Vagrant :  Vagrant  provides easy to configure, reproducible, and portable work environments. Vagrant works on Mac, Linux, Windows, and more. Within the ISLE project there is a vagrant folder.    Docker for Mac :  Docker for Mac  is an easy-to-install desktop app for building, debugging and testing Dockerized apps on a Mac. Docker for Mac is a complete development environment deeply integrated with the MacOS Hypervisor framework, networking and filesystem", 
            "title": "Virtualization"
        }, 
        {
            "location": "/Glossary/#docker", 
            "text": "Docker : System virtualization software used to build ISLE - Docker is used to create virtual servers called containers based on pre-built images. A \"recipe\" file called docker-compose.yml orchestrates the setting up and networking of the containers.    Containers : virtual \"servers\" created by Docker - each major component of Islandora runs in its own container.    Images : source for the containers - these are built and updated by ISLE developers and stored on Dockerhub.    Dockerhub : website/repository that provides access to the latest images for the ISLE containers.    ISLE on GitHub : the ISLE repository on github.com contains documentation and configuration files necessary to build ISLE.    Host Server : Also called \"the host\" - this is the base computer upon which the entire ISLE stack is built - this can be a virtual machine on a laptop (LOCAL), or\na server you connected to via ssh (REMOTE).    Volume  a Docker controlled place to hold data on the local file system. Used to persist data across containers.    Network  refers to a defined Docker network that is controlled by docker. ThIS has powerful implications in production.   ISLE services: fedora, solr, apache, mysql, and proxy communicate using an internal private stack network. The service proxy also joins an insecure network that is accessible to the WAN (or for testing \"WAN\" likely means a smaller internal network). Why two networks? Swarms, scaling, replicating.     Variables go here... *", 
            "title": "Docker"
        }, 
        {
            "location": "/System_Requirements/", 
            "text": "ISLE will (using Docker) install and manage a set of virtual \"servers\" (containers) that will run all the components of Islandora. Docker requires a host server upon which to do this.\n\n\nThis \nhost server\n can be a virtual machine (VM) on your desktop or on the cloud, it can also be a physical server. An SSH connection with a user that has root or admin privileges is necessary. If an IT department is doing this initial setup, see below for sample language to use in requesting the server.\n\n\nThe basic requirements for this host machine vary depending on intended use. A VM on a desktop computer will be sufficient to set up a test or development instance.\n\n\nLocal: A laptop or workstation running Docker, Docker Compose and ISLE.\n\n\n\n\n8 GB or RAM is recommended\n\n\nMacOS Sierra 10.12.x or High Sierra 10.13.x\n\n\nWindows 10 Home or Pro\n\n\nUbuntu 16.04+ Desktop\n\n\n\n\nHowever, if the intent is a site that will see actual production use, sufficient processor speed, memory, and storage space is required.\n\n\nServer Specifications\n\n\n\n\nUbuntu 16.04 LTS Server or CentOS 7.x server\n* \n\n\nminimum 2 CPU's\n\n\nSufficient HD or attached storage to hold your collection plus 30-50GB for overhead\n\n\n24 GB of RAM\n\n\n\n\n* \nUbuntu 16.04 and CentOS 7.x have been tested with ISLE - currently RHELS does not support Docker Community Edition.\n\n\nSample Request to an IT department\n\n\n\n\nDear IT Dept,\n\n\nOur digital collections team will be testing a Docker implementation of the Islandora digtial repository system called \nISLE\n. We require access to a server meeting the following specifications:\n\n\n\n\nUbuntu 16.04 LTS Server or CentOS 7.x server\n\n\nminimum 2 CPU's\n\n\nSufficient HD or attached storage to hold your collection plus 30-50GB for overhead\n\n\n24 GB of RAM\n\n\n\n\nOur team will either need root access, or a user called \"islandora\" that has sudo privileges. We will need the following software which we can install following the instructions at \nthis link\n\n\n\n\nGit, Docker, Docker-Compose, openssl, git, htop, ntp, curl", 
            "title": "System Requirements"
        }, 
        {
            "location": "/System_Requirements/#sample-request-to-an-it-department", 
            "text": "Dear IT Dept,  Our digital collections team will be testing a Docker implementation of the Islandora digtial repository system called  ISLE . We require access to a server meeting the following specifications:   Ubuntu 16.04 LTS Server or CentOS 7.x server  minimum 2 CPU's  Sufficient HD or attached storage to hold your collection plus 30-50GB for overhead  24 GB of RAM   Our team will either need root access, or a user called \"islandora\" that has sudo privileges. We will need the following software which we can install following the instructions at  this link   Git, Docker, Docker-Compose, openssl, git, htop, ntp, curl", 
            "title": "Sample Request to an IT department"
        }, 
        {
            "location": "/00Host_Server/Host_Server_Setup/", 
            "text": "Generic overview of the setup required on the Host Server\n\n\n\n\nHost Server\n: Also called \"the host\" - this is the base computer upon which the entire ISLE stack is built - this can be a virtual machine on a laptop (LOCAL), or a server you connected to via ssh (REMOTE).\n\n\n\n\nThis generic Host Server Setup Guide is an overview intended to give a general idea of the software and setup required to establish the Docker host. More detailed operating system-specific guides including commands to copy/paste are found in the following pages.\n\n\nThe following setup will be the same if you are building a test on a Virtual Machine on your laptop or using a physical server or cloud setup. In all these cases you'll be establishing an Ubuntu 16.04 or CentOS 7 server with the following parameters:\n\n\n\n\n\n\nEnsure you have SSH access to the server as root or w/ sudo privileges:\n\n\n\n\n\n\nupdate the software repositories and then install the following:\n\n\n\n\nopenssl\n\n\ngit\n\n\nhtop\n\n\nntp\n\n\ncurl\n\n\n\n\ndocker-ce\n\n\nNote: feel free to install additional dev tools if you know what you need/want\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCreate islandora user (as root)\n\n\n\n\n\n\nadduser islandora\n\n\n\n\n\n\npasswd islandora\n\n\n\n\n\n\nislandora\n\n\n\n\n\n\nAdd islandora user to sudoers \necho \"islandora ALL=(ALL) NOPASSWD: ALL\" \n /etc/sudoers.d/islandora\n\n\n\n\n\n\nCreate Docker group \ngroupadd docker\n  \n\n\n\n\n\n\nAdd islandora user to docker group \nusermod -aG docker islandora\n  \n\n\n\n\n\n\nCreate a ssh key for the islandora user\n\n\n\n\n\n\nmkdir /home/islandora/.ssh\n  \n\n\n\n\n\n\nchmod -Rv 700 /home/islandora/.ssh\n  \n\n\n\n\n\n\ncd /home/islandora/.ssh\n  \n\n\n\n\n\n\nssh-keygen\n  \n\n\n\n\nFollow the prompts to save these files to \n/home/islandora/.ssh\n\n\n\n\n\n\n\n\nCreate an \nauthorized_keys\n file in \n/home/islandora/.ssh\nusing a text editor - for example, \nnano\n, \npico\n, \nvi\n or \nemacs\n\n\n\n\n\n\nExample:\n     \nvi /home/islandora/.ssh/authorized_keys\n\n\n\n\n\n\nCopy in the existing ssh key from your own laptop /workstation. This will allow key based ssh access for the enduser.\n\n\n\n\n\n\nconsult your OS docs for the location of your public key if you don't find it here \ncat /Users/endusername/.ssh/id_rsa.pub\n\n\n\n\n\n\nCopy and paste this value exactly into the \n/home/islandora/.ssh/authorized_keys\n file.\n\n\n\n\n\n\n\n\n\n\nExit out of the session as the root user.\n\n\n\n\nexit\n\n\nsu islandora\n  \n\n\n\n\n\n\n\n\nInstall Docker-Compose (version 1.17.1 as of 11/16/2017) as islandora-user on Ubuntu 16.04 LTS\n\n\n\n\n\n\ncd /home/islandora\n\n\n\n\n\n\nsudo curl -L https://github.com/docker/compose/releases/download/1.17.1/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose\n\n\n\n\n\n\nsudo chmod +x /usr/local/bin/docker-compose\n  \n\n\n\n\n\n\nClone ISLE repository\n\n\n\n\n\n\nPlease note in some Linux Distributions, one might need to create the \n/opt\n directory (optional)  \n\n\n\n\n\n\nOne can \nls -lha /\n to see if an \n/opt\n directory exists  \n\n\n\n\n\n\nIf missing, \nsudo mkdir /opt\n  \n\n\n\n\n\n\nIf not missing, proceed to next step.  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncd /opt\n\n\n\n\n\n\nsudo git clone https://github.com/Islandora-Collaboration-Group/ISLE.git\n\n\n\n\n\n\nThis process will take 1 - 3 minutes depending on internet bandwidth\n\n\n\n\n\n\nsudo chown -Rv islandora:islandora ISLE\n\n\n\n\n\n\ncd /opt/ISLE\n\n\n\n\n\n\nNext steps\n\n\nOnce this process has finished one chose to do one of the following:\n\n\n\n\n\n\nTo spin up a test site w/ the built in isle.localdomain URL, continue next steps with the \nDevelopment Site Guide - isle.localdomain\n\n\n\n\n\n\nTo spin up a new site using your own URL, continue next steps with the \nNew Site Guide\n\n\n\n\n\n\nTo spin up a site and migrate in an existing Islandora setup, continue next steps with \nMigration Guide", 
            "title": "Generic Setup"
        }, 
        {
            "location": "/00Host_Server/Host_Server_Setup/#generic-overview-of-the-setup-required-on-the-host-server", 
            "text": "Host Server : Also called \"the host\" - this is the base computer upon which the entire ISLE stack is built - this can be a virtual machine on a laptop (LOCAL), or a server you connected to via ssh (REMOTE).   This generic Host Server Setup Guide is an overview intended to give a general idea of the software and setup required to establish the Docker host. More detailed operating system-specific guides including commands to copy/paste are found in the following pages.  The following setup will be the same if you are building a test on a Virtual Machine on your laptop or using a physical server or cloud setup. In all these cases you'll be establishing an Ubuntu 16.04 or CentOS 7 server with the following parameters:    Ensure you have SSH access to the server as root or w/ sudo privileges:    update the software repositories and then install the following:   openssl  git  htop  ntp  curl   docker-ce  Note: feel free to install additional dev tools if you know what you need/want", 
            "title": "Generic overview of the setup required on the Host Server"
        }, 
        {
            "location": "/00Host_Server/Host_Server_Setup/#create-islandora-user-as-root", 
            "text": "adduser islandora    passwd islandora    islandora    Add islandora user to sudoers  echo \"islandora ALL=(ALL) NOPASSWD: ALL\"   /etc/sudoers.d/islandora    Create Docker group  groupadd docker       Add islandora user to docker group  usermod -aG docker islandora       Create a ssh key for the islandora user    mkdir /home/islandora/.ssh       chmod -Rv 700 /home/islandora/.ssh       cd /home/islandora/.ssh       ssh-keygen      Follow the prompts to save these files to  /home/islandora/.ssh     Create an  authorized_keys  file in  /home/islandora/.ssh using a text editor - for example,  nano ,  pico ,  vi  or  emacs    Example:\n      vi /home/islandora/.ssh/authorized_keys    Copy in the existing ssh key from your own laptop /workstation. This will allow key based ssh access for the enduser.    consult your OS docs for the location of your public key if you don't find it here  cat /Users/endusername/.ssh/id_rsa.pub    Copy and paste this value exactly into the  /home/islandora/.ssh/authorized_keys  file.      Exit out of the session as the root user.   exit  su islandora", 
            "title": "Create islandora user (as root)"
        }, 
        {
            "location": "/00Host_Server/Host_Server_Setup/#install-docker-compose-version-1171-as-of-11162017-as-islandora-user-on-ubuntu-1604-lts", 
            "text": "cd /home/islandora    sudo curl -L https://github.com/docker/compose/releases/download/1.17.1/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose    sudo chmod +x /usr/local/bin/docker-compose", 
            "title": "Install Docker-Compose (version 1.17.1 as of 11/16/2017) as islandora-user on Ubuntu 16.04 LTS"
        }, 
        {
            "location": "/00Host_Server/Host_Server_Setup/#clone-isle-repository", 
            "text": "Please note in some Linux Distributions, one might need to create the  /opt  directory (optional)      One can  ls -lha /  to see if an  /opt  directory exists      If missing,  sudo mkdir /opt       If not missing, proceed to next step.          cd /opt    sudo git clone https://github.com/Islandora-Collaboration-Group/ISLE.git    This process will take 1 - 3 minutes depending on internet bandwidth    sudo chown -Rv islandora:islandora ISLE    cd /opt/ISLE", 
            "title": "Clone ISLE repository"
        }, 
        {
            "location": "/00Host_Server/Host_Server_Setup/#next-steps", 
            "text": "Once this process has finished one chose to do one of the following:    To spin up a test site w/ the built in isle.localdomain URL, continue next steps with the  Development Site Guide - isle.localdomain    To spin up a new site using your own URL, continue next steps with the  New Site Guide    To spin up a site and migrate in an existing Islandora setup, continue next steps with  Migration Guide", 
            "title": "Next steps"
        }, 
        {
            "location": "/00Host_Server/Host_Server_Ubuntu/", 
            "text": "Ubuntu 16.04 LTS - specific version of the setup required on the Host Server\n\n\n\n\nHost Server\n: Also called \"the host\" - this is the base computer upon which the entire ISLE stack is built - this can be a virtual machine on a laptop (LOCAL), or a server you connected to via ssh (REMOTE).\n\n\n\n\nThis is a detailed operating system-specific guides including commands to copy/paste.\n\n\nThe following setup will be the same if you are building a test on a Virtual Machine on your laptop or using a physical server or cloud setup. In all these cases you'll be establishing an Ubuntu 16.04 or CentOS 7 server with the following parameters:\n\n\nDocker setup for Ubuntu 16.04 LTS\n\n\n\n\n\n\nOpen a terminal, ssh to the Ubuntu server as root and install the following:\n\n\n\n\n\n\nIf you are not root, \nsudo -s\n\n\n\n\n\n\napt-get update\n  \n\n\n\n\n\n\napt-get install openssl git htop ntp curl\n  \n\n\n\n\n\n\n\n\n\n\nInstall Docker on Ubuntu 16.04 LTS\n\n\n\n\n\n\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\n  \n\n\n\n\n\n\nadd-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\n  \n\n\n\n\n\n\napt-get update\n  \n\n\n\n\n\n\napt-get install -y docker-ce\n  \n\n\n\n\n\n\nCheck if running \nsystemctl status docker\n  \n\n\n\n\nYou may need to PRESS Shift-Z twice to exit out.\n\n\n\n\n\n\n\n\nCreate islandora user (as root)\n\n\n\n\n\n\nadduser islandora\n\n\n\n\n\n\npasswd islandora\n\n\n\n\n\n\nisle2017\n\n\n\n\n\n\nAdd islandora user to sudoers \necho \"islandora ALL=(ALL) NOPASSWD: ALL\" \n /etc/sudoers.d/islandora\n\n\n\n\n\n\nCreate Docker group \ngroupadd docker\n  \n\n\n\n\n\n\nAdd islandora user to docker group \nusermod -aG docker islandora\n  \n\n\n\n\n\n\nCreate a ssh key for the islandora user\n\n\n\n\n\n\nmkdir /home/islandora/.ssh\n  \n\n\n\n\n\n\nchmod -Rv 700 /home/islandora/.ssh\n  \n\n\n\n\n\n\ncd /home/islandora/.ssh\n  \n\n\n\n\n\n\nssh-keygen\n  \n\n\n\n\nFollow the prompts to save these files to \n/home/islandora/.ssh\n\n\n\n\n\n\n\n\nCreate an \nauthorized_keys\n file in \n/home/islandora/.ssh\nusing one of the following tools: \nnano\n, \npico\n, \nvi\n or \nemacs\n\n\n\n\n\n\nExample:\n     \nvi /home/islandora/.ssh/authorized_keys\n\n\n\n\n\n\nCopy in the existing ssh key from your own laptop /workstation. This will allow key based ssh access for the enduser.\n\n\n\n\n\n\nconsult your OS docs for the location of your public key if you don't find it here \ncat /Users/endusername/.ssh/id_rsa.pub\n\n\n\n\n\n\nCopy and paste this value exactly into the \n/home/islandora/.ssh/authorized_keys\n file.\n\n\n\n\n\n\n\n\n\n\nExit out of the session as the root user.\n\n\n\n\nexit\n\n\nsu islandora\n  \n\n\n\n\n\n\n\n\nInstall Docker-Compose (version 1.17.1 as of 11/16/2017) as islandora-user on Ubuntu 16.04 LTS\n\n\n\n\n\n\ncd /home/islandora\n\n\n\n\n\n\nsudo curl -L https://github.com/docker/compose/releases/download/1.17.1/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose\n\n\n\n\n\n\nsudo chmod +x /usr/local/bin/docker-compose\n  \n\n\n\n\n\n\nClone ISLE repository\n\n\n\n\n\n\nPlease note in some Linux Distributions, one might need to create the \n/opt\n directory (optional)  \n\n\n\n\n\n\nOne can \nls -lha /\n to see if an \n/opt\n directory exists  \n\n\n\n\n\n\nIf missing, \nsudo mkdir /opt\n  \n\n\n\n\n\n\nIf not missing, proceed to next step.  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncd /opt\n\n\n\n\n\n\nsudo git clone https://github.com/Islandora-Collaboration-Group/ISLE.git\n\n\n\n\n\n\nThis process will take 1 - 3 minutes depending on internet bandwidth\n\n\n\n\n\n\nsudo chown -Rv islandora:islandora ISLE\n\n\n\n\n\n\ncd /opt/ISLE\n\n\n\n\n\n\nNext steps\n\n\nOnce this process has finished one chose to do one of the following:\n\n\n\n\n\n\nTo spin up a test site w/ the built in isle.localdomain URL, continue next steps with the \nDevelopment Site Guide - isle.localdomain\n\n\n\n\n\n\nTo spin up a new site using your own URL, continue next steps with the \nNew Site Guide\n\n\n\n\n\n\nTo spin up a site and migrate in an existing Islandora setup, continue next steps with \nMigration Guide", 
            "title": "Ubuntu Setup"
        }, 
        {
            "location": "/00Host_Server/Host_Server_Ubuntu/#ubuntu-1604-lts-specific-version-of-the-setup-required-on-the-host-server", 
            "text": "Host Server : Also called \"the host\" - this is the base computer upon which the entire ISLE stack is built - this can be a virtual machine on a laptop (LOCAL), or a server you connected to via ssh (REMOTE).   This is a detailed operating system-specific guides including commands to copy/paste.  The following setup will be the same if you are building a test on a Virtual Machine on your laptop or using a physical server or cloud setup. In all these cases you'll be establishing an Ubuntu 16.04 or CentOS 7 server with the following parameters:", 
            "title": "Ubuntu 16.04 LTS - specific version of the setup required on the Host Server"
        }, 
        {
            "location": "/00Host_Server/Host_Server_Ubuntu/#docker-setup-for-ubuntu-1604-lts", 
            "text": "Open a terminal, ssh to the Ubuntu server as root and install the following:    If you are not root,  sudo -s    apt-get update       apt-get install openssl git htop ntp curl", 
            "title": "Docker setup for Ubuntu 16.04 LTS"
        }, 
        {
            "location": "/00Host_Server/Host_Server_Ubuntu/#install-docker-on-ubuntu-1604-lts", 
            "text": "curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -       add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"       apt-get update       apt-get install -y docker-ce       Check if running  systemctl status docker      You may need to PRESS Shift-Z twice to exit out.", 
            "title": "Install Docker on Ubuntu 16.04 LTS"
        }, 
        {
            "location": "/00Host_Server/Host_Server_Ubuntu/#create-islandora-user-as-root", 
            "text": "adduser islandora    passwd islandora    isle2017    Add islandora user to sudoers  echo \"islandora ALL=(ALL) NOPASSWD: ALL\"   /etc/sudoers.d/islandora    Create Docker group  groupadd docker       Add islandora user to docker group  usermod -aG docker islandora       Create a ssh key for the islandora user    mkdir /home/islandora/.ssh       chmod -Rv 700 /home/islandora/.ssh       cd /home/islandora/.ssh       ssh-keygen      Follow the prompts to save these files to  /home/islandora/.ssh     Create an  authorized_keys  file in  /home/islandora/.ssh using one of the following tools:  nano ,  pico ,  vi  or  emacs    Example:\n      vi /home/islandora/.ssh/authorized_keys    Copy in the existing ssh key from your own laptop /workstation. This will allow key based ssh access for the enduser.    consult your OS docs for the location of your public key if you don't find it here  cat /Users/endusername/.ssh/id_rsa.pub    Copy and paste this value exactly into the  /home/islandora/.ssh/authorized_keys  file.      Exit out of the session as the root user.   exit  su islandora", 
            "title": "Create islandora user (as root)"
        }, 
        {
            "location": "/00Host_Server/Host_Server_Ubuntu/#install-docker-compose-version-1171-as-of-11162017-as-islandora-user-on-ubuntu-1604-lts", 
            "text": "cd /home/islandora    sudo curl -L https://github.com/docker/compose/releases/download/1.17.1/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose    sudo chmod +x /usr/local/bin/docker-compose", 
            "title": "Install Docker-Compose (version 1.17.1 as of 11/16/2017) as islandora-user on Ubuntu 16.04 LTS"
        }, 
        {
            "location": "/00Host_Server/Host_Server_Ubuntu/#clone-isle-repository", 
            "text": "Please note in some Linux Distributions, one might need to create the  /opt  directory (optional)      One can  ls -lha /  to see if an  /opt  directory exists      If missing,  sudo mkdir /opt       If not missing, proceed to next step.          cd /opt    sudo git clone https://github.com/Islandora-Collaboration-Group/ISLE.git    This process will take 1 - 3 minutes depending on internet bandwidth    sudo chown -Rv islandora:islandora ISLE    cd /opt/ISLE", 
            "title": "Clone ISLE repository"
        }, 
        {
            "location": "/00Host_Server/Host_Server_Ubuntu/#next-steps", 
            "text": "Once this process has finished one chose to do one of the following:    To spin up a test site w/ the built in isle.localdomain URL, continue next steps with the  Development Site Guide - isle.localdomain    To spin up a new site using your own URL, continue next steps with the  New Site Guide    To spin up a site and migrate in an existing Islandora setup, continue next steps with  Migration Guide", 
            "title": "Next steps"
        }, 
        {
            "location": "/00Host_Server/Host_Server_CentOS/", 
            "text": "CentOS 7 - specific version of the setup required on the Host Server\n\n\n\n\nHost Server\n: Also called \"the host\" - this is the base computer upon which the entire ISLE stack is built - this can be a virtual machine on a laptop (LOCAL), or a server you connected to via ssh (REMOTE).\n\n\n\n\nThis is a detailed operating system-specific guides including commands to copy/paste.\n\n\nThe following setup will be the same if you are building a test on a Virtual Machine on your laptop or using a physical server or cloud setup. In all these cases you'll be establishing an Ubuntu 16.04 or CentOS 7 server with the following parameters:\n\n\nDocker setup for CentOS 7\n\n\n\n\nOpen a terminal, ssh to the CentOS server as root and install the following:  \n\n\nyum install openssl git htop ntp wget curl nano\n\n\n\n\n\n\n\n\nInstall Docker on CentOS 7 (as root user)\n\n\n\n\nwget -qO- https://get.docker.com/ | sh\n\n\n\n\nCreate islandora user (as root)\n\n\n\n\n\n\nadduser islandora\n\n\n\n\n\n\npasswd islandora\n\n\n\n\n\n\nisle2017\n\n\n\n\n\n\nAdd islandora user to sudoers \necho \"islandora ALL=(ALL) NOPASSWD: ALL\" \n /etc/sudoers.d/islandora\n\n\n\n\n\n\nCreate Docker group \ngroupadd docker\n  \n\n\n\n\n\n\nAdd islandora user to docker group \nusermod -aG docker islandora\n  \n\n\n\n\n\n\nAdd islandora user to wheel group \nsudo usermod -aG wheel islandora\n\n\n\n\n\n\nCreate a ssh key for the islandora user\n\n\n\n\n\n\nmkdir /home/islandora/.ssh\n  \n\n\n\n\n\n\nchmod -Rv 700 /home/islandora/.ssh\n  \n\n\n\n\n\n\ncd /home/islandora/.ssh\n  \n\n\n\n\n\n\nssh-keygen\n  \n\n\n\n\nFollow the prompts to save these files to \n/home/islandora/.ssh\n\n\n\n\n\n\n\n\nCreate an \nauthorized_keys\n file in \n/home/islandora/.ssh\nusing one of the following tools: \nnano\n, \npico\n, \nvi\n or \nemacs\n\n\n\n\n\n\nExample:\n     \nvi /home/islandora/.ssh/authorized_keys\n\n\n\n\n\n\nCopy in the existing ssh key from your own laptop /workstation. This will allow key based ssh access for the enduser.\n\n\n\n\n\n\nconsult your OS docs for the location of your public key if you don't find it here \ncat /Users/endusername/.ssh/id_rsa.pub\n\n\n\n\n\n\nCopy and paste this value exactly into the \n/home/islandora/.ssh/authorized_keys\n file.\n\n\n\n\n\n\n\n\n\n\nExit out of the ssh session from the host server as the root user \nexit\n\n\n\n\n\n\nssh back in as \nislandora\n\n\n\n\n\n\nEnable the Docker service to start on host server boot\n\n\n\n\nsudo systemctl enable docker.service\n\n\n\n\n\n\n\n\nStart the Docker service\n\n\n\n\nsudo systemctl start docker.service\n\n\n\n\n\n\n\n\nInstall Docker-Compose (version 1.17.1 as of 11/16/2017) as islandora-user on CentOS 7\n\n\n\n\n\n\nOpen a terminal and ssh back into the CentOS Host Server/VM as the \nislandora\n user and perform the following:\n\n\n\n\n\n\nAdd the CENTOS epel-release package repository\n\n\n\n\nsudo yum install epel-release\n\n\n\n\n\n\n\n\nInstall Python Pip (package manager for Python Scripting Language)\n\n\n\n\nsudo yum install -y python-pip\n\n\n\n\n\n\n\n\nUpgrade Python to latest version\n\n\n\n\nsudo yum upgrade python*\n\n\n\n\n\n\n\n\nUpgrade Python Pip\n\n\n\n\nsudo pip install --upgrade pip\n\n\n\n\n\n\n\n\nInstall Docker compose\n\n\n\n\nsudo pip install docker-compose\n\n\n\n\n\n\n\n\nClone ISLE repository\n\n\n\n\n\n\nPlease note in some Linux Distributions, one might need to create the \n/opt\n directory (optional)  \n\n\n\n\n\n\nOne can \nls -lha /\n to see if an \n/opt\n directory exists  \n\n\n\n\n\n\nIf missing, \nsudo mkdir /opt\n  \n\n\n\n\n\n\nIf not missing, proceed to next step.  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncd /opt\n\n\n\n\n\n\nsudo git clone https://github.com/Islandora-Collaboration-Group/ISLE.git\n\n\n\n\n\n\nThis process will take 1 - 3 minutes depending on internet bandwidth\n\n\n\n\n\n\nsudo chown -Rv islandora:islandora ISLE\n\n\n\n\n\n\ncd /opt/ISLE\n\n\n\n\n\n\nNext steps\n\n\nOnce this process has finished one chose to do one of the following:\n\n\n\n\n\n\nTo spin up a test site w/ the built in isle.localdomain URL, continue next steps with the \nDevelopment Site Guide - isle.localdomain\n\n\n\n\n\n\nTo spin up a new site using your own URL, continue next steps with the \nNew Site Guide\n\n\n\n\n\n\nTo spin up a site and migrate in an existing Islandora setup, continue next steps with \nMigration Guide", 
            "title": "CentOS Setup"
        }, 
        {
            "location": "/00Host_Server/Host_Server_CentOS/#centos-7-specific-version-of-the-setup-required-on-the-host-server", 
            "text": "Host Server : Also called \"the host\" - this is the base computer upon which the entire ISLE stack is built - this can be a virtual machine on a laptop (LOCAL), or a server you connected to via ssh (REMOTE).   This is a detailed operating system-specific guides including commands to copy/paste.  The following setup will be the same if you are building a test on a Virtual Machine on your laptop or using a physical server or cloud setup. In all these cases you'll be establishing an Ubuntu 16.04 or CentOS 7 server with the following parameters:", 
            "title": "CentOS 7 - specific version of the setup required on the Host Server"
        }, 
        {
            "location": "/00Host_Server/Host_Server_CentOS/#docker-setup-for-centos-7", 
            "text": "Open a terminal, ssh to the CentOS server as root and install the following:    yum install openssl git htop ntp wget curl nano", 
            "title": "Docker setup for CentOS 7"
        }, 
        {
            "location": "/00Host_Server/Host_Server_CentOS/#install-docker-on-centos-7-as-root-user", 
            "text": "wget -qO- https://get.docker.com/ | sh", 
            "title": "Install Docker on CentOS 7 (as root user)"
        }, 
        {
            "location": "/00Host_Server/Host_Server_CentOS/#create-islandora-user-as-root", 
            "text": "adduser islandora    passwd islandora    isle2017    Add islandora user to sudoers  echo \"islandora ALL=(ALL) NOPASSWD: ALL\"   /etc/sudoers.d/islandora    Create Docker group  groupadd docker       Add islandora user to docker group  usermod -aG docker islandora       Add islandora user to wheel group  sudo usermod -aG wheel islandora    Create a ssh key for the islandora user    mkdir /home/islandora/.ssh       chmod -Rv 700 /home/islandora/.ssh       cd /home/islandora/.ssh       ssh-keygen      Follow the prompts to save these files to  /home/islandora/.ssh     Create an  authorized_keys  file in  /home/islandora/.ssh using one of the following tools:  nano ,  pico ,  vi  or  emacs    Example:\n      vi /home/islandora/.ssh/authorized_keys    Copy in the existing ssh key from your own laptop /workstation. This will allow key based ssh access for the enduser.    consult your OS docs for the location of your public key if you don't find it here  cat /Users/endusername/.ssh/id_rsa.pub    Copy and paste this value exactly into the  /home/islandora/.ssh/authorized_keys  file.      Exit out of the ssh session from the host server as the root user  exit    ssh back in as  islandora    Enable the Docker service to start on host server boot   sudo systemctl enable docker.service     Start the Docker service   sudo systemctl start docker.service", 
            "title": "Create islandora user (as root)"
        }, 
        {
            "location": "/00Host_Server/Host_Server_CentOS/#install-docker-compose-version-1171-as-of-11162017-as-islandora-user-on-centos-7", 
            "text": "Open a terminal and ssh back into the CentOS Host Server/VM as the  islandora  user and perform the following:    Add the CENTOS epel-release package repository   sudo yum install epel-release     Install Python Pip (package manager for Python Scripting Language)   sudo yum install -y python-pip     Upgrade Python to latest version   sudo yum upgrade python*     Upgrade Python Pip   sudo pip install --upgrade pip     Install Docker compose   sudo pip install docker-compose", 
            "title": "Install Docker-Compose (version 1.17.1 as of 11/16/2017) as islandora-user on CentOS 7"
        }, 
        {
            "location": "/00Host_Server/Host_Server_CentOS/#clone-isle-repository", 
            "text": "Please note in some Linux Distributions, one might need to create the  /opt  directory (optional)      One can  ls -lha /  to see if an  /opt  directory exists      If missing,  sudo mkdir /opt       If not missing, proceed to next step.          cd /opt    sudo git clone https://github.com/Islandora-Collaboration-Group/ISLE.git    This process will take 1 - 3 minutes depending on internet bandwidth    sudo chown -Rv islandora:islandora ISLE    cd /opt/ISLE", 
            "title": "Clone ISLE repository"
        }, 
        {
            "location": "/00Host_Server/Host_Server_CentOS/#next-steps", 
            "text": "Once this process has finished one chose to do one of the following:    To spin up a test site w/ the built in isle.localdomain URL, continue next steps with the  Development Site Guide - isle.localdomain    To spin up a new site using your own URL, continue next steps with the  New Site Guide    To spin up a site and migrate in an existing Islandora setup, continue next steps with  Migration Guide", 
            "title": "Next steps"
        }, 
        {
            "location": "/00Host_Server/Host_Server_Setup_Ansible/", 
            "text": "Host Local Setup Guide - Ansible\n\n\nYou have the choice of using Ansible to deploy their Docker Host server instead of performing manual commands. The Ansible script and configuration files can be found in the root folder of the ISLE git repo in a directory named \nansible\n.\n\n\nAnsible is an free open source automation platform / tool which runs on Linux, Mac or BSD, doesn\u2019t use local or remote agents and is relatively easy to setup. Ansible can help with server configuration management, application deployment, task automation and IT orchestration (\nrunning tasks in sequence on several different servers or devices\n).\n\n\nIf you are not familiar with the Ansible, it is recommended to start with their documentation.\n\n\n\n\nAnsible website\n\n\nWhat is Ansible?\n\n\nAnsible Documentation\n\n\n\n\nPlease note:\n For MacOS users using a local ISLE Host VM on their laptop or workstation, please scroll down to \nLine 395\n the section called \n### Host Local Setup - Ansible MacOS ONLY\n\n\nPrerequisites / Assumptions\n\n\n\n\n\n\nFamiliarity or knowledge of Ansible\n\n\n\n\n\n\nAnsible control workstation, laptop or server that runs MacOs, BSD or Linux (Windows doesn't work yet for this) with the following:\n\n\n\n\nAnsible 2.2+\n (choice of \ninstall methods\n)\n\n\nopenssh\n (2.2.x+)\n\n\ngit\n (2.15.1+)\n\n\npython\n (2.7+)\n\n\n\n\nThe \nISLE project repository\n cloned to an appropriate location.\n\n\n\n\n\n\nA previously created ISLE Host Server running either of these operating systems:\n\n\n\n\nUbuntu 16.04 LTS\n\n\n\n\nCentOS 7   \n\n\n\n\n\n\nAn account with ssh access to the ISLE Host Server\n\n\n\n\n\n\nAn account with passwordless sudo access on the ISLE Host Server\n\n\n\n\n\n\nThe IP of the ISLE Host server\n\n\n\n\n\n\n\n\nAnsible Deploy Script Explanation\n\n\nWithin the \ndocker_install.yml\n Ansible playbook, there are the following roles which perform different actions or cause different events on the ISLE Host server.\n\n\n\n\n\n\n\n\nAnsible Role\n\n\nAction / Event\n\n\n\n\n\n\n\n\n\n\ndependencies\n\n\nInstalls software dependencies \n tools as described above\n\n\n\n\n\n\nusers_groups\n\n\nAdds users, groups and updates permissions as described above\n\n\n\n\n\n\ndocker\n\n\nInstalls Docker\n\n\n\n\n\n\ndocker_compose\n\n\nInstalls Docker Compose\n\n\n\n\n\n\ngit_clone\n\n\nClones the current ISLE git repository to \n/opt/ISLE\n\n\n\n\n\n\ndocker_images\n\n\nPulls down the latest ISLE Docker Images from Dockerhub.com\n\n\n\n\n\n\n\n\nInstalls software dependencies \n tools including:\n\n\nThe Ansible script will deploy the following to the ISLE Host server:\n\n\n\n\n\n\n\n\nUbuntu / Debian\n\n\nCentOS\n\n\n\n\n\n\n\n\n\n\nsoftware-properties-common\n\n\nlibselinux-python\n\n\n\n\n\n\npython-software-properties\n\n\nlibsemanage-python\n\n\n\n\n\n\n--\n\n\nyum-utils\n\n\n\n\n\n\nntp\n\n\nntp\n\n\n\n\n\n\nopenssh-client\n\n\nopenssh-clients\n\n\n\n\n\n\nrsync\n\n\nrsync\n\n\n\n\n\n\ncurl\n\n\ncurl\n\n\n\n\n\n\nwget\n\n\nwget\n\n\n\n\n\n\ngit\n\n\ngit\n\n\n\n\n\n\nzip\n\n\nzip\n\n\n\n\n\n\nunzip\n\n\nunzip\n\n\n\n\n\n\nvim\n\n\nvim\n\n\n\n\n\n\nnano\n\n\nnano\n\n\n\n\n\n\nemacs24-nox\n\n\nemacs\n\n\n\n\n\n\nhtop\n\n\nhtop\n\n\n\n\n\n\napt-transport-https\n\n\n--\n\n\n\n\n\n\nca-certificates\n\n\n--\n\n\n\n\n\n\n\n\nMakes ISLE Host service changes\n\n\nPlease Note:\n \nAny of these services can be re-enabled post installation see appropriate documentation for opening ports on firewalls etc.\n\n\n\n\n\n\n\n\nUbuntu / Debian\n\n\nCentOS\n\n\n\n\n\n\n\n\n\n\nenables ntp service\n\n\nenables ntp service\n\n\n\n\n\n\ndisables ufw\n\n\ndisables iptables\n\n\n\n\n\n\n--\n\n\nsets selinux to permissive\n\n\n\n\n\n\n\n\nAdds users, groups and updates permissions\n\n\n\n\nCreates the \nislandora\n user\n\n\nAlong with an appropriate password\n\n\ngenerates a ssh key\n\n\nbestows sudo password-less access\n\n\n\n\nGives the \nislandora\n user the ability to run Docker \n Docker Compose by adding the account to the Docker group.  \n\n\n\n\n\n\nDisables \nroot\n user access via ssh\n\n\n\n\nDisables use of passwords with ssh.\n\n\nkey based access only to the ISLE Host server\n\n\n\n\nInstalls additional software\n\n\n\n\n\n\nDocker\n\n\n\n\n\n\nDocker Compose\n\n\n\n\n\n\nGit clones the ISLE repo to \n/opt/ISLE\n\n\n\n\n\n\nPulls down the most recent ISLE images\n\n\n\n\n\n\nAnsible script directory structure\n\n\nansible\n\u251c\u2500\u2500 docker_install.yml\n\u251c\u2500\u2500 host_vars\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 host_local_macos_isle_localdomain.yml\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 isle-prod-project.institution.yml\n\u251c\u2500\u2500 inventory\n\u2514\u2500\u2500 roles\n    \u251c\u2500\u2500 dependencies\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 ubuntu.yml\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 main.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 centos.yml\n    \u251c\u2500\u2500 docker\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 install.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 main.yml\n    \u251c\u2500\u2500 docker_compose\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 install.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 main.yml\n    \u251c\u2500\u2500 docker_images\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 images_pull.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 main.yml\n    \u251c\u2500\u2500 git_clone\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 git_clone.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 main.yml\n    \u2514\u2500\u2500 users_groups\n        \u251c\u2500\u2500 files\n        \u2502\u00a0\u00a0 \u2514\u2500\u2500 islandora\n        \u2514\u2500\u2500 tasks\n            \u251c\u2500\u2500 groups.yml\n            \u251c\u2500\u2500 main.yml\n            \u251c\u2500\u2500 secure.yml\n            \u251c\u2500\u2500 ssh.yml\n            \u2514\u2500\u2500 users.yml\n\n\n\n\nConfigure Ansible Script to deploy to ISLE Host\n\n\nTo configure the Ansible script to deploy to one's institutional ISLE Host Server, please review and edit the following files within the \nansible\n directory.\n\n\n\n\nansible/docker_install.yml\n\n\nansible/inventory\n\n\nansible/host_vars/isle-prod-project.institution.yml\n\n\n\n\nBasically wherever \nisle-prod-project.institution\n appears as a value in these three files, please replace with the appropriate ISLE Host server fully qualified domain name (\nfqdn\n) e.g. \nyourislesite.institution.com\n\n\nOne can open up and edit all files in a text editor e.g. Atom, Textedit, Textwrangler etc.\n\n\nansible/docker_install.yml\n\n\nThis is the Ansible playbook necessary to deploy software to the ISLE host server.\n\n\n\n\nAt the top of the file remove \nisle-prod-project.institution\n and replace with the appropriate \nfqdn\n.  \n\n\n\n\nansible/inventory.yml\n\n\nThis is the possible list of server(s) to deploy to using Ansible and its associated playbook(s).\n\n\nPlease Note:\n These instructions below are repeated within the file itself.\n\n\n\n\n\n\nLine 7: remove \nisle-prod-project.institution\n from in between the brackets and replace with the appropriate \nfqdn\n\n\n\n\n\n\nLine 8: Add the appropriate ISLE Host server user account that has \nsudo\n passwordless permissions to the end of \nansible_ssh_user=\n\n\nExample\n: \nansible_ssh_user=janesmith\n\n\n\n\n\n\nLine 8: Add the appropriate path to this ISLE Host Server user accounts public ssh key to the end of \nansible_ssh_private_key_file=\n\n\n\n\n\n\nExample\n of inventory using settings for local Ansible deploy laptop:\n\n\n\n\n\n\nansible_ssh_private_key_file=/home/janesmith/.ssh/id_rsa.pub\n\n\n\n\nPlease Note:\n This key is typically found on the local control (Ansible deploy laptop / workstation) system and should have been previously copied to the appropriate ISLE Host server user account's \n/home/islehostserver_user/.ssh/authorized_keys\n file.\n\n\n\n\nFinal Example\n end result for inventory file with all settings above\n\n\n\n\n[yourislesite.institution.com]   \nyourislesite.institution.com ansible_connection=ssh ansible_ssh_user=janesmith ansible_ssh_private_key_file=/home/janesmith/.ssh/id_rsa.pub\n\n\n\n\nansible/isle-prod-project.institution.yml\n\n\n\n\n\n\nCopy this file and rename the copy to with the appropriate \nfqdn\n\n\n\n\n\n\nExample\n of how \nhost_vars\n directory should now contain two files:  \n\n\n\n\n\n\nansible\n\u251c\u2500\u2500 docker_install.yml\n\u251c\u2500\u2500 host_vars\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 isle-prod-project.institution.yml\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 yourislesite.institution.com.yml\n\u251c\u2500\u2500 inventory\n\u2514\u2500\u2500 roles\n\n\n\n\n\n\n\n\nEdit the following lines within the newly created file i.e. \nyourislesite.institution.com.yml\n and remove the comments (#) as asked\n\n\n\n\n\n\nPlease Note:\n \nThe \nfqdn\n in the \ninventory\n file should match this filename as well.\n\n\n\n\n\n\nExamples ONLY\n (\nDo not enter these literal values\n)  \n\n\n\n\n\n\nLine 9: \nansible_ssh_host: 192.168.1.16\n\n\n\n\nThis is the IP address of the ISLE Host server\n\n\n\n\n\n\n\n\nLine 10: \nansible_ssh_user: janesmith\n  \n\n\n\n\nThis is the appropriate ISLE Host server user account that has \nsudo\n passwordless permissions.\n\n\n\n\n\n\n\n\nLine 15: \npub_locale: /home/janesmith/.ssh/id_rsa.pub\n\n\n\n\nThis is the key found on the local control (Ansible deploy laptop / workstation) system which has been previously copied to the appropriate ISLE Host server user account's \n/home/islehostserver_user/.ssh/authorized_keys\n file.\n\n\n\n\n\n\n\n\n\n\nAnsible commands to test connection\n\n\n\n\nTest if the Ansible control laptop / workstation can connect to the ISLE Host server by running these commands. On the local Ansible control laptop / workstation, open a terminal window and enter the following:\n\n\n\n\ncd /path/to/ISLE/repo/ansible\n\nansible -i inventory isle-host-server -m ping\n\n\n\n\n\n\nExample\n output of above command (\nIGNORE THE WARNING\n)\n\n\n\n\n[WARNING]: Found both group and host with same name: isle-host-server   \n\nisle-host-server | SUCCESS =\n {\n     \nchanged\n: false,\n     \nping\n: \npong\n\n   }\n\n\n\n\nPlease Note:\n \nIf SUCCESS doesn't appear as a value or if the wording of the prompt is in RED with \"host doesn't exist ...\", review all steps above and check the settings. Do not advance until the \nExample\n output above matches.\n  \n\n\nAnsible commands for deploy\n\n\n\n\n\n\nTo deploy to the ISLE Host Server, run this command.\n\n\nansible-playbook -i inventory docker_install.yml\n\n\n\n\n\n\nAnsible will start displaying output within the terminal. If any turn red and the script terminates, please review the above settings and connectivity to the server. Attempt to rerun the script.\n\n\nQC Review checklist\n\n\nTo ensure a successful deploy to the ISLE Server, please review the following to ensure that the deploy to the Islandora Host server was successful.\n\n\nOpen a terminal window on the Ansible control laptop /workstation and \nssh\n into the Islandora Host server using the appropriate enduser account setup prior to the deploy.\n\n\nExample\n:\n\n\nssh enduser@isle-prod-project.institution\n\n\n\n\nDocker\n\n\n\n\n\n\nTo check where Docker has been installed to, enter:  \n\n\nwhich docker\n    \n\n\nExample\n output:      \n\n\n/usr/bin/docker\n\n\n\n\n\n\nTo check which version of Docker has been installed, enter:\n\n\ndocker --version\n\n\nExample\n output:\n\n\nDocker version 17.12.0-ce, build c97c6d6\n\n\n\n\n\n\nTo check if Docker is running, enter:\n\n\nservice docker status\n   \n\n\nExample\n output:\n\n\n\n\n\n\nRedirecting to /bin/systemctl status docker.service\n\u25cf docker.service - Docker Application Container Engine\n  Loaded: loaded (/usr/lib/systemd/system/docker.service; enabled; vendor preset: disabled)\n  Active: active (running) since Thu 2018-01-18 14:36:55 EST; 1 weeks 4 days ago\n    Docs: https://docs.docker.com\nMain PID: 23066 (dockerd)\n  Memory: 55.3M\n....\n\n\n\n\n\n\n\n\nTo check if the ISLE images have been downloaded on the ISLE Host server, enter:\n\n\ndocker image ls\n\n\nExample\n output:  \n\n\n\n\n\n\nREPOSITORY                         TAG                 IMAGE ID            CREATED             SIZE\nislandoracollabgroup/isle-fedora   latest              6e2749ca2c2f        2 weeks ago         2.43GB\nislandoracollabgroup/isle-apache   latest              82fe4ae16932        2 weeks ago         2.18GB\nislandoracollabgroup/isle-solr     latest              7fba26c10433        2 weeks ago         784MB\nislandoracollabgroup/isle-mysql    latest              f34162f1e0f8        2 weeks ago         299MB\nislandoracollabgroup/isle-proxy    latest              5gdc45f1a074        2 weeks ago         199MB\n\n\n\n\nDocker Compose\n\n\n\n\n\n\nTo check where Docker-compose has been installed to, enter:  \n\n\nwhich docker-compose\n\n\nExample\n output:\n\n\n/usr/local/bin/docker-compose\n\n\n\n\n\n\nTo check which version of Docker-compose has been installed, enter:\n\n\ndocker-compose -version\n\n\nExample\n output:\n\n\ndocker-compose version 1.17.1, build 6d101fb\n\n\n\n\n\n\nIslandora user\n\n\n\n\n\n\nTo check if the \nislandora\n user has been created, enter:\n\n\ncat /etc/passwd\n  \n\n\nExample\n output:\n\n\nislandora:x:1002:1002::/home/islandora:/bin/bash\n\n\n\n\n\n\nISLE Project directory\n\n\n\n\n\n\nTo check if the ISLE project git repo has been cloned to \n/opt/ISLE\n, enter:\n\n\nls -lh /opt/ISLE\n\n\nExample\n output:\n\n\n\n\n\n\ntotal 24K\ndrwxr-xr-x. 3 islandora islandora  110 Jan 17 09:17 apache\ndrwxr-xr-x. 5 islandora islandora   84 Jan 23 13:44 config\n-rwxr-xr-x. 1 islandora islandora 2.0K Jan 18 16:58 docker-compose.yml\ndrwxr-xr-x. 7 islandora islandora  143 Jan 17 09:17 docs\ndrwxr-xr-x. 7 islandora islandora  102 Jan 17 09:17 fedora\n-rwxr-xr-x. 1 islandora islandora  12K Jan 17 09:17 mkdocs.yml\ndrwxr-xr-x. 3 islandora islandora   54 Jan 17 09:17 mysql\ndrwxr-xr-x. 3 islandora islandora   54 Jan 17 09:17 proxy\n-rwxr-xr-x. 1 islandora islandora 4.1K Jan 17 09:17 README.md\ndrwxr-xr-x. 4 islandora islandora   50 Jan 17 09:17 solr\n\n\n\n\nOnce this script has finished one can:\n\n\n\n\n\n\nAdd any appropriate public ssh keys to \n/home/islandora/.ssh/authorized_keys\n prior to attempting to ssh to the Islandora Host server as the \nislandora\n user.\n\n\n\n\n\n\nAdd the \n/home/islandora/.ssh/id_rsa.pub\n key to any git repository contained within the Migration Guide. (Additional instructions appear in that guide if this process is unfamiliar.)\n\n\n\n\n\n\nProceed to bottom of this page for next steps.\n\n\n\n\nHost Local Setup - Ansible MacOS ONLY\n\n\n\n\n\n\nTo install \nAnsible\n on the enduser's MacOS laptop / workstation.\n\n\n\n\n\n\nInstall Ansible via Python pip\n\n\n\n\nFollow here http://docs.ansible.com/ansible/latest/intro_installation.html#latest-releases-via-pip\n\n\n\n\n\n\n\n\nOr install Ansible via Homebrew (better)\n\n\n\n\n/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n\n\nbrew install ansible\n\n\n\n\n\n\n\n\nThere is a ready made Ansible script for the MacOS hosted isle.localdomain called \nansible/host_vars/host_local_macos_isle_localdomain.yml\n\n\n\n\n\n\nUse \nvagrant\n for the \nansible_ssh_user=\n value in the \nansible/inventory\n file\n\n\n\n\n\n\nUse \n~/Users/enduser/.vagrant.d/insecure_private_key\n for the \nansible_ssh_private_key_file\n value in the \nansible/inventory\n file\n\n\n\n\n\n\nExample\n\n\n[host_local_macos_isle_localdomain]\nhost_local_macos_isle_localdomain ansible_connection=ssh ansible_ssh_user=vagrant ansible_ssh_private_key_file=/Users/enduser/.vagrant.d/insecure_private_key\n\n\n\n\n\n\n\n\nLine 13\n in the \nansible/host_vars/host_local_macos_isle_localdomain.yml\n file will need to be edited with the correct path to the enduser's id_rsa.pub  file. Change the \nenduser\n value to the real username. (\nassumes the\n \nid_rsa.pub\n \nfile exists!\n)\n\n\n\n\n\n\nLine 3\n in the \nansible/docker_install.yml\n file will need to be edited, change the value of \nisle-prod-project.institution\n to \nhost_local_macos_isle_localdomain\n\n\n\n\n\n\nOnce these files have been edited, open a terminal and enter:\n\n\n\n\n\n\ncd path_to/ISLE/ansible/\n\n\n\n\n\n\nTest the connection to the ISLE Host Vagrant Ubuntu VM\n\n\n\n\n\n\nansible -i inventory host_local_macos_isle_localdomain -m ping\n\n\n\n\n\n\nExample\n output of above command (\nIGNORE THE WARNING\n)\n\n\n\n\n\n\n\n\n\n\n[WARNING]: Found both group and host with same name: host_local_macos_isle_localdomain   \nhost_local_macos_isle_localdomain | SUCCESS =\n {\n   \nchanged\n: false,\n   \nping\n: \npong\n\n }\n\n\n\n\nPlease Note:\n \nIf SUCCESS doesn't appear as a value or if the wording of the prompt is in RED with \"host doesn't exist ...\", review all steps above and check the settings. Do not advance until the \nExample\n output above matches.\n  \n\n\n\n\nTo deploy to the ISLE Host Server, run this command.\n\n\n\n\nansible-playbook -i inventory docker_install.yml\n\n\nAnsible will start displaying output within the terminal. If any turn red and the script terminates, please review the above settings and connectivity to the server. Attempt to rerun the script.", 
            "title": "Ansible Setup"
        }, 
        {
            "location": "/00Host_Server/Host_Server_Setup_Ansible/#host-local-setup-guide-ansible", 
            "text": "You have the choice of using Ansible to deploy their Docker Host server instead of performing manual commands. The Ansible script and configuration files can be found in the root folder of the ISLE git repo in a directory named  ansible .  Ansible is an free open source automation platform / tool which runs on Linux, Mac or BSD, doesn\u2019t use local or remote agents and is relatively easy to setup. Ansible can help with server configuration management, application deployment, task automation and IT orchestration ( running tasks in sequence on several different servers or devices ).  If you are not familiar with the Ansible, it is recommended to start with their documentation.   Ansible website  What is Ansible?  Ansible Documentation   Please note:  For MacOS users using a local ISLE Host VM on their laptop or workstation, please scroll down to  Line 395  the section called  ### Host Local Setup - Ansible MacOS ONLY", 
            "title": "Host Local Setup Guide - Ansible"
        }, 
        {
            "location": "/00Host_Server/Host_Server_Setup_Ansible/#prerequisites-assumptions", 
            "text": "Familiarity or knowledge of Ansible    Ansible control workstation, laptop or server that runs MacOs, BSD or Linux (Windows doesn't work yet for this) with the following:   Ansible 2.2+  (choice of  install methods )  openssh  (2.2.x+)  git  (2.15.1+)  python  (2.7+)   The  ISLE project repository  cloned to an appropriate location.    A previously created ISLE Host Server running either of these operating systems:   Ubuntu 16.04 LTS   CentOS 7       An account with ssh access to the ISLE Host Server    An account with passwordless sudo access on the ISLE Host Server    The IP of the ISLE Host server", 
            "title": "Prerequisites / Assumptions"
        }, 
        {
            "location": "/00Host_Server/Host_Server_Setup_Ansible/#ansible-deploy-script-explanation", 
            "text": "Within the  docker_install.yml  Ansible playbook, there are the following roles which perform different actions or cause different events on the ISLE Host server.     Ansible Role  Action / Event      dependencies  Installs software dependencies   tools as described above    users_groups  Adds users, groups and updates permissions as described above    docker  Installs Docker    docker_compose  Installs Docker Compose    git_clone  Clones the current ISLE git repository to  /opt/ISLE    docker_images  Pulls down the latest ISLE Docker Images from Dockerhub.com", 
            "title": "Ansible Deploy Script Explanation"
        }, 
        {
            "location": "/00Host_Server/Host_Server_Setup_Ansible/#installs-software-dependencies-tools-including", 
            "text": "The Ansible script will deploy the following to the ISLE Host server:     Ubuntu / Debian  CentOS      software-properties-common  libselinux-python    python-software-properties  libsemanage-python    --  yum-utils    ntp  ntp    openssh-client  openssh-clients    rsync  rsync    curl  curl    wget  wget    git  git    zip  zip    unzip  unzip    vim  vim    nano  nano    emacs24-nox  emacs    htop  htop    apt-transport-https  --    ca-certificates  --", 
            "title": "Installs software dependencies &amp; tools including:"
        }, 
        {
            "location": "/00Host_Server/Host_Server_Setup_Ansible/#makes-isle-host-service-changes", 
            "text": "Please Note:   Any of these services can be re-enabled post installation see appropriate documentation for opening ports on firewalls etc.     Ubuntu / Debian  CentOS      enables ntp service  enables ntp service    disables ufw  disables iptables    --  sets selinux to permissive", 
            "title": "Makes ISLE Host service changes"
        }, 
        {
            "location": "/00Host_Server/Host_Server_Setup_Ansible/#adds-users-groups-and-updates-permissions", 
            "text": "Creates the  islandora  user  Along with an appropriate password  generates a ssh key  bestows sudo password-less access   Gives the  islandora  user the ability to run Docker   Docker Compose by adding the account to the Docker group.      Disables  root  user access via ssh   Disables use of passwords with ssh.  key based access only to the ISLE Host server", 
            "title": "Adds users, groups and updates permissions"
        }, 
        {
            "location": "/00Host_Server/Host_Server_Setup_Ansible/#installs-additional-software", 
            "text": "Docker    Docker Compose    Git clones the ISLE repo to  /opt/ISLE    Pulls down the most recent ISLE images", 
            "title": "Installs additional software"
        }, 
        {
            "location": "/00Host_Server/Host_Server_Setup_Ansible/#ansible-script-directory-structure", 
            "text": "ansible\n\u251c\u2500\u2500 docker_install.yml\n\u251c\u2500\u2500 host_vars\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 host_local_macos_isle_localdomain.yml\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 isle-prod-project.institution.yml\n\u251c\u2500\u2500 inventory\n\u2514\u2500\u2500 roles\n    \u251c\u2500\u2500 dependencies\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 ubuntu.yml\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 main.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 centos.yml\n    \u251c\u2500\u2500 docker\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 install.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 main.yml\n    \u251c\u2500\u2500 docker_compose\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 install.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 main.yml\n    \u251c\u2500\u2500 docker_images\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 images_pull.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 main.yml\n    \u251c\u2500\u2500 git_clone\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 git_clone.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 main.yml\n    \u2514\u2500\u2500 users_groups\n        \u251c\u2500\u2500 files\n        \u2502\u00a0\u00a0 \u2514\u2500\u2500 islandora\n        \u2514\u2500\u2500 tasks\n            \u251c\u2500\u2500 groups.yml\n            \u251c\u2500\u2500 main.yml\n            \u251c\u2500\u2500 secure.yml\n            \u251c\u2500\u2500 ssh.yml\n            \u2514\u2500\u2500 users.yml", 
            "title": "Ansible script directory structure"
        }, 
        {
            "location": "/00Host_Server/Host_Server_Setup_Ansible/#configure-ansible-script-to-deploy-to-isle-host", 
            "text": "To configure the Ansible script to deploy to one's institutional ISLE Host Server, please review and edit the following files within the  ansible  directory.   ansible/docker_install.yml  ansible/inventory  ansible/host_vars/isle-prod-project.institution.yml   Basically wherever  isle-prod-project.institution  appears as a value in these three files, please replace with the appropriate ISLE Host server fully qualified domain name ( fqdn ) e.g.  yourislesite.institution.com  One can open up and edit all files in a text editor e.g. Atom, Textedit, Textwrangler etc.", 
            "title": "Configure Ansible Script to deploy to ISLE Host"
        }, 
        {
            "location": "/00Host_Server/Host_Server_Setup_Ansible/#ansibledocker_installyml", 
            "text": "This is the Ansible playbook necessary to deploy software to the ISLE host server.   At the top of the file remove  isle-prod-project.institution  and replace with the appropriate  fqdn .", 
            "title": "ansible/docker_install.yml"
        }, 
        {
            "location": "/00Host_Server/Host_Server_Setup_Ansible/#ansibleinventoryyml", 
            "text": "This is the possible list of server(s) to deploy to using Ansible and its associated playbook(s).  Please Note:  These instructions below are repeated within the file itself.    Line 7: remove  isle-prod-project.institution  from in between the brackets and replace with the appropriate  fqdn    Line 8: Add the appropriate ISLE Host server user account that has  sudo  passwordless permissions to the end of  ansible_ssh_user=  Example :  ansible_ssh_user=janesmith    Line 8: Add the appropriate path to this ISLE Host Server user accounts public ssh key to the end of  ansible_ssh_private_key_file=    Example  of inventory using settings for local Ansible deploy laptop:    ansible_ssh_private_key_file=/home/janesmith/.ssh/id_rsa.pub  Please Note:  This key is typically found on the local control (Ansible deploy laptop / workstation) system and should have been previously copied to the appropriate ISLE Host server user account's  /home/islehostserver_user/.ssh/authorized_keys  file.   Final Example  end result for inventory file with all settings above   [yourislesite.institution.com]   \nyourislesite.institution.com ansible_connection=ssh ansible_ssh_user=janesmith ansible_ssh_private_key_file=/home/janesmith/.ssh/id_rsa.pub", 
            "title": "ansible/inventory.yml"
        }, 
        {
            "location": "/00Host_Server/Host_Server_Setup_Ansible/#ansibleisle-prod-projectinstitutionyml", 
            "text": "Copy this file and rename the copy to with the appropriate  fqdn    Example  of how  host_vars  directory should now contain two files:      ansible\n\u251c\u2500\u2500 docker_install.yml\n\u251c\u2500\u2500 host_vars\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 isle-prod-project.institution.yml\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 yourislesite.institution.com.yml\n\u251c\u2500\u2500 inventory\n\u2514\u2500\u2500 roles    Edit the following lines within the newly created file i.e.  yourislesite.institution.com.yml  and remove the comments (#) as asked    Please Note:   The  fqdn  in the  inventory  file should match this filename as well.    Examples ONLY  ( Do not enter these literal values )      Line 9:  ansible_ssh_host: 192.168.1.16   This is the IP address of the ISLE Host server     Line 10:  ansible_ssh_user: janesmith      This is the appropriate ISLE Host server user account that has  sudo  passwordless permissions.     Line 15:  pub_locale: /home/janesmith/.ssh/id_rsa.pub   This is the key found on the local control (Ansible deploy laptop / workstation) system which has been previously copied to the appropriate ISLE Host server user account's  /home/islehostserver_user/.ssh/authorized_keys  file.", 
            "title": "ansible/isle-prod-project.institution.yml"
        }, 
        {
            "location": "/00Host_Server/Host_Server_Setup_Ansible/#ansible-commands-to-test-connection", 
            "text": "Test if the Ansible control laptop / workstation can connect to the ISLE Host server by running these commands. On the local Ansible control laptop / workstation, open a terminal window and enter the following:   cd /path/to/ISLE/repo/ansible\n\nansible -i inventory isle-host-server -m ping   Example  output of above command ( IGNORE THE WARNING )   [WARNING]: Found both group and host with same name: isle-host-server   \n\nisle-host-server | SUCCESS =  {\n      changed : false,\n      ping :  pong \n   }  Please Note:   If SUCCESS doesn't appear as a value or if the wording of the prompt is in RED with \"host doesn't exist ...\", review all steps above and check the settings. Do not advance until the  Example  output above matches.", 
            "title": "Ansible commands to test connection"
        }, 
        {
            "location": "/00Host_Server/Host_Server_Setup_Ansible/#ansible-commands-for-deploy", 
            "text": "To deploy to the ISLE Host Server, run this command.  ansible-playbook -i inventory docker_install.yml    Ansible will start displaying output within the terminal. If any turn red and the script terminates, please review the above settings and connectivity to the server. Attempt to rerun the script.", 
            "title": "Ansible commands for deploy"
        }, 
        {
            "location": "/00Host_Server/Host_Server_Setup_Ansible/#qc-review-checklist", 
            "text": "To ensure a successful deploy to the ISLE Server, please review the following to ensure that the deploy to the Islandora Host server was successful.  Open a terminal window on the Ansible control laptop /workstation and  ssh  into the Islandora Host server using the appropriate enduser account setup prior to the deploy.  Example :  ssh enduser@isle-prod-project.institution", 
            "title": "QC Review checklist"
        }, 
        {
            "location": "/00Host_Server/Host_Server_Setup_Ansible/#docker", 
            "text": "To check where Docker has been installed to, enter:    which docker       Example  output:        /usr/bin/docker    To check which version of Docker has been installed, enter:  docker --version  Example  output:  Docker version 17.12.0-ce, build c97c6d6    To check if Docker is running, enter:  service docker status      Example  output:    Redirecting to /bin/systemctl status docker.service\n\u25cf docker.service - Docker Application Container Engine\n  Loaded: loaded (/usr/lib/systemd/system/docker.service; enabled; vendor preset: disabled)\n  Active: active (running) since Thu 2018-01-18 14:36:55 EST; 1 weeks 4 days ago\n    Docs: https://docs.docker.com\nMain PID: 23066 (dockerd)\n  Memory: 55.3M\n....    To check if the ISLE images have been downloaded on the ISLE Host server, enter:  docker image ls  Example  output:      REPOSITORY                         TAG                 IMAGE ID            CREATED             SIZE\nislandoracollabgroup/isle-fedora   latest              6e2749ca2c2f        2 weeks ago         2.43GB\nislandoracollabgroup/isle-apache   latest              82fe4ae16932        2 weeks ago         2.18GB\nislandoracollabgroup/isle-solr     latest              7fba26c10433        2 weeks ago         784MB\nislandoracollabgroup/isle-mysql    latest              f34162f1e0f8        2 weeks ago         299MB\nislandoracollabgroup/isle-proxy    latest              5gdc45f1a074        2 weeks ago         199MB", 
            "title": "Docker"
        }, 
        {
            "location": "/00Host_Server/Host_Server_Setup_Ansible/#docker-compose", 
            "text": "To check where Docker-compose has been installed to, enter:    which docker-compose  Example  output:  /usr/local/bin/docker-compose    To check which version of Docker-compose has been installed, enter:  docker-compose -version  Example  output:  docker-compose version 1.17.1, build 6d101fb", 
            "title": "Docker Compose"
        }, 
        {
            "location": "/00Host_Server/Host_Server_Setup_Ansible/#islandora-user", 
            "text": "To check if the  islandora  user has been created, enter:  cat /etc/passwd     Example  output:  islandora:x:1002:1002::/home/islandora:/bin/bash", 
            "title": "Islandora user"
        }, 
        {
            "location": "/00Host_Server/Host_Server_Setup_Ansible/#isle-project-directory", 
            "text": "To check if the ISLE project git repo has been cloned to  /opt/ISLE , enter:  ls -lh /opt/ISLE  Example  output:    total 24K\ndrwxr-xr-x. 3 islandora islandora  110 Jan 17 09:17 apache\ndrwxr-xr-x. 5 islandora islandora   84 Jan 23 13:44 config\n-rwxr-xr-x. 1 islandora islandora 2.0K Jan 18 16:58 docker-compose.yml\ndrwxr-xr-x. 7 islandora islandora  143 Jan 17 09:17 docs\ndrwxr-xr-x. 7 islandora islandora  102 Jan 17 09:17 fedora\n-rwxr-xr-x. 1 islandora islandora  12K Jan 17 09:17 mkdocs.yml\ndrwxr-xr-x. 3 islandora islandora   54 Jan 17 09:17 mysql\ndrwxr-xr-x. 3 islandora islandora   54 Jan 17 09:17 proxy\n-rwxr-xr-x. 1 islandora islandora 4.1K Jan 17 09:17 README.md\ndrwxr-xr-x. 4 islandora islandora   50 Jan 17 09:17 solr  Once this script has finished one can:    Add any appropriate public ssh keys to  /home/islandora/.ssh/authorized_keys  prior to attempting to ssh to the Islandora Host server as the  islandora  user.    Add the  /home/islandora/.ssh/id_rsa.pub  key to any git repository contained within the Migration Guide. (Additional instructions appear in that guide if this process is unfamiliar.)    Proceed to bottom of this page for next steps.", 
            "title": "ISLE Project directory"
        }, 
        {
            "location": "/00Host_Server/Host_Server_Setup_Ansible/#host-local-setup-ansible-macos-only", 
            "text": "To install  Ansible  on the enduser's MacOS laptop / workstation.    Install Ansible via Python pip   Follow here http://docs.ansible.com/ansible/latest/intro_installation.html#latest-releases-via-pip     Or install Ansible via Homebrew (better)   /usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"  brew install ansible     There is a ready made Ansible script for the MacOS hosted isle.localdomain called  ansible/host_vars/host_local_macos_isle_localdomain.yml    Use  vagrant  for the  ansible_ssh_user=  value in the  ansible/inventory  file    Use  ~/Users/enduser/.vagrant.d/insecure_private_key  for the  ansible_ssh_private_key_file  value in the  ansible/inventory  file    Example  [host_local_macos_isle_localdomain]\nhost_local_macos_isle_localdomain ansible_connection=ssh ansible_ssh_user=vagrant ansible_ssh_private_key_file=/Users/enduser/.vagrant.d/insecure_private_key    Line 13  in the  ansible/host_vars/host_local_macos_isle_localdomain.yml  file will need to be edited with the correct path to the enduser's id_rsa.pub  file. Change the  enduser  value to the real username. ( assumes the   id_rsa.pub   file exists! )    Line 3  in the  ansible/docker_install.yml  file will need to be edited, change the value of  isle-prod-project.institution  to  host_local_macos_isle_localdomain    Once these files have been edited, open a terminal and enter:    cd path_to/ISLE/ansible/    Test the connection to the ISLE Host Vagrant Ubuntu VM    ansible -i inventory host_local_macos_isle_localdomain -m ping    Example  output of above command ( IGNORE THE WARNING )      [WARNING]: Found both group and host with same name: host_local_macos_isle_localdomain   \nhost_local_macos_isle_localdomain | SUCCESS =  {\n    changed : false,\n    ping :  pong \n }  Please Note:   If SUCCESS doesn't appear as a value or if the wording of the prompt is in RED with \"host doesn't exist ...\", review all steps above and check the settings. Do not advance until the  Example  output above matches.      To deploy to the ISLE Host Server, run this command.   ansible-playbook -i inventory docker_install.yml  Ansible will start displaying output within the terminal. If any turn red and the script terminates, please review the above settings and connectivity to the server. Attempt to rerun the script.", 
            "title": "Host Local Setup - Ansible MacOS ONLY"
        }, 
        {
            "location": "/01_Installation_Migration/01_0_Installation/", 
            "text": "Installation: I want to...\n\n\n\n\n\n\nCreate a test Islandora installation using ISLE on my laptop\n \nTest Site Install\n\n\n\n\nUses built-in test domain / URL of \nisle.localdomain\n\n\nLocation: laptop or desktop personal computer\n\n\nIf you are testing for a future migration, please review the instructions in the \nMigration Guide\n\n\n\n\n\n\n\n\nCreate a brand new Islandora installation for my institution using ISLE\n \nNew Site Install\n\n\n\n\nLocation: production or staging server. Examples: institutional server, virtual machine server (vm), or cloud-based server (AWS)\n\n\n\n\n\n\n\n\nMigrate my existing production Islandora installation to an ISLE production environment\n \nMigration Install\n\n\n\n\nLocation: production or staging server. Examples: institutional server, virtual machine server (vm), or cloud-based server (AWS)", 
            "title": "Installation Overview"
        }, 
        {
            "location": "/01_Installation_Migration/01_1_testsite_guide/", 
            "text": "Development Site Guide - isle.localdomain\n\n\nFollow this guide to spin up and install ISLE with no URL utilizing the built-in \nisle-localdomain\n name for review and testing.\n\n\nThis test ISLE / Islandora environment (\nisle.localdomain\n) includes an un-themed Drupal website and empty Fedora repository for endusers to develop code, test ingests, test metadata, update fields in SOLR indexing and otherwise \"kick the tires\" on ISLE prior for further usages e.g. creating a new ISLE production site or migrating a current Islandora production site to ISLE.\n\n\nAssumptions / Prerequisites\n\n\n\n\n\n\nLaptop / workstation that conforms to the specifications outlined in the \nSystem Requirements\n\n\n\n\n\n\nInstructions below assume a MacOS or Linux laptop or workstation. Windows users may have to swap out various tools as needed.\n\n\n\n\n\n\nThis test site guide is designed for a local laptop / workstation running one of the following:\n\n\n\n\nusing the supplied Vagrant setup found in the \nvagrant\n directory at the root of the ISLE project (\nVagrant with Virtualbox\n)\n\n\na manually setup CentOS or Ubuntu Virtualbox VM (\nno Vagrant\n)\n\n\nDocker installed and running on the VM as directed by one of the host server setup pages.\n\n\nCan connect to the VM by SSH using a terminal on their laptop or workstation.\n\n\n\n\n\n\nDocker for Mac\n\n\n\n\n\n\n\n\n\n\nEdit /etc/localhost\n\n\nEdit 1: Vagrant only\n\n\n\n\nVagrant\n If you are using Vagrant on a laptop move on to the next section (\nSummary: Test site launch process\n) as this part is handled automatically.\n\n\n\n\n\n\nEdit 1: VM only\n\n\n\n\nVM\n If you are using a local Virtualbox VM (CentOS / Ubuntu) but not Vagrant to host ISLE, one will need to get the VM IP address prior to attempting the  steps below.\n\n\n\n\nPlease note:\n* By default the example tool given below of \nnano\n may not be installed on the VM.\n  * If the enduser hasn't installed it before on a CentOS VM, then please run \nsudo yum install nano\n.\n  * If the enduser hasn't installed it before on a Ubuntu VM, then please run \nsudo apt-get install nano\n.\n  * If you are familiar with other command-line tools then you are welcome to substitute.\n\n\n\n\n\n\nAdd the values of \nVM IP here\n isle.localdomain apache solr mysql fedora\n to the laptop / workstation's \n/etc/hosts\n file.   \n\n\n\n\n\n\nOpen a terminal on the local laptop\n\n\n\n\n\n\nEnter: \nsudo nano /etc/hosts\n\n\n\n\n\n\nFor endusers familiar with editing files on the command line, vim or alternative tools can be used in lieu of nano\n\n\n\n\n\n\nEnter the laptop enduser password\n\n\n\n\n\n\nAdd the values below the \n127.0.0.1\n entry in the \n/etc/hosts\n file.\n\n\n\n\n\n\nVM IP here\n isle.localdomain\n with a space in between the entries.  \n\n\n\n\n\n\nExample\n (\nPlease do not literally use the IP given below, it may be different after the manual CentOS VM creation\n)\n\n\n  127.0.0.1 localhost\n  192.168.10.10 isle.localdomain`\n\n\n\n\n\n\nEnter \nCntrl\n and the letter \no\n together to write the changes to the file.\n\n\nEnter \nCntrl\n and the letter \nx\n together to exit the file.\n\n\n\n\n\n\nEdit 1: Docker for Mac only\n\n\n\n\n\n\nDocker For Mac\n If you are using Docker For Mac, then use the IP address of \n127.0.0.1\n\n\n\n\n\n\nOpen a terminal on the local laptop\n\n\n\n\n\n\nEnter: \nsudo nano /etc/hosts\n\n\n\n\n\n\nFor endusers familiar with editing files on the command line, vim or alternative tools can be used in lieu of nano\n\n\n\n\n\n\nEnter the laptop enduser password\n\n\n\n\n\n\nAdd the values next to the \n127.0.0.1  localhost\n entry in the \n/etc/hosts\n file.\n\n\n\n\n127.0.0.1 localhost isle.localdomain\n with a space in between the entries.  \n\n\n\n\n\n\n\n\nEnter \nCntrl\n and the letter \no\n together to write the changes to the file.\n\n\n\n\n\n\nEnter \nCntrl\n and the letter \nx\n together to exit the file.\n\n\n\n\n\n\n\n\nSummary: Test site launch process\n\n\n\n\n\n\nIf using Vagrant or a VM, the steps below assume you are still shelled in (connected by SSH) into the ISLE Host VM via a terminal on a local laptop.\n\n\n\n\n\n\nIf using Docker for Mac, continue to use the open terminal and navigate (\ncd\n) to the ISLE project directory.\n\n\n\n\n\n\nThe steps below are for all users (\nVagrant, VM, non Vagrant and Docker for Mac users alike.\n)\n\n\nThe install times stated below for each container are highly dependent on the enduser's available Internet bandwidth and could take more or less time accordingly.\n\n\n\n\n\n\nrun \ndocker-compose up -d\n - this is going to download and start all five images (roughly 600GB of data so it may take a little while depending on your connection)\n\n\n\n\n\n\nCheck if the containers are running: \ndocker ps\n (shows only running containers)\n\n\n\n\n\n\nIf you don't see all five containers try: \ndocker ps -a\n (shows all containers running or not)\n\n\n\n\n\n\nIf all five containers are NOT running, then proceed to the Troubleshooting section first before advancing to the \"Install script on Apache container\" section below\n\n\n\n\nInstall script on Apache container\n\n\n\n\n\n\nRun the following shell scripts manually on the apache container  \n\n\n\n\ndocker exec -it isle-apache bash\n\n\ncd /tmp/isle_drupal_build_tools/\n\n\nchmod 777 *.sh\n\n\n./install_isle_ld_site.sh\n\n\n\n\n\n\n\n\nOnce finished press the \nCntrl\n and \nd\n keys or type \nexit\n to get out of the apache container\n\n\n\n\nTest (QC) the resulting setup by opening a web browser to the \nisle.localdomain\n URL of the new ISLE sample site (i.e. http://isle.localdomain)\n\n\n\n\nPlease note:\n The cronjob setting in the \napache_provision.sh\n script is still commented out as this will need to be flowed into the Docker build process prior. Issue with default Docker root user vs using islandora user. Drupal cron can run properly.\n\n\nTotal build process\n takes 50 - 120 minutes (\ndepending on system and internet speeds\n)\n\n\nTroubleshooting\n\n\nIf you don't see five running containers, then stop the running containers with \ndocker-compose down -d\n and start the containers one at a time following the instructions below:\n\n\n\n\n\n\nMySQL image pull \n container launch\n\n\ndocker pull islandoracollabgroup/isle-mysql:latest\n\n\ndocker-compose up -d mysql\n\n\n\n\n\n\nFedora image pull \n container launch\n\n\ndocker pull islandoracollabgroup/isle-fedora:latest\n\n\ndocker-compose up -d fedora\n\n\n(Optional but recommended troubleshooting step)\n\n\n\n\nPlease note the Tomcat service requires about  one to three minutes to startup and as such if the enduser rushes to the URL supplied below, the service page maytime out or be reported as unreachable. Give it a little time.\n\n\nAfter spinning up fedora container, check if the Fedora service is running prior to advancing.\n\n\nNavigate to http://fedora:8080/manager/html a popup login prompt should appear.\n\n\nEnter the user name of \nadmin\n and the password of \nild_tc_adm_2018\n\n\nUpon login a large display of running Tomcat applications should display, scroll down to fedora\n\n\nThe application state / status should be true\n\n\nIf false appears instead, attempt to restart the fedora service manually.\n\n\nSelect the restart button to the right of the status area.\n\n\nIf it still fails, review the mounted fedora logs. The docker-compose.yml file will indicate where the logs are located.\n\n\nUsing terminal and then entering a command like \ntail -n 300 - \npath to ISLE project/data/fedora/log/tomcat:/usr/local/tomcat/logs/fedora.log\n should display enough information to troubleshoot or restart the entire startup process.\n\n\n\n\n\n\n\n\nSolr image pull \n container launch\n\n\ndocker pull islandoracollabgroup/isle-solr:latest\n\n\ndocker-compose up -d solr\n\n\n\n\n\n\nApache image pull \n container launch\n\n\ndocker pull islandoracollabgroup/isle-apache:latest\n\n\ndocker-compose up -d apache\n\n\n\n\n\n\nProxy image pull \n container launch\n\n\ndocker pull islandoracollabgroup/isle-proxy:latest\n\n\ndocker-compose up -d proxy\n\n\n\n\n\n\n\n\nFast Facts\n\n\nislandora\n user on the ISLE host server uses \nislandora\n as the password.\n\n\nGlossary\n\n\n\n\n\n\nhostip\n can mean\n\n\n\n\n\n\nthe IP of the Vagrant Host VM (CentOS / Ubuntu ) e.g. \nhttp://10.10.10.130\n\n\n\n\n\n\nthe IP of the Non-Vagrant Host VM (CentOS / Ubuntu ) e.g. \nhttp://\nVM IP here\n\n\n\n\n\n\n127.0.0.1\n\n\n\n\n\n\n\n\n1. MySQL container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\nmysql\n\n\nisle-mysql-ld\n\n\nMySQL 5.6\n\n\n3306\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccount\n\n\nPassword\n\n\nDatabase\n\n\nPerms\n\n\n\n\n\n\n\n\n\n\nroot\n\n\nild_mysqlrt_2018\n\n\nALL\n\n\nALL\n\n\n\n\n\n\nfedora_admin\n\n\nild_feddb_2018\n\n\nfedora3\n\n\nAll\n except \nGrant\n option\n\n\n\n\n\n\nisle_ld_user\n\n\nisle_ld_db2018\n\n\nisle_ld\n\n\nAll\n except \nGrant\n option\n\n\n\n\n\n\n\n\n\n\n2. Fedora container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\nfedora\n\n\nisle-fedora-ld\n\n\nsee below\n\n\n8080, 80 (on container) mapped to 8777 (on host)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware\n\n\nVersion\n\n\n\n\n\n\n\n\n\n\nFedora\n\n\n3.8.1\n\n\n\n\n\n\nApache\n\n\n2.4.7\n\n\n\n\n\n\nDrupalfilter\n\n\n3.8.1\n\n\n\n\n\n\nGsearch (w/remote SOLR plugin)\n\n\n2.8+ (DG patched)\n\n\n\n\n\n\n(DG) GSearch Extensions\n\n\n0.13\n\n\n\n\n\n\n(DG) Islandora Transforms (XSLTs)\n\n\nas of 3/2018\n\n\n\n\n\n\nTomcat\n\n\n7.x\n\n\n\n\n\n\nOracle JDK\n\n\n8.x\n\n\n\n\n\n\nDjatoka\n\n\n1.1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccount\n\n\nPassword\n\n\nService\n\n\nURL\n\n\n\n\n\n\n\n\n\n\nfedoraAdmin\n\n\nild_fed_admin_2018\n\n\nFedora\n\n\nhttp://hostip:8080/fedora/describe\n\n\n\n\n\n\nfedoraIntCallUser\n\n\nild_fed_IntCallUser_2018\n\n\nFedora\n\n\nhttp://hostip:8080/fedora/objects\n\n\n\n\n\n\nanonymous\n\n\nanonymous\n\n\nFedora\n\n\n---\n\n\n\n\n\n\nfgsAdmin\n\n\nild_fgs_admin_2018\n\n\nGsearch\n\n\nhttp://hostip:8080/fedoragsearch/rest?operation=updateIndex\n\n\n\n\n\n\nadmin\n\n\nild_tc_adm_2018\n\n\nTomcat\n\n\nhttp://hostip:8080/manager/html\n\n\n\n\n\n\nmanager\n\n\nild_tc_man_2018\n\n\nTomcat\n\n\nhttp://hostip:8080/manager/html\n\n\n\n\n\n\n--\n\n\n--\n\n\nDjatoka\n\n\nhttp://hostip:8080/adore-djatoka/\n\n\n\n\n\n\n\n\n\n\n3. Solr container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\nsolr\n\n\nisle-solr-ld\n\n\nsee below\n\n\n8080 (on container) mapped to 8091 (on host)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware\n\n\nVersion\n\n\n\n\n\n\n\n\n\n\nSolr\n\n\n4.10.4\n\n\n\n\n\n\nTomcat\n\n\n7.x\n\n\n\n\n\n\nOracle JDK\n\n\n8.x\n\n\n\n\n\n\n(DG) Basic Solr Config\n\n\n4.10.x branch\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccount\n\n\nPassword\n\n\nService\n\n\nURL\n\n\n\n\n\n\n\n\n\n\nadmin\n\n\nild_tc_adm_2018\n\n\nTomcat\n\n\nhttp://hostip:8091/manager/html\n\n\n\n\n\n\nmanager\n\n\nild_tc_man_2018\n\n\nTomcat\n\n\nhttp://hostip:8091/manager/html\n\n\n\n\n\n\n--\n\n\n--\n\n\nSolr\n\n\nhttp://hostip:8091/solr/\n\n\n\n\n\n\n\n\n\n\n4. Apache container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\napache\n\n\nisle-apache-ld\n\n\nsee below\n\n\n80, 443\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware\n\n\nVersion\n\n\n\n\n\n\n\n\n\n\nApache\n\n\n2.4.7\n\n\n\n\n\n\nOracle JDK\n\n\n8.x\n\n\n\n\n\n\nDjatoka\n\n\n1.1\n\n\n\n\n\n\nDrupal\n\n\n7.57\n\n\n\n\n\n\nPHP\n\n\n5.6\n\n\n\n\n\n\nIslandora\n\n\n7.x\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccount\n\n\nPassword\n\n\nService\n\n\nURL\n\n\n\n\n\n\n\n\n\n\nisle_localdomain_admin\n\n\nisle_localdomain_adminpw2018\n\n\nDrupal site admin\n\n\nhttps://isle.localdomain\n\n\n\n\n\n\n\n\n5. Proxy container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\nproxy\n\n\nisle-proxy\n\n\nNginx 1.13\n\n\n80 ,443", 
            "title": "Installation Guide"
        }, 
        {
            "location": "/01_Installation_Migration/01_1_testsite_guide/#development-site-guide-islelocaldomain", 
            "text": "Follow this guide to spin up and install ISLE with no URL utilizing the built-in  isle-localdomain  name for review and testing.  This test ISLE / Islandora environment ( isle.localdomain ) includes an un-themed Drupal website and empty Fedora repository for endusers to develop code, test ingests, test metadata, update fields in SOLR indexing and otherwise \"kick the tires\" on ISLE prior for further usages e.g. creating a new ISLE production site or migrating a current Islandora production site to ISLE.", 
            "title": "Development Site Guide - isle.localdomain"
        }, 
        {
            "location": "/01_Installation_Migration/01_1_testsite_guide/#assumptions-prerequisites", 
            "text": "Laptop / workstation that conforms to the specifications outlined in the  System Requirements    Instructions below assume a MacOS or Linux laptop or workstation. Windows users may have to swap out various tools as needed.    This test site guide is designed for a local laptop / workstation running one of the following:   using the supplied Vagrant setup found in the  vagrant  directory at the root of the ISLE project ( Vagrant with Virtualbox )  a manually setup CentOS or Ubuntu Virtualbox VM ( no Vagrant )  Docker installed and running on the VM as directed by one of the host server setup pages.  Can connect to the VM by SSH using a terminal on their laptop or workstation.    Docker for Mac", 
            "title": "Assumptions / Prerequisites"
        }, 
        {
            "location": "/01_Installation_Migration/01_1_testsite_guide/#edit-etclocalhost", 
            "text": "", 
            "title": "Edit /etc/localhost"
        }, 
        {
            "location": "/01_Installation_Migration/01_1_testsite_guide/#edit-1-vagrant-only", 
            "text": "Vagrant  If you are using Vagrant on a laptop move on to the next section ( Summary: Test site launch process ) as this part is handled automatically.", 
            "title": "Edit 1: Vagrant only"
        }, 
        {
            "location": "/01_Installation_Migration/01_1_testsite_guide/#edit-1-vm-only", 
            "text": "VM  If you are using a local Virtualbox VM (CentOS / Ubuntu) but not Vagrant to host ISLE, one will need to get the VM IP address prior to attempting the  steps below.   Please note: * By default the example tool given below of  nano  may not be installed on the VM.\n  * If the enduser hasn't installed it before on a CentOS VM, then please run  sudo yum install nano .\n  * If the enduser hasn't installed it before on a Ubuntu VM, then please run  sudo apt-get install nano .\n  * If you are familiar with other command-line tools then you are welcome to substitute.    Add the values of  VM IP here  isle.localdomain apache solr mysql fedora  to the laptop / workstation's  /etc/hosts  file.       Open a terminal on the local laptop    Enter:  sudo nano /etc/hosts    For endusers familiar with editing files on the command line, vim or alternative tools can be used in lieu of nano    Enter the laptop enduser password    Add the values below the  127.0.0.1  entry in the  /etc/hosts  file.    VM IP here  isle.localdomain  with a space in between the entries.      Example  ( Please do not literally use the IP given below, it may be different after the manual CentOS VM creation )    127.0.0.1 localhost\n  192.168.10.10 isle.localdomain`   Enter  Cntrl  and the letter  o  together to write the changes to the file.  Enter  Cntrl  and the letter  x  together to exit the file.", 
            "title": "Edit 1: VM only"
        }, 
        {
            "location": "/01_Installation_Migration/01_1_testsite_guide/#edit-1-docker-for-mac-only", 
            "text": "Docker For Mac  If you are using Docker For Mac, then use the IP address of  127.0.0.1    Open a terminal on the local laptop    Enter:  sudo nano /etc/hosts    For endusers familiar with editing files on the command line, vim or alternative tools can be used in lieu of nano    Enter the laptop enduser password    Add the values next to the  127.0.0.1  localhost  entry in the  /etc/hosts  file.   127.0.0.1 localhost isle.localdomain  with a space in between the entries.       Enter  Cntrl  and the letter  o  together to write the changes to the file.    Enter  Cntrl  and the letter  x  together to exit the file.", 
            "title": "Edit 1: Docker for Mac only"
        }, 
        {
            "location": "/01_Installation_Migration/01_1_testsite_guide/#summary-test-site-launch-process", 
            "text": "If using Vagrant or a VM, the steps below assume you are still shelled in (connected by SSH) into the ISLE Host VM via a terminal on a local laptop.    If using Docker for Mac, continue to use the open terminal and navigate ( cd ) to the ISLE project directory.    The steps below are for all users ( Vagrant, VM, non Vagrant and Docker for Mac users alike. )  The install times stated below for each container are highly dependent on the enduser's available Internet bandwidth and could take more or less time accordingly.    run  docker-compose up -d  - this is going to download and start all five images (roughly 600GB of data so it may take a little while depending on your connection)    Check if the containers are running:  docker ps  (shows only running containers)    If you don't see all five containers try:  docker ps -a  (shows all containers running or not)    If all five containers are NOT running, then proceed to the Troubleshooting section first before advancing to the \"Install script on Apache container\" section below", 
            "title": "Summary: Test site launch process"
        }, 
        {
            "location": "/01_Installation_Migration/01_1_testsite_guide/#install-script-on-apache-container", 
            "text": "Run the following shell scripts manually on the apache container     docker exec -it isle-apache bash  cd /tmp/isle_drupal_build_tools/  chmod 777 *.sh  ./install_isle_ld_site.sh     Once finished press the  Cntrl  and  d  keys or type  exit  to get out of the apache container   Test (QC) the resulting setup by opening a web browser to the  isle.localdomain  URL of the new ISLE sample site (i.e. http://isle.localdomain)   Please note:  The cronjob setting in the  apache_provision.sh  script is still commented out as this will need to be flowed into the Docker build process prior. Issue with default Docker root user vs using islandora user. Drupal cron can run properly.  Total build process  takes 50 - 120 minutes ( depending on system and internet speeds )", 
            "title": "Install script on Apache container"
        }, 
        {
            "location": "/01_Installation_Migration/01_1_testsite_guide/#troubleshooting", 
            "text": "If you don't see five running containers, then stop the running containers with  docker-compose down -d  and start the containers one at a time following the instructions below:    MySQL image pull   container launch  docker pull islandoracollabgroup/isle-mysql:latest  docker-compose up -d mysql    Fedora image pull   container launch  docker pull islandoracollabgroup/isle-fedora:latest  docker-compose up -d fedora  (Optional but recommended troubleshooting step)   Please note the Tomcat service requires about  one to three minutes to startup and as such if the enduser rushes to the URL supplied below, the service page maytime out or be reported as unreachable. Give it a little time.  After spinning up fedora container, check if the Fedora service is running prior to advancing.  Navigate to http://fedora:8080/manager/html a popup login prompt should appear.  Enter the user name of  admin  and the password of  ild_tc_adm_2018  Upon login a large display of running Tomcat applications should display, scroll down to fedora  The application state / status should be true  If false appears instead, attempt to restart the fedora service manually.  Select the restart button to the right of the status area.  If it still fails, review the mounted fedora logs. The docker-compose.yml file will indicate where the logs are located.  Using terminal and then entering a command like  tail -n 300 -  path to ISLE project/data/fedora/log/tomcat:/usr/local/tomcat/logs/fedora.log  should display enough information to troubleshoot or restart the entire startup process.     Solr image pull   container launch  docker pull islandoracollabgroup/isle-solr:latest  docker-compose up -d solr    Apache image pull   container launch  docker pull islandoracollabgroup/isle-apache:latest  docker-compose up -d apache    Proxy image pull   container launch  docker pull islandoracollabgroup/isle-proxy:latest  docker-compose up -d proxy", 
            "title": "Troubleshooting"
        }, 
        {
            "location": "/01_Installation_Migration/01_1_testsite_guide/#fast-facts", 
            "text": "islandora  user on the ISLE host server uses  islandora  as the password.  Glossary    hostip  can mean    the IP of the Vagrant Host VM (CentOS / Ubuntu ) e.g.  http://10.10.10.130    the IP of the Non-Vagrant Host VM (CentOS / Ubuntu ) e.g.  http:// VM IP here    127.0.0.1", 
            "title": "Fast Facts"
        }, 
        {
            "location": "/01_Installation_Migration/01_1_testsite_guide/#1-mysql-container", 
            "text": "Compose Service Name  Container Name  Software  Ports      mysql  isle-mysql-ld  MySQL 5.6  3306        Account  Password  Database  Perms      root  ild_mysqlrt_2018  ALL  ALL    fedora_admin  ild_feddb_2018  fedora3  All  except  Grant  option    isle_ld_user  isle_ld_db2018  isle_ld  All  except  Grant  option", 
            "title": "1. MySQL container"
        }, 
        {
            "location": "/01_Installation_Migration/01_1_testsite_guide/#2-fedora-container", 
            "text": "Compose Service Name  Container Name  Software  Ports      fedora  isle-fedora-ld  see below  8080, 80 (on container) mapped to 8777 (on host)        Software  Version      Fedora  3.8.1    Apache  2.4.7    Drupalfilter  3.8.1    Gsearch (w/remote SOLR plugin)  2.8+ (DG patched)    (DG) GSearch Extensions  0.13    (DG) Islandora Transforms (XSLTs)  as of 3/2018    Tomcat  7.x    Oracle JDK  8.x    Djatoka  1.1        Account  Password  Service  URL      fedoraAdmin  ild_fed_admin_2018  Fedora  http://hostip:8080/fedora/describe    fedoraIntCallUser  ild_fed_IntCallUser_2018  Fedora  http://hostip:8080/fedora/objects    anonymous  anonymous  Fedora  ---    fgsAdmin  ild_fgs_admin_2018  Gsearch  http://hostip:8080/fedoragsearch/rest?operation=updateIndex    admin  ild_tc_adm_2018  Tomcat  http://hostip:8080/manager/html    manager  ild_tc_man_2018  Tomcat  http://hostip:8080/manager/html    --  --  Djatoka  http://hostip:8080/adore-djatoka/", 
            "title": "2. Fedora container"
        }, 
        {
            "location": "/01_Installation_Migration/01_1_testsite_guide/#3-solr-container", 
            "text": "Compose Service Name  Container Name  Software  Ports      solr  isle-solr-ld  see below  8080 (on container) mapped to 8091 (on host)        Software  Version      Solr  4.10.4    Tomcat  7.x    Oracle JDK  8.x    (DG) Basic Solr Config  4.10.x branch        Account  Password  Service  URL      admin  ild_tc_adm_2018  Tomcat  http://hostip:8091/manager/html    manager  ild_tc_man_2018  Tomcat  http://hostip:8091/manager/html    --  --  Solr  http://hostip:8091/solr/", 
            "title": "3. Solr container"
        }, 
        {
            "location": "/01_Installation_Migration/01_1_testsite_guide/#4-apache-container", 
            "text": "Compose Service Name  Container Name  Software  Ports      apache  isle-apache-ld  see below  80, 443        Software  Version      Apache  2.4.7    Oracle JDK  8.x    Djatoka  1.1    Drupal  7.57    PHP  5.6    Islandora  7.x        Account  Password  Service  URL      isle_localdomain_admin  isle_localdomain_adminpw2018  Drupal site admin  https://isle.localdomain", 
            "title": "4. Apache container"
        }, 
        {
            "location": "/01_Installation_Migration/01_1_testsite_guide/#5-proxy-container", 
            "text": "Compose Service Name  Container Name  Software  Ports      proxy  isle-proxy  Nginx 1.13  80 ,443", 
            "title": "5. Proxy container"
        }, 
        {
            "location": "/01_Installation_Migration/01_2_testsite_user_story/", 
            "text": "test site user story goes here", 
            "title": "Example User Story"
        }, 
        {
            "location": "/01_Installation_Migration/01_3_new_site_guide/", 
            "text": "Build a New ISLE / Islandora Environment\n\n\nThis guide documents how an enduser can spin up and install the ISLE / Islandora environment using their own domain / URL.\n\n\nAssumptions:\n\n\n\n\n\n\nHave a domain name that works - is set up with DNS etc...\n\n\n\n\n\n\nHave SSL Certificates for the domain\n\n\n\n\n\n\nISLE project has been cloned to BOTH your local laptop/workstation AND the host server - see \nSetup Guide\n\n\n\n\n\n\nOverview\n\n\n\n\n\n\nSetup a Private Code Repository\n\n\n\n\nMost of the work in this guide involves careful editing of the various configuration and settings files that customize the pieces of Islandora (database, repository, web-server, etc...).\n\n\nDoing this work in a code repository makes it easier to correct errors and to repeat the process for additional servers without needing to replicate all the work.\n\n\nSince the edits will include things like passwords, it's important to make this a private repository.\n\n\n\n\n\n\n\n\nCustomizing for your Environment\n\n\n\n\nMany of the steps below describe adding the domain name or other specific bits of information into files or appending those bits to file names.\n\n\nIn these cases this guide will call out the customization point AND provide an example - it's important not to literally copy paste the example!\n\n\n\n\n\n\n\n\nCreate Private Code Repository\n\n\nON your local laptop/workstation:\n\n\n\n\n\n\nOn the repository of your choice (GitHub, GitLab, Bitbucket, etc.) create a PRIVATE remote git repo - see the specific code repository documentation online for setup instructions.\n\n\n\n\n\n\nOpen a terminal - navigate to /opt/ISLE or where you put the ISLE directory on your local workstation.\n\n\n\n\n\n\nCreate a directory named yourdomainconfig (where \"yourdomain\" is your server domain name)\n\n\n\n\n\n\nexample:  \ndigital-collectionsconfig\n\n\n\n\n\n\nLocate the directory called \nconfig\n and copy all the contents to the newly created directory\n\n\n\n\n\n\ncd\n into the newly copied and renamed yourdomainconfig directory and type:\n \ngit init\n to initate this directory as a code repository.\n\n\n\n\n\n\ngit remote add NameOfYourRepository URLofYourRepository\n to connect your local repository to the remote you set up in the above steps. [\nNOTE\n replace \"NameOfYourRepository\" and \"URLofYourRepository\" with the name of your repository and its URL]\n\n\n\n\n\n\nYou are now ready to perform the customization edits in this directory (you can use a text editor of choice now don't have to stay in terminal - just locate the folder in the finder and open file in text editor)\n\n\n\n\n\n\nEdits\n\n\nDocker compose file:\n\n\n\n\n\n\nEdit the file: \ndocker-compose.yml\n accordingly:\n\n\n\n\n\n\nChange container names based on the environment (prod, stage, dev, etc)\n\n\n\n\n\n\nFor example if you are building a dev server instance:\n\n\n\n\n\n\n\n\n\n\ncontainer_name: isle-solr\n\n\nchanges to:\n\n\ncontainer_name: isle-solr-dev\n\n\nand so on...\n\n\n\n\nNow proceed to edits within the child directories, make appropriate edits to config files:\n\n\na. to reflect \nenvironment\n (prod, stage, dev, etc...)\n\n\nb. to involve your \ndomain name\n (digital-collections.example.edu)\n\n\n\n\nApache directory\n\n\n\n\n\n\nCopy your SSL certificates for Apache into \napache/ssl/certs\n\n\n\n\n\n\nWithin the \nsites-available\n directory, rename the files isle_localdomain_ssl.conf and isle_localdomain.conf to your domain names  example:\n\n\ndigital-collections.example.edu_ssl.conf\n\n\ndigital-collections.example.edu.conf\n\n\n\n\n\n\nedit the  \nyourdomain_ssl.conf\n file change lines 12 and 13 to point to the location of your certs - example:\n\n\n`SSLCertificateFile    /certs/ssl-cert-example.pem`\n`SSLCertificateKeyFile /certs/ssl-cert-example.key`\n\n\n\n\n\n\n\nedit the file: \nsettings.php\n   lines 251-253 add your database name, database user, and database password    \n\n\n\n\n\n\nedit the file: \nsettings.php\n   line 288 to include a 45+ alpha-numeric characters drupal hash between the quotes after this text: \n$drupal_hash_salt = '';\n\n\n\n\n\n\nreview the file: \nsettings.php\n  near line 311 to ensure \n# $base_url =\n is commented out\n\n\n\n\n\n\nedit the file: \napache_provision.sh\n  line 47:\n\n\n\n\n\n\n/usr/local/bin/drush site-install -y --account-name=isle_localdomain_admin --account-pass=isle_localdomain_adminpw2018 --account-mail=admin@isle.localdomain --site-name=\u201cISLE.localdomain\u201d\n\n\nChange the following in this line to the appropriate names and passwords for your site\n\n\naccount name\naccount-pass\naccount-mail\nsite-name\n\n\n\n\n\nFedora directory\n\n\n\n\n\n\nWithin the fedora/fedora directories, \nchange the passwords\n in the following files:\n\n\n  fedora-users.xml  (change all applicable)\n  fedora.fsfg  (line numbers see below)\n  filter-drupal.xml  (change db name, db user, db psswd)\n\n\n\n\n\n\n\nwithin the \ngsearch\n directory, edit the file: \nfedoragsearch.properties\n at line 7 add a space after the equal sign and add the fgsAdmin password\n\n\n\n\n\n\n-  fedoragsearch.soapPass                =\n\n\n\n\nEdit the file: \nfgsconfig-basic-configForIslandora.properties\n  line 26: edit the gsearch password\n\n\n\n\ngsearchPass=ild_fgs_admin_2018\n\n\n\n\nin the same file edit line 67 edit the fedora password\n\n\n\n\nfedoraPass=ild_fed_admin_2018\n\n\n\n\nEdit the file: \nfedora/gsearch/fgsconfigObjects.properties\n line 15: edit the fedora admin password\n\n\n\n\nfgsconfigObjects.fedoraPass            = ild_fed_admin_2018\n\n\n\n\nEdit the file: \nfedora/gsearch/repository.properties\n line 7: edit the fedora admin password\n\n\n\n\nfgsrepository.fedoraPass        = ild_fed_admin_2018\n\n\n\n\nTomcat directory\n\n\n\n\nWithin the \ntomcat\n sub directories:\n\n\n\n\nStrongly recommend changing tomcat user passwords in file: \nfedora/tomcat/tomcat-users.xml\n\n\nONLY CHANGE TOMCAT USERNAME/PASSWORD - looks like this:\n\n\n      \n!-- user manager can access only manager section --\n\n         \nuser username=\u201cmanager\u201d password=\u201cild_tc_man_2018\" roles=\u201cmanager-gui\u201d /\n  \n!--enduser please add passwords / users and remove this comment --\n\n\n      \n!-- user admin can access manager and admin section both --\n\n         \nuser username=\u201cadmin\u201d password=\u201cild_tc_adm_2018\u201d roles=\u201cmanager-gui,admin-gui\u201d /\n \n!--enduser please add passwords / users and remove this comment --\n\n\n      \n/tomcat-users\n\n\n\n\n\n\nRepository policies\n\n\nEdit the contents of the repository-policies directory as necessary IF YOU NEED TO otherwise leave alone.\n\n\n\n\nMysql directory\n\n\n\n\n\n\nedit the contents of \ncreate_drupal_user.sql\n to create the drupal site db user\n\n\n\n\n\n\nedit the contents of \ncreate_fedora_user.sql\n to create the fedora db user\n\n\n\n\n\n\nedit the contents of \nfedora3.sql\n to create the fedora db\n\n\n\n\n\n\nedit the contents of \nsite.sql\n to create the drupal site db\n\n\n\n\n\n\nmake any appropriate edits as you see fit to \nmy.conf\n IF NEEDED\n\n\n\n\n\n\n\n\nProxy directory\n\n\n\n\nin the \nconfig/sites-enabled\n directory, rename the \nconf\n file to \nyourdomain.conf\n (where \"yourdomain\" is the domain name of your server)\n\n\n\n\nfor example: \ndigital-collections.example.edu.conf\n\n\n\n\n\n\nNow edit the file...\n\n\n\n\nchange line 6 \nserver_name\n to \nyourdomainname\n (where \"yourdomain\" is the domain name of your server)\n\n\nchange line 15 \nserver_name\n to \nyourdomainname\n (where \"yourdomain\" is the domain name of your server)\n\n\nchange lines 18 and 19 to the name of your ssl certs (should be same names as in apache edits above)\n\n\nedit lines 36 and 37 - uncomment: \nssl_stapling on;\n and uncomment: \nssl_stapling_verify on;\n\n\n\n\nuncomment line 40:  \nadd_header Strict-Transport-Security max-age=15768000;\n\n\n\n\n\n\nappend your environment type (prod, dev, stage, etc.) to the following lines proceeded by a hyphen i.e. \n-dev\n\n\n\n\n\n\n\n\n\n\n\n\nSSL-certs directory\n\n\nCopy your SSL certs into the ssl-certs dir\nDO NOT OVERWRITE OR DELETE the dhparam.pem file that's in There\n\n\n\n\nProxy upstreams.d directory\n\n\n\n\n\n\ncopy and rename: \nsample-upstreams.conf.disabled\n - replace \"sample\" in the file name w/ the environment name e.g. (dev, prod, stage, etc...)\n\n\n\n\n\n\nlines 10 and 14 look like this:\n\n\nupstream fedora-internal {\n  server fedora:8080 fail_timeout=0;\n}\n\nupstream apache-internal {\n  server apache:443 fail_timeout=0;\n}\n\n\n\n\n\n\n\nAppend the environment name after  both instances of \"internal\" proceeded by a hyphen \"-dev\" in this example:\n\n\n  upstream fedora-internal-dev {\n  server fedora:8080 fail_timeout=0;\n}\n\nupstream apache-internal-dev {\n  server apache:443 fail_timeout=0;\n}\n\n\n\n\n\n\n\n\n\nSolr directory\n\n\n\n\nWithin the tomcat sub-directories\n\n\n\n\nStrongly rec you change tomcat user passwords in file: \nfedora/tomcat/tomcat-users.xml\n\n\nONLY CHANGE TOMCAT PASSWORD\n\n\nlooks like this:\n\n\n  \n!-- user manager can access only manager section --\n\n     \nuser username=\u201cmanager\u201d password=\u201cild_tc_man_2018\" roles=\u201cmanager-gui\u201d /\n  \n!--enduser please add passwords / users and remove this comment --\n\n\n  \n!-- user admin can access manager and admin section both --\n\n     \nuser username=\u201cadmin\u201d password=\u201cild_tc_adm_2018\u201d roles=\u201cmanager-gui,admin-gui\u201d /\n \n!--enduser please add passwords / users and remove this comment --\n\n\n  \n/tomcat-users\n\n\n\n\n\n\nFinal steps\n\n\n\n\n\n\nNow that all the changes are made (be sure to save), ISLE should be ready to test. First you'll need to push these changes to your private code repository.\n\n\n\n\n\n\nOpen a terminal - \ncd\n to the config directory you've been making the changes in...\n\n\n\n\n\n\ngit status\n  this will show you all the files that have been modified and ready to be added to your private repo along with handy paths for the next steps.\n\n\n\n\n\n\ngit add /pathtoyourmodifiedfile\n (replace \"pathtoyourmodifiedfile\" with the path to your config directory)\n\n\n\n\n\n\nrun these:\n\n\n\n\n\n\ngit add apache\n\n\ngit add fedora\n\n\ngit add mysql\n\n\ngit add proxy\n\n\ngit add solr\n\n\ngit add docker-compose.yml\n\n\n\n\n\n\nrun \ngit status\n again - everything should be in green now as all modified files have been added - if anything's still red use git add and the path to add it\n\n\n\n\n\n\nthen run \ngit commit -m \"initial config commit\"\n inside the double quotes is the commit message you can say whatever you want in this message - so for example if this is the config for your dev instance you could say that...\n\n\n\n\n\n\nrun \ngit push origin master\n this will push all your changes to the repo further changes should be made on branches for different servers or to master branch for this same server\n\n\n\n\n\n\n\n\n\n\n\n\nClone Custom Configuration to Host Server\n\n\n\n\n\n\nOpen a terminal - ssh into your host server using the \nislandora\n user\n\n\n\n\n\n\ncd\n to \n/opt/ISLE/config/\n\n\n\n\n\n\nbecause your customizations are in a \nprivate\n repository, you'll need to add this islandora user's \nid_rsa.pub\n key to the repository via the website.\n\n\n\n\n\n\nThis key is found in \n/home/islandora/.ssh/id_rsa.pub\n\n\n\n\n\n\nOne can simply run \ncat /home/islandora/.ssh/id_rsa.pub\n and copy the output (ensure no whitespaces or extra returns)\n\n\n\n\n\n\nGo to the repository web site with a browser and locate your private repository.\n\n\n\n\nlocate the ssh key entry location (in Bitbucket this is in Settings / Access Keys /\n\n\nadd\n an ssh key w/ the label \nislandora host server\n paste in the key text and click \nAdd Key\n\n\n\n\n\n\n\n\nBack at your terminal command line, run \ngit clone URLpathtoyourremoteprivaterepo.git .\n (replacing \"URLpathtoyourremoteprivaterepo\" with the URL to the repository provided by the website)\n\n\n\n\n\n\ncd\n into the newly cloned directory\n\n\n\n\n\n\nSpin up ISLE containers!\n\n\n\n\n\n\nrun \ndocker-compose up -d\n\n\n\n\n\n\nrun \ndocker exec yourApacheContainerNameHere bash\n (replace 993845754398)\nuse the name from the docker-composer.yml file here (typical: isle-apache-prod, or -stage, etc...)\n\n\n\n\n\n\ncd to   \ncd /tmp/isle_drupal_build_tools\n\n\nthen run:\n\n./apache_provision.sh\n\n\ngive this a few minutes and check the site - should be up now!", 
            "title": "New Site Guide"
        }, 
        {
            "location": "/01_Installation_Migration/01_3_new_site_guide/#build-a-new-isle-islandora-environment", 
            "text": "This guide documents how an enduser can spin up and install the ISLE / Islandora environment using their own domain / URL.  Assumptions:    Have a domain name that works - is set up with DNS etc...    Have SSL Certificates for the domain    ISLE project has been cloned to BOTH your local laptop/workstation AND the host server - see  Setup Guide", 
            "title": "Build a New ISLE / Islandora Environment"
        }, 
        {
            "location": "/01_Installation_Migration/01_3_new_site_guide/#overview", 
            "text": "Setup a Private Code Repository   Most of the work in this guide involves careful editing of the various configuration and settings files that customize the pieces of Islandora (database, repository, web-server, etc...).  Doing this work in a code repository makes it easier to correct errors and to repeat the process for additional servers without needing to replicate all the work.  Since the edits will include things like passwords, it's important to make this a private repository.     Customizing for your Environment   Many of the steps below describe adding the domain name or other specific bits of information into files or appending those bits to file names.  In these cases this guide will call out the customization point AND provide an example - it's important not to literally copy paste the example!", 
            "title": "Overview"
        }, 
        {
            "location": "/01_Installation_Migration/01_3_new_site_guide/#create-private-code-repository", 
            "text": "ON your local laptop/workstation:    On the repository of your choice (GitHub, GitLab, Bitbucket, etc.) create a PRIVATE remote git repo - see the specific code repository documentation online for setup instructions.    Open a terminal - navigate to /opt/ISLE or where you put the ISLE directory on your local workstation.    Create a directory named yourdomainconfig (where \"yourdomain\" is your server domain name)    example:   digital-collectionsconfig    Locate the directory called  config  and copy all the contents to the newly created directory    cd  into the newly copied and renamed yourdomainconfig directory and type:\n  git init  to initate this directory as a code repository.    git remote add NameOfYourRepository URLofYourRepository  to connect your local repository to the remote you set up in the above steps. [ NOTE  replace \"NameOfYourRepository\" and \"URLofYourRepository\" with the name of your repository and its URL]    You are now ready to perform the customization edits in this directory (you can use a text editor of choice now don't have to stay in terminal - just locate the folder in the finder and open file in text editor)", 
            "title": "Create Private Code Repository"
        }, 
        {
            "location": "/01_Installation_Migration/01_3_new_site_guide/#edits", 
            "text": "", 
            "title": "Edits"
        }, 
        {
            "location": "/01_Installation_Migration/01_3_new_site_guide/#docker-compose-file", 
            "text": "Edit the file:  docker-compose.yml  accordingly:    Change container names based on the environment (prod, stage, dev, etc)    For example if you are building a dev server instance:      container_name: isle-solr  changes to:  container_name: isle-solr-dev  and so on...   Now proceed to edits within the child directories, make appropriate edits to config files:  a. to reflect  environment  (prod, stage, dev, etc...)  b. to involve your  domain name  (digital-collections.example.edu)", 
            "title": "Docker compose file:"
        }, 
        {
            "location": "/01_Installation_Migration/01_3_new_site_guide/#apache-directory", 
            "text": "Copy your SSL certificates for Apache into  apache/ssl/certs    Within the  sites-available  directory, rename the files isle_localdomain_ssl.conf and isle_localdomain.conf to your domain names  example:  digital-collections.example.edu_ssl.conf  digital-collections.example.edu.conf    edit the   yourdomain_ssl.conf  file change lines 12 and 13 to point to the location of your certs - example:  `SSLCertificateFile    /certs/ssl-cert-example.pem`\n`SSLCertificateKeyFile /certs/ssl-cert-example.key`    edit the file:  settings.php    lines 251-253 add your database name, database user, and database password        edit the file:  settings.php    line 288 to include a 45+ alpha-numeric characters drupal hash between the quotes after this text:  $drupal_hash_salt = '';    review the file:  settings.php   near line 311 to ensure  # $base_url =  is commented out    edit the file:  apache_provision.sh   line 47:    /usr/local/bin/drush site-install -y --account-name=isle_localdomain_admin --account-pass=isle_localdomain_adminpw2018 --account-mail=admin@isle.localdomain --site-name=\u201cISLE.localdomain\u201d  Change the following in this line to the appropriate names and passwords for your site  account name\naccount-pass\naccount-mail\nsite-name", 
            "title": "Apache directory"
        }, 
        {
            "location": "/01_Installation_Migration/01_3_new_site_guide/#fedora-directory", 
            "text": "Within the fedora/fedora directories,  change the passwords  in the following files:    fedora-users.xml  (change all applicable)\n  fedora.fsfg  (line numbers see below)\n  filter-drupal.xml  (change db name, db user, db psswd)    within the  gsearch  directory, edit the file:  fedoragsearch.properties  at line 7 add a space after the equal sign and add the fgsAdmin password    -  fedoragsearch.soapPass                =   Edit the file:  fgsconfig-basic-configForIslandora.properties   line 26: edit the gsearch password   gsearchPass=ild_fgs_admin_2018   in the same file edit line 67 edit the fedora password   fedoraPass=ild_fed_admin_2018   Edit the file:  fedora/gsearch/fgsconfigObjects.properties  line 15: edit the fedora admin password   fgsconfigObjects.fedoraPass            = ild_fed_admin_2018   Edit the file:  fedora/gsearch/repository.properties  line 7: edit the fedora admin password   fgsrepository.fedoraPass        = ild_fed_admin_2018", 
            "title": "Fedora directory"
        }, 
        {
            "location": "/01_Installation_Migration/01_3_new_site_guide/#tomcat-directory", 
            "text": "Within the  tomcat  sub directories:   Strongly recommend changing tomcat user passwords in file:  fedora/tomcat/tomcat-users.xml  ONLY CHANGE TOMCAT USERNAME/PASSWORD - looks like this:         !-- user manager can access only manager section -- \n          user username=\u201cmanager\u201d password=\u201cild_tc_man_2018\" roles=\u201cmanager-gui\u201d /    !--enduser please add passwords / users and remove this comment -- \n\n       !-- user admin can access manager and admin section both -- \n          user username=\u201cadmin\u201d password=\u201cild_tc_adm_2018\u201d roles=\u201cmanager-gui,admin-gui\u201d /   !--enduser please add passwords / users and remove this comment -- \n\n       /tomcat-users", 
            "title": "Tomcat directory"
        }, 
        {
            "location": "/01_Installation_Migration/01_3_new_site_guide/#repository-policies", 
            "text": "Edit the contents of the repository-policies directory as necessary IF YOU NEED TO otherwise leave alone.", 
            "title": "Repository policies"
        }, 
        {
            "location": "/01_Installation_Migration/01_3_new_site_guide/#mysql-directory", 
            "text": "edit the contents of  create_drupal_user.sql  to create the drupal site db user    edit the contents of  create_fedora_user.sql  to create the fedora db user    edit the contents of  fedora3.sql  to create the fedora db    edit the contents of  site.sql  to create the drupal site db    make any appropriate edits as you see fit to  my.conf  IF NEEDED", 
            "title": "Mysql directory"
        }, 
        {
            "location": "/01_Installation_Migration/01_3_new_site_guide/#proxy-directory", 
            "text": "in the  config/sites-enabled  directory, rename the  conf  file to  yourdomain.conf  (where \"yourdomain\" is the domain name of your server)   for example:  digital-collections.example.edu.conf    Now edit the file...   change line 6  server_name  to  yourdomainname  (where \"yourdomain\" is the domain name of your server)  change line 15  server_name  to  yourdomainname  (where \"yourdomain\" is the domain name of your server)  change lines 18 and 19 to the name of your ssl certs (should be same names as in apache edits above)  edit lines 36 and 37 - uncomment:  ssl_stapling on;  and uncomment:  ssl_stapling_verify on;   uncomment line 40:   add_header Strict-Transport-Security max-age=15768000;    append your environment type (prod, dev, stage, etc.) to the following lines proceeded by a hyphen i.e.  -dev", 
            "title": "Proxy directory"
        }, 
        {
            "location": "/01_Installation_Migration/01_3_new_site_guide/#ssl-certs-directory", 
            "text": "Copy your SSL certs into the ssl-certs dir\nDO NOT OVERWRITE OR DELETE the dhparam.pem file that's in There", 
            "title": "SSL-certs directory"
        }, 
        {
            "location": "/01_Installation_Migration/01_3_new_site_guide/#proxy-upstreamsd-directory", 
            "text": "copy and rename:  sample-upstreams.conf.disabled  - replace \"sample\" in the file name w/ the environment name e.g. (dev, prod, stage, etc...)    lines 10 and 14 look like this:  upstream fedora-internal {\n  server fedora:8080 fail_timeout=0;\n}\n\nupstream apache-internal {\n  server apache:443 fail_timeout=0;\n}    Append the environment name after  both instances of \"internal\" proceeded by a hyphen \"-dev\" in this example:    upstream fedora-internal-dev {\n  server fedora:8080 fail_timeout=0;\n}\n\nupstream apache-internal-dev {\n  server apache:443 fail_timeout=0;\n}", 
            "title": "Proxy upstreams.d directory"
        }, 
        {
            "location": "/01_Installation_Migration/01_3_new_site_guide/#solr-directory", 
            "text": "Within the tomcat sub-directories   Strongly rec you change tomcat user passwords in file:  fedora/tomcat/tomcat-users.xml  ONLY CHANGE TOMCAT PASSWORD  looks like this:     !-- user manager can access only manager section -- \n      user username=\u201cmanager\u201d password=\u201cild_tc_man_2018\" roles=\u201cmanager-gui\u201d /    !--enduser please add passwords / users and remove this comment -- \n\n   !-- user admin can access manager and admin section both -- \n      user username=\u201cadmin\u201d password=\u201cild_tc_adm_2018\u201d roles=\u201cmanager-gui,admin-gui\u201d /   !--enduser please add passwords / users and remove this comment -- \n\n   /tomcat-users", 
            "title": "Solr directory"
        }, 
        {
            "location": "/01_Installation_Migration/01_3_new_site_guide/#final-steps", 
            "text": "Now that all the changes are made (be sure to save), ISLE should be ready to test. First you'll need to push these changes to your private code repository.    Open a terminal -  cd  to the config directory you've been making the changes in...    git status   this will show you all the files that have been modified and ready to be added to your private repo along with handy paths for the next steps.    git add /pathtoyourmodifiedfile  (replace \"pathtoyourmodifiedfile\" with the path to your config directory)    run these:    git add apache  git add fedora  git add mysql  git add proxy  git add solr  git add docker-compose.yml    run  git status  again - everything should be in green now as all modified files have been added - if anything's still red use git add and the path to add it    then run  git commit -m \"initial config commit\"  inside the double quotes is the commit message you can say whatever you want in this message - so for example if this is the config for your dev instance you could say that...    run  git push origin master  this will push all your changes to the repo further changes should be made on branches for different servers or to master branch for this same server", 
            "title": "Final steps"
        }, 
        {
            "location": "/01_Installation_Migration/01_3_new_site_guide/#clone-custom-configuration-to-host-server", 
            "text": "Open a terminal - ssh into your host server using the  islandora  user    cd  to  /opt/ISLE/config/    because your customizations are in a  private  repository, you'll need to add this islandora user's  id_rsa.pub  key to the repository via the website.    This key is found in  /home/islandora/.ssh/id_rsa.pub    One can simply run  cat /home/islandora/.ssh/id_rsa.pub  and copy the output (ensure no whitespaces or extra returns)    Go to the repository web site with a browser and locate your private repository.   locate the ssh key entry location (in Bitbucket this is in Settings / Access Keys /  add  an ssh key w/ the label  islandora host server  paste in the key text and click  Add Key     Back at your terminal command line, run  git clone URLpathtoyourremoteprivaterepo.git .  (replacing \"URLpathtoyourremoteprivaterepo\" with the URL to the repository provided by the website)    cd  into the newly cloned directory", 
            "title": "Clone Custom Configuration to Host Server"
        }, 
        {
            "location": "/01_Installation_Migration/01_3_new_site_guide/#spin-up-isle-containers", 
            "text": "run  docker-compose up -d    run  docker exec yourApacheContainerNameHere bash  (replace 993845754398)\nuse the name from the docker-composer.yml file here (typical: isle-apache-prod, or -stage, etc...)    cd to    cd /tmp/isle_drupal_build_tools  then run: ./apache_provision.sh  give this a few minutes and check the site - should be up now!", 
            "title": "Spin up ISLE containers!"
        }, 
        {
            "location": "/01_Installation_Migration/01_4_newsite_user_story/", 
            "text": "Building a new site using ISLE - sample user story\n\n\nSam wants to spin up Islandora on an Ubuntu Linux server she has in the institutional data center. She accesses the server using ssh and determines that it meets the \nminimum system requirements\n (basically - it has enough processor, memory, and storage space).\n\n\nSam already has a domain name she wants to use for this Islandora instance - https://islandoratest.university.edu (note: this is a made up sample url) and has requested the DNS update from IT so the name resolves to the IP address of her server.\n\n\nNext Sam follows the \nHost Server - Ubuntu\n instructions to setup the server to be a host for ISLE (install some software including docker, download/clone the ISLE repository, create and configure a Linux user for islandora).\n\n\nBecause Sam is building a new site with her own url, she will need to edit a number of the included ISLE configuration files and folders found in the \nconfig\n directory of the cloned ISLE repository. Following the detailed instructions in the \nNew Site Guide\n.\n\n\nOnce all the configurations have been set, Sam is ready to install ISLE itself - she connects to the server via ssh as the islandora user she just created and follows the steps in  \nNew Site Guide\n to copy over the configuration changes and pull down the Dockerhub images one-by-one and start. The final step involves running a provisioning script from the ISLE repository folder.\n\n\nAt this point, Sam should be able to point a browser at her URL and see a functioning Islandora install!", 
            "title": "Example User Story"
        }, 
        {
            "location": "/01_Installation_Migration/01_4_newsite_user_story/#building-a-new-site-using-isle-sample-user-story", 
            "text": "Sam wants to spin up Islandora on an Ubuntu Linux server she has in the institutional data center. She accesses the server using ssh and determines that it meets the  minimum system requirements  (basically - it has enough processor, memory, and storage space).  Sam already has a domain name she wants to use for this Islandora instance - https://islandoratest.university.edu (note: this is a made up sample url) and has requested the DNS update from IT so the name resolves to the IP address of her server.  Next Sam follows the  Host Server - Ubuntu  instructions to setup the server to be a host for ISLE (install some software including docker, download/clone the ISLE repository, create and configure a Linux user for islandora).  Because Sam is building a new site with her own url, she will need to edit a number of the included ISLE configuration files and folders found in the  config  directory of the cloned ISLE repository. Following the detailed instructions in the  New Site Guide .  Once all the configurations have been set, Sam is ready to install ISLE itself - she connects to the server via ssh as the islandora user she just created and follows the steps in   New Site Guide  to copy over the configuration changes and pull down the Dockerhub images one-by-one and start. The final step involves running a provisioning script from the ISLE repository folder.  At this point, Sam should be able to point a browser at her URL and see a functioning Islandora install!", 
            "title": "Building a new site using ISLE - sample user story"
        }, 
        {
            "location": "/01_Installation_Migration/Migration_Guide/", 
            "text": "Migrate an Existing Islandora Environment to ISLE\n\n\nThis Migration guide will help you migrate your existing production Islandora environment to utilize this ISLE framework for easily maintaining Islandora. This guide will walk you through how to identify and copy your institution's Islandora data and files (including your data volume, Drupal site or sites, and commonly customized xml and xslt files) to your ISLE framework.\n\n\nPrerequisites:\n\n\n\n\n\n\nHost Server set up according to the \ninstructions\n\n\n\n\n\n\nHave a domain name that works - is set up with DNS etc...\n\n\n\n\n\n\nHave SSL Certificates for the domain\n\n\n\n\n\n\nISLE project has been cloned to BOTH your local laptop/workstation AND the host server - see \nSetup Guide\n\n\n\n\n\n\nDisk space on or mounted to the Host Server large enough to store a \ncopy\n of your fedora data store\n\n\n\n\n\n\nAccess to that server from your local workstation via SSH (\nislandora\n user with sudo privileges)\n\n\n\n\n\n\nAccess to the current Islandora production server\n\n\n\n\n\n\nUsernames/Passwords for key parts of your stack which are used \nfor\n the migration.\n\n\n\n\nDrupal SQL information: username, password, database name can be obtained from your original \nwww/sites/default/settings.php\n\n\nFedora SQL information: username, password, database name can be obtained from your original \nfedora/server/config/fedora.fcfcg\n\n\nFedora users: please have a copy of your \nfedora-users.xml\n\n\nTomcat users: please have a copy of your \ntomcat-users.xml\n OR use the default login: admin,ild_tc_adm_2018 (for both fedora and solr)\n\n\n\n\n\n\n\n\nSQL dump (export) of the current production site's Drupal database\n\n\n\n\n\n\n\n\nOverview of steps\n\n\ntl;dr\n Copy old stuff over to host server w/ checklist, create new private repo for configs, merge old configs into new configs w/ checklist, edit docker-compose.yml to point to new configs, spin up containers, go into fedora container \n reindex, qc site - Done.\n\n\n\n\n\n\nCOPY\n the drupal/islandora site and configuration files from the running production Islandora (there's a checklist)\n\n\n\n\n\n\ncreate a new directory for the /config folders and files, copy the ISLE repository /config into it, and make this into a private repository\n\n\n\n\n\n\nfollowing the steps in this document, edit the /config files so they have the proper site-specific information (there's a checklist for this too!)\n\n\n\n\n\n\nNOTE\n some of this will involve fairly complicated merging of files to account for custom edits that may have been made to your production Islandora site and/or to bring configuration files up to work with newer software versions. This is by far the trickiest part of the migration and definitely a good place to seek help from the community if you get stuck.\n\n\n\n\n\n\nEdit the docker-compose.yml file to point to all these fine new config files.\n\n\n\n\nDownload ISLE images from Dockerhub and spin up the ISLE Containers (takes a while depending on network speeds)\n\n\ngo into the fedora container and do re-index (takes a little while)\n\n\ngo to the new site and QC!\n\n\n\n\n\n\nDetailed Steps\n\n\n\n\n\n\nSetup a Private Code Repository\n\n\n\n\nMost of the work in this guide involves careful editing of the various configuration and settings files that customize the pieces of Islandora (database, repository, web-server, etc...).\n\n\nDoing this work in a code repository makes it easier to correct errors and to repeat the process for additional servers without needing to replicate all the work.\n\n\nSince the edits will include things like passwords, it's important to make this a private repository.\n\n\n\n\n\n\n\n\nCustomizing for your Environment\n\n\n\n\nMany of the steps below describe adding the domain name or other specific bits of information into files or appending those bits to file names.\n\n\nIn these cases this guide will call out the customization point AND provide an example - it's important not to literally copy paste the example!\n\n\nYour best guide for these customizations are the source files from your currently running Islandora environment.\n\n\n\n\n\n\n\n\nCreate Private Code Repository\n\n\nON your local laptop/workstation:\n\n\n\n\n\n\nOn the repository of your choice (GitHub, GitLab, Bitbucket, etc.) create a PRIVATE remote git repo - see the specific code repository documentation online for setup instructions.\n\n\n\n\n\n\nOpen a terminal - navigate to /opt/ISLE or where you put the ISLE directory on your local workstation.\n\n\n\n\n\n\nCreate a directory named \nyourdomain-config\n (where \"yourdomain\" is your server domain name)\n\n\n\n\n\n\nexample:  \ndigital-collectionsconfig\n\n\n\n\n\n\nLocate the directory called \nconfig\n and copy all the contents to the newly created directory\n\n\n\n\n\n\ncd\n into the newly copied and renamed yourdomainconfig directory and type:\n \ngit init\n to initate this directory as a code repository.\n\n\n\n\n\n\ngit remote add NameOfYourRepository URLofYourRepository\n to connect your local repository to the remote you set up in the above steps. [\nNOTE\n replace \"NameOfYourRepository\" and \"URLofYourRepository\" with the name of your repository and its URL]\n\n\n\n\n\n\nYou are now ready to perform the customization edits in this directory (you can use a text editor of choice now don't have to stay in terminal - just locate the folder in the finder and open file in text editor)\n\n\n\n\n\n\n\n\nMigration Export checklist\n\n\n\n\n\n\nfollowing the checklist of materials, \nCOPY\n from your current running institutional Islandora Production server(s) to your working directories on the local workstation.\n\n\n\n\n\n\nin the same /opt/ISLE directory create a new sub-directory (you can call this \ncurrent-production-config\n)\n\n\n\n\n\n\ncopy the files from your current live system into this directory as directed in the \nMigration Export Checklist\n\n\n\n\n\n\nThese copied files will be the source for edits and merges - just to be very clear, please don't work directly on the files in your currently running production system!\n\n\n\n\n\n\nTo be even more clear, you should have two nearly identical \n/config\n directories, \nA.\n copied from the cloned ISLE repository and renamed with your domain, and \nB.\n copied from your currently running Islandora environment.\n\n\n\n\n\n\nThe goal is to merge all site-specific data (domain names, variables, usernames, passwords, etc..) AND all site-specific customizations or settings from the files in directory B. into the matching files in directory A.\n\n\n\n\n\n\nCompare the data and settings of the files found within directory \nB.\n \ncurrent-production-config\n, and then merge, edit or copy as necessary with the templated settings found within the directory \nA.\n \nyourdomain-config\n as guided in the \nMigration Merge Checklist\n.\n\n\n\n\n\n\nCustomizations: Carefully compare the following most frequently customized files with the new, default versions found within your new ISLE config folder. Use a \"Diff\" tool (example: \nBeyond Compare\n to merge any desired customizations from your production Islandora files to persist within the new ISLE config folder of files:\n\n\n\n\n\n\nCompare and merge the Solr files: \nschema.xml\n\n\n\n\nCompare and merge the Solr files: \nsolrconfig.xml\n\n\nCompare and merge the Solr files: \nstopwords\n\n\n\n\nCompare and merge the Fedora GSearch Islandora Transform (XSLTs) folder of files: \nislandora_transforms\n\n\n\n\n\n\nEdit the \ndocker-compose.yml\n file to:\n\n\n\n\nPoint to the new directories and config settings in \nyourdomain-config\n\n\n\n\n\n\nFinal steps\n\n\n\n\n\n\nNow that all the changes are made (be sure to save), ISLE should be ready to test. First you'll need to push these changes to your private code repository.\n\n\n\n\n\n\nOpen a terminal - \ncd\n to the config directory you've been making the changes in...\n\n\n\n\n\n\ngit status\n  this will show you all the files that have been modified and ready to be added to your private repo along with handy paths for the next steps.\n\n\n\n\n\n\ngit add /pathtoyourmodifiedfile\n (replace \"pathtoyourmodifiedfile\" with the path to your config directory)\n\n\n\n\n\n\nrun these:\n\n\n\n\n\n\ngit add apache\n\n\ngit add fedora\n\n\ngit add mysql\n\n\ngit add proxy\n\n\ngit add solr\n\n\ngit add docker-compose.yml\n\n\n\n\n\n\nrun \ngit status\n again - everything should be in green now as all modified files have been added - if anything's still red use git add and the path to add it\n\n\n\n\n\n\nthen run \ngit commit -m \"initial config commit\"\n inside the double quotes is the commit message you can say whatever you want in this message - so for example if this is the config for your dev instance you could say that...\n\n\n\n\n\n\nrun \ngit push origin master\n this will push all your changes to the repo further changes should be made on branches for different servers or to master branch for this same server\n\n\n\n\n\n\n\n\n\n\n\n\nClone Custom Configuration to Host Server\n\n\n\n\n\n\nOpen a terminal - ssh into your host server using the \nislandora\n user\n\n\n\n\n\n\ncd\n to \n/opt/ISLE/config/\n\n\n\n\n\n\nbecause your customizations are in a \nprivate\n repository, you'll need to add this islandora user's \nid_rsa.pub\n key to the repository via the website.\n\n\n\n\n\n\nThis key is found in \n/home/islandora/.ssh/id_rsa.pub\n\n\n\n\n\n\nOne can simply run \ncat /home/islandora/.ssh/id_rsa.pub\n and copy the output (ensure no whitespaces or extra returns)\n\n\n\n\n\n\nGo to the repository web site with a browser and locate your private repository.\n\n\n\n\nlocate the ssh key entry location (in Bitbucket this is in Settings / Access Keys /\n\n\nadd\n an ssh key w/ the label \nislandora host server\n paste in the key text and click \nAdd Key\n\n\n\n\n\n\n\n\nBack at your terminal command line, run \ngit clone URLpathtoyourremoteprivaterepo.git .\n (replacing \"URLpathtoyourremoteprivaterepo\" with the URL to the repository provided by the website)\n\n\n\n\n\n\ncd\n into the newly cloned directory - this is a good time to check that the ISLE directory contains your \nyourdomain-config\n directory and that it reflects all the edits and customizations.\n\n\n\n\n\n\nSpin up ISLE containers!\n\n\nReview or pull down ISLE Docker images\n\n\nPlease Note: You may have already done this in setting up the host server manually and / or with Ansible. However it is always a good idea to review and check using the first command below.\n\n\n\n\nCheck if all ISLE images have been downloaded\n\n\n\n\ndocker image ls\n\n\n\n\n\n\nIf yes, then proceed to Step 7\n\n\n\n\n\n\nIf no, the perform the following:\n\n\n\n\ndocker pull islandoracollabgroup/isle-mysql:latest\n\n\ndocker pull islandoracollabgroup/isle-fedora:latest\n\n\ndocker pull islandoracollabgroup/isle-solr:latest\n\n\ndocker pull islandoracollabgroup/isle-apache:latest\n\n\ndocker pull islandoracollabgroup/isle-proxy:latest\n\n\n\n\n\n\n\n\n\n\nSpin up the proxy container\n\n\n\n\ncd /opt/ISLE/yourdomain-config\n\n\ndocker-compose up -d proxy\n\n\n\n\nSpin up mysql container and import production databases\n\n\n\n\ncd /opt/ISLE/yourdomain-config\n\n\ndocker-compose up -d mysql\n\n\n\n\nTwo methods for connecting to the MySQL Database (GUI / CLI) pick one.\n\n\n\n\n\n\nOne may use SQL GUI clients e.g. Sequel Pro, Navicat, PHPMyAdmin etc.\n\n\n\n\n\n\nIf above not practical, one may connect to the MySQL container and run the following.\n\n\n\n\ndocker exec -it isle-mysql-institution bash\n to connect to the container\n\n\nappropriate mysql commands here: consult MySQL documentation - https://dev.mysql.com/doc/refman/5.7/en/\n\n\n\n\n\n\n\n\nThe following are STEPS, not literal commands to prepare your db for ISLE (\ndoing this because we've found there are errors using exported db from production because of caches - causes problems - steps below help you remove this problem\n)\n\n\n\n\nimport the production databases into the isle-mysql-institution container (\nwith errors being ignored\n)\n\n\ntruncate all tables that start with \ncache\n on the isle-mysql-institution container\n\n\nexport this new database to the \nmysql\n directory on the isle host server\n\n\ndelete all tables (\nnot the database itself\n) on the isle-mysql-institution container\n\n\nReimport the new lighter database to the isle-mysql container\n\n\n\n\n\n\nSpin up fedora container and run reindex processes\n\n\nStaying within \n/opt/ISLE/yourdomain-config\n\n\n\n\ndocker-compose up -d fedora\n\n\noptional\n check if fedora is running properly e.g. \nhttp://isle-prod-project.institution:8080/manager/html\n\n\ndocker exec -it isle-fedora-institution bash\n\n\n\n\nReindex Fedora RI (1/3)\n\n\n\n\ncd /usr/local/tomcat/conf/bin/\n\n\n./shutdown.sh\n\n\nWait 7 - 10 seconds for the service to stop properly\n\n\nNavigate to the fedora installation directory and run the following command for the first Fedora reindex\n\ncd /usr/local/fedora/server/bin /bin/sh fedora-rebuild.sh -r org.fcrepo.server.resourceIndex.ResourceIndexRebuilder \n /home/islandora/fedora_ri.log 2\n1\n\n\nThis process may take upwards of 5-10 minutes depending on the number of objects in Fedora repository. If you want to follow the process, you can enter \ntail -f /home/islandora/fedora_ri.log\n it will tell you when complete.\n\n\n\n\nReindex SQL RI (2/3)\n\n\n\n\n\n\nTruncate all existing tables within the Fedora (fedora3 or fedora) database on the MySQL server. (If necessary, see MySQL documentation on how to truncate tables).\n\n\n\n\n\n\nOption 1: Truncate by GUI Application\n\n\n\n\nUsing a GUI based application e.g. Sequel Pro, access the fedora database and right click on the table information on the right hand side, the option to Truncate will appear, click on it to perform the action\n\n\n\n\n\n\n\n\nOption 2: Truncate by Command Line - see MySQL documentation - be sure to use \nmysql\n or \n127.0.0.1\n as the database host if connected to the mysql container on the CLI.\n\n\n\n\n\n\nNavigate to the fedora installation directory and run the following command for the second MySQL reindex\n\n\n\n\ncd /usr/local/fedora/server/bin\n\n\n\n\n/bin/bash fedora-rebuild.sh -r org.fcrepo.server.utilities.rebuild.SQLRebuilder \n /home/islandora/sql_ri.log 2\n1\n\n\n\n\n\n\nThis process may take upwards of 5-10 minutes depending on the number of objects in Fedora repository. If you want to follow the process, you can enter \ntail -f /home/islandora/sql_ri.log\n it will tell you when complete.\n\n\n\n\n\n\nRestart Tomcat service\n\n\n\n\ncd /usr/local/tomcat/conf/bin/\n\n\n./startup.sh\n\n\nWait 7 - 10 seconds for the service to start properly\n\n\n\n\n\n\nSpin up solr container\n\n\n\n\nStaying within \n/opt/ISLE/yourdomain-config\n\n\ndocker-compose up -d solr\n\n\n(\noptional\n) check if solr is running properly e.g. \nhttp://isle-prod-project.institution:8777/manager/html\n\n\n\n\nReindex Solr from Fedora container (3/3)\n\n\n\n\n\n\ndocker exec -it isle-fedora-institution bash\n \nNOTE FEDORA NOT SOLR!\n\n\n\n\n\n\nAs this third process can take hours, recommend using the screen program to be able to detach from the command line and server without terminating the process.\n\n\n\n\nExit any active containers. one should now be ssh'ed in only as the islandora user.\n\n\nEnter \u201cscreen\u201d at the prompt. (this should start a new screen session)\n\n\ndocker exec -it isle-fedora-institution bash\n\n\ncd /usr/local/tomcat/webapps/fedoragsearch/client\n\n\n/bin/sh runRESTClient.sh localhost:8080 updateIndex fromFoxmlFiles\n\n\nThis process will now ask you for the appropriate fgsAdmin username \n password\n\n\nOnce entered, a small amount of output will print out but nothing more to indicate the process is running\n\n\nAt this point, type \u201cCtrl-A\u201d and then \u201cd\u201d to detach the screen. This will return one to the original prompt. It is now safe to exit the server without killing the process.\n\n\nOne can check progress via \nhtop\n or \nps aux\n\n\nTo reattach, \nsudo su\n and then type:  \nscreen -r\n\n\nYou can now see the process has finished.\n\n\nTo exit the screen session, type exit.\n\n\nCheck the results on the site using Islandora simple search or the appropriate search method.\n\n\n\n\n\n\nSpin up apache container\n\n\n\n\nStaying within \n/opt/ISLE/yourdomain-config\n\n\ndocker-compose up -d apache\n\n\n(\noptional\n) check if apache is running properly e.g. \nhttps://isle-prod-project.institution\n\n\n(\noptional\n) You may find that you need to re-run the \nfix-permissions.sh\n script\n\n\ndocker exec -it isle-apache-institution bash\n\n\n/bin/bash /tmp/isle_drupal_build_tools/fix-permissions.sh --drupal_path=/var/www/html --drupal_user=islandora --httpd_group=www-data\n\n\n\n\n\n\n\n\n\n\nCheck site and outline QC process", 
            "title": "Migration Guide"
        }, 
        {
            "location": "/01_Installation_Migration/Migration_Guide/#migrate-an-existing-islandora-environment-to-isle", 
            "text": "This Migration guide will help you migrate your existing production Islandora environment to utilize this ISLE framework for easily maintaining Islandora. This guide will walk you through how to identify and copy your institution's Islandora data and files (including your data volume, Drupal site or sites, and commonly customized xml and xslt files) to your ISLE framework.  Prerequisites:    Host Server set up according to the  instructions    Have a domain name that works - is set up with DNS etc...    Have SSL Certificates for the domain    ISLE project has been cloned to BOTH your local laptop/workstation AND the host server - see  Setup Guide    Disk space on or mounted to the Host Server large enough to store a  copy  of your fedora data store    Access to that server from your local workstation via SSH ( islandora  user with sudo privileges)    Access to the current Islandora production server    Usernames/Passwords for key parts of your stack which are used  for  the migration.   Drupal SQL information: username, password, database name can be obtained from your original  www/sites/default/settings.php  Fedora SQL information: username, password, database name can be obtained from your original  fedora/server/config/fedora.fcfcg  Fedora users: please have a copy of your  fedora-users.xml  Tomcat users: please have a copy of your  tomcat-users.xml  OR use the default login: admin,ild_tc_adm_2018 (for both fedora and solr)     SQL dump (export) of the current production site's Drupal database", 
            "title": "Migrate an Existing Islandora Environment to ISLE"
        }, 
        {
            "location": "/01_Installation_Migration/Migration_Guide/#overview-of-steps", 
            "text": "tl;dr  Copy old stuff over to host server w/ checklist, create new private repo for configs, merge old configs into new configs w/ checklist, edit docker-compose.yml to point to new configs, spin up containers, go into fedora container   reindex, qc site - Done.    COPY  the drupal/islandora site and configuration files from the running production Islandora (there's a checklist)    create a new directory for the /config folders and files, copy the ISLE repository /config into it, and make this into a private repository    following the steps in this document, edit the /config files so they have the proper site-specific information (there's a checklist for this too!)    NOTE  some of this will involve fairly complicated merging of files to account for custom edits that may have been made to your production Islandora site and/or to bring configuration files up to work with newer software versions. This is by far the trickiest part of the migration and definitely a good place to seek help from the community if you get stuck.    Edit the docker-compose.yml file to point to all these fine new config files.   Download ISLE images from Dockerhub and spin up the ISLE Containers (takes a while depending on network speeds)  go into the fedora container and do re-index (takes a little while)  go to the new site and QC!", 
            "title": "Overview of steps"
        }, 
        {
            "location": "/01_Installation_Migration/Migration_Guide/#detailed-steps", 
            "text": "Setup a Private Code Repository   Most of the work in this guide involves careful editing of the various configuration and settings files that customize the pieces of Islandora (database, repository, web-server, etc...).  Doing this work in a code repository makes it easier to correct errors and to repeat the process for additional servers without needing to replicate all the work.  Since the edits will include things like passwords, it's important to make this a private repository.     Customizing for your Environment   Many of the steps below describe adding the domain name or other specific bits of information into files or appending those bits to file names.  In these cases this guide will call out the customization point AND provide an example - it's important not to literally copy paste the example!  Your best guide for these customizations are the source files from your currently running Islandora environment.", 
            "title": "Detailed Steps"
        }, 
        {
            "location": "/01_Installation_Migration/Migration_Guide/#create-private-code-repository", 
            "text": "ON your local laptop/workstation:    On the repository of your choice (GitHub, GitLab, Bitbucket, etc.) create a PRIVATE remote git repo - see the specific code repository documentation online for setup instructions.    Open a terminal - navigate to /opt/ISLE or where you put the ISLE directory on your local workstation.    Create a directory named  yourdomain-config  (where \"yourdomain\" is your server domain name)    example:   digital-collectionsconfig    Locate the directory called  config  and copy all the contents to the newly created directory    cd  into the newly copied and renamed yourdomainconfig directory and type:\n  git init  to initate this directory as a code repository.    git remote add NameOfYourRepository URLofYourRepository  to connect your local repository to the remote you set up in the above steps. [ NOTE  replace \"NameOfYourRepository\" and \"URLofYourRepository\" with the name of your repository and its URL]    You are now ready to perform the customization edits in this directory (you can use a text editor of choice now don't have to stay in terminal - just locate the folder in the finder and open file in text editor)", 
            "title": "Create Private Code Repository"
        }, 
        {
            "location": "/01_Installation_Migration/Migration_Guide/#migration-export-checklist", 
            "text": "following the checklist of materials,  COPY  from your current running institutional Islandora Production server(s) to your working directories on the local workstation.    in the same /opt/ISLE directory create a new sub-directory (you can call this  current-production-config )    copy the files from your current live system into this directory as directed in the  Migration Export Checklist    These copied files will be the source for edits and merges - just to be very clear, please don't work directly on the files in your currently running production system!    To be even more clear, you should have two nearly identical  /config  directories,  A.  copied from the cloned ISLE repository and renamed with your domain, and  B.  copied from your currently running Islandora environment.    The goal is to merge all site-specific data (domain names, variables, usernames, passwords, etc..) AND all site-specific customizations or settings from the files in directory B. into the matching files in directory A.    Compare the data and settings of the files found within directory  B.   current-production-config , and then merge, edit or copy as necessary with the templated settings found within the directory  A.   yourdomain-config  as guided in the  Migration Merge Checklist .    Customizations: Carefully compare the following most frequently customized files with the new, default versions found within your new ISLE config folder. Use a \"Diff\" tool (example:  Beyond Compare  to merge any desired customizations from your production Islandora files to persist within the new ISLE config folder of files:    Compare and merge the Solr files:  schema.xml   Compare and merge the Solr files:  solrconfig.xml  Compare and merge the Solr files:  stopwords   Compare and merge the Fedora GSearch Islandora Transform (XSLTs) folder of files:  islandora_transforms    Edit the  docker-compose.yml  file to:   Point to the new directories and config settings in  yourdomain-config", 
            "title": "Migration Export checklist"
        }, 
        {
            "location": "/01_Installation_Migration/Migration_Guide/#final-steps", 
            "text": "Now that all the changes are made (be sure to save), ISLE should be ready to test. First you'll need to push these changes to your private code repository.    Open a terminal -  cd  to the config directory you've been making the changes in...    git status   this will show you all the files that have been modified and ready to be added to your private repo along with handy paths for the next steps.    git add /pathtoyourmodifiedfile  (replace \"pathtoyourmodifiedfile\" with the path to your config directory)    run these:    git add apache  git add fedora  git add mysql  git add proxy  git add solr  git add docker-compose.yml    run  git status  again - everything should be in green now as all modified files have been added - if anything's still red use git add and the path to add it    then run  git commit -m \"initial config commit\"  inside the double quotes is the commit message you can say whatever you want in this message - so for example if this is the config for your dev instance you could say that...    run  git push origin master  this will push all your changes to the repo further changes should be made on branches for different servers or to master branch for this same server", 
            "title": "Final steps"
        }, 
        {
            "location": "/01_Installation_Migration/Migration_Guide/#clone-custom-configuration-to-host-server", 
            "text": "Open a terminal - ssh into your host server using the  islandora  user    cd  to  /opt/ISLE/config/    because your customizations are in a  private  repository, you'll need to add this islandora user's  id_rsa.pub  key to the repository via the website.    This key is found in  /home/islandora/.ssh/id_rsa.pub    One can simply run  cat /home/islandora/.ssh/id_rsa.pub  and copy the output (ensure no whitespaces or extra returns)    Go to the repository web site with a browser and locate your private repository.   locate the ssh key entry location (in Bitbucket this is in Settings / Access Keys /  add  an ssh key w/ the label  islandora host server  paste in the key text and click  Add Key     Back at your terminal command line, run  git clone URLpathtoyourremoteprivaterepo.git .  (replacing \"URLpathtoyourremoteprivaterepo\" with the URL to the repository provided by the website)    cd  into the newly cloned directory - this is a good time to check that the ISLE directory contains your  yourdomain-config  directory and that it reflects all the edits and customizations.", 
            "title": "Clone Custom Configuration to Host Server"
        }, 
        {
            "location": "/01_Installation_Migration/Migration_Guide/#spin-up-isle-containers", 
            "text": "", 
            "title": "Spin up ISLE containers!"
        }, 
        {
            "location": "/01_Installation_Migration/Migration_Guide/#review-or-pull-down-isle-docker-images", 
            "text": "Please Note: You may have already done this in setting up the host server manually and / or with Ansible. However it is always a good idea to review and check using the first command below.   Check if all ISLE images have been downloaded   docker image ls    If yes, then proceed to Step 7    If no, the perform the following:   docker pull islandoracollabgroup/isle-mysql:latest  docker pull islandoracollabgroup/isle-fedora:latest  docker pull islandoracollabgroup/isle-solr:latest  docker pull islandoracollabgroup/isle-apache:latest  docker pull islandoracollabgroup/isle-proxy:latest", 
            "title": "Review or pull down ISLE Docker images"
        }, 
        {
            "location": "/01_Installation_Migration/Migration_Guide/#spin-up-the-proxy-container", 
            "text": "cd /opt/ISLE/yourdomain-config  docker-compose up -d proxy", 
            "title": "Spin up the proxy container"
        }, 
        {
            "location": "/01_Installation_Migration/Migration_Guide/#spin-up-mysql-container-and-import-production-databases", 
            "text": "cd /opt/ISLE/yourdomain-config  docker-compose up -d mysql   Two methods for connecting to the MySQL Database (GUI / CLI) pick one.    One may use SQL GUI clients e.g. Sequel Pro, Navicat, PHPMyAdmin etc.    If above not practical, one may connect to the MySQL container and run the following.   docker exec -it isle-mysql-institution bash  to connect to the container  appropriate mysql commands here: consult MySQL documentation - https://dev.mysql.com/doc/refman/5.7/en/     The following are STEPS, not literal commands to prepare your db for ISLE ( doing this because we've found there are errors using exported db from production because of caches - causes problems - steps below help you remove this problem )   import the production databases into the isle-mysql-institution container ( with errors being ignored )  truncate all tables that start with  cache  on the isle-mysql-institution container  export this new database to the  mysql  directory on the isle host server  delete all tables ( not the database itself ) on the isle-mysql-institution container  Reimport the new lighter database to the isle-mysql container", 
            "title": "Spin up mysql container and import production databases"
        }, 
        {
            "location": "/01_Installation_Migration/Migration_Guide/#spin-up-fedora-container-and-run-reindex-processes", 
            "text": "Staying within  /opt/ISLE/yourdomain-config   docker-compose up -d fedora  optional  check if fedora is running properly e.g.  http://isle-prod-project.institution:8080/manager/html  docker exec -it isle-fedora-institution bash", 
            "title": "Spin up fedora container and run reindex processes"
        }, 
        {
            "location": "/01_Installation_Migration/Migration_Guide/#reindex-fedora-ri-13", 
            "text": "cd /usr/local/tomcat/conf/bin/  ./shutdown.sh  Wait 7 - 10 seconds for the service to stop properly  Navigate to the fedora installation directory and run the following command for the first Fedora reindex cd /usr/local/fedora/server/bin /bin/sh fedora-rebuild.sh -r org.fcrepo.server.resourceIndex.ResourceIndexRebuilder   /home/islandora/fedora_ri.log 2 1  This process may take upwards of 5-10 minutes depending on the number of objects in Fedora repository. If you want to follow the process, you can enter  tail -f /home/islandora/fedora_ri.log  it will tell you when complete.", 
            "title": "Reindex Fedora RI (1/3)"
        }, 
        {
            "location": "/01_Installation_Migration/Migration_Guide/#reindex-sql-ri-23", 
            "text": "Truncate all existing tables within the Fedora (fedora3 or fedora) database on the MySQL server. (If necessary, see MySQL documentation on how to truncate tables).    Option 1: Truncate by GUI Application   Using a GUI based application e.g. Sequel Pro, access the fedora database and right click on the table information on the right hand side, the option to Truncate will appear, click on it to perform the action     Option 2: Truncate by Command Line - see MySQL documentation - be sure to use  mysql  or  127.0.0.1  as the database host if connected to the mysql container on the CLI.    Navigate to the fedora installation directory and run the following command for the second MySQL reindex   cd /usr/local/fedora/server/bin   /bin/bash fedora-rebuild.sh -r org.fcrepo.server.utilities.rebuild.SQLRebuilder   /home/islandora/sql_ri.log 2 1    This process may take upwards of 5-10 minutes depending on the number of objects in Fedora repository. If you want to follow the process, you can enter  tail -f /home/islandora/sql_ri.log  it will tell you when complete.    Restart Tomcat service   cd /usr/local/tomcat/conf/bin/  ./startup.sh  Wait 7 - 10 seconds for the service to start properly", 
            "title": "Reindex SQL RI (2/3)"
        }, 
        {
            "location": "/01_Installation_Migration/Migration_Guide/#spin-up-solr-container", 
            "text": "Staying within  /opt/ISLE/yourdomain-config  docker-compose up -d solr  ( optional ) check if solr is running properly e.g.  http://isle-prod-project.institution:8777/manager/html", 
            "title": "Spin up solr container"
        }, 
        {
            "location": "/01_Installation_Migration/Migration_Guide/#reindex-solr-from-fedora-container-33", 
            "text": "docker exec -it isle-fedora-institution bash   NOTE FEDORA NOT SOLR!    As this third process can take hours, recommend using the screen program to be able to detach from the command line and server without terminating the process.   Exit any active containers. one should now be ssh'ed in only as the islandora user.  Enter \u201cscreen\u201d at the prompt. (this should start a new screen session)  docker exec -it isle-fedora-institution bash  cd /usr/local/tomcat/webapps/fedoragsearch/client  /bin/sh runRESTClient.sh localhost:8080 updateIndex fromFoxmlFiles  This process will now ask you for the appropriate fgsAdmin username   password  Once entered, a small amount of output will print out but nothing more to indicate the process is running  At this point, type \u201cCtrl-A\u201d and then \u201cd\u201d to detach the screen. This will return one to the original prompt. It is now safe to exit the server without killing the process.  One can check progress via  htop  or  ps aux  To reattach,  sudo su  and then type:   screen -r  You can now see the process has finished.  To exit the screen session, type exit.  Check the results on the site using Islandora simple search or the appropriate search method.", 
            "title": "Reindex Solr from Fedora container (3/3)"
        }, 
        {
            "location": "/01_Installation_Migration/Migration_Guide/#spin-up-apache-container", 
            "text": "Staying within  /opt/ISLE/yourdomain-config  docker-compose up -d apache  ( optional ) check if apache is running properly e.g.  https://isle-prod-project.institution  ( optional ) You may find that you need to re-run the  fix-permissions.sh  script  docker exec -it isle-apache-institution bash  /bin/bash /tmp/isle_drupal_build_tools/fix-permissions.sh --drupal_path=/var/www/html --drupal_user=islandora --httpd_group=www-data      Check site and outline QC process", 
            "title": "Spin up apache container"
        }, 
        {
            "location": "/01_Installation_Migration/Migration_User_Story/", 
            "text": "Migrating an Islandora site to ISLE: sample user story...\n\n\nLaverne's college archive runs an Islandora site on a server in the college IT data center. The site was installed and set up by a colleague who has since left. Some components are outdated and the work of maintaining the server and software stack is taking up a lot of Laverne's time. She's decided to try migrating the site to a new one built with ISLE.\n\n\nShe begins by requesting a second server from IT - based on the [System_Requirements]. IT prefers not to give clients root-level access so they agree to make Laverne a user called islandora according to the [Host_Server_Setup] instructions and provide her with the SSH login instructions. The new server has attached storage large enough to hold a copy of the existing Fedora data store from the old server.\n\n\nAdditionally, Laverne requests a new URL for the ISLE-based Islandora site \"https://digital.university-college.edu\" and ensures that IT has created DNS records so that this URL directs to the new server.\n\n\nOnce she has access to the server and has installed the necessary software including the ISLE repository files from GitHub [Host_Server_Setup], Larverne is ready for the step-by-step [Migration_Guide]. She begins by creating a place-holder directory in the new server for all the existing Islandora site data - and copying that data over from the old server using the [migration_export_checklist] as a guide. This data will be left in the place-holder directory as a backup during the coming migration process.\n\n\nLaverne now creates the permanent directory structure for ISLE to use in customizing the Islandora install and re-copies the data into this structure from the place-holder directory. Since this is merely a test, she's going to skip the process of setting up an institutional Git Repository for her customization files and move on to the merge section of the guide.\n\n\nWorking through the [migration_merge_checklist], Laverne ensures that the directories and files listed have been copied into the ISLE directory structure created above. As specified in the checklist, some of these files are slightly different in her current production Islandora. For example, the  and that they have been compared to (and in some cases merged by hand) with the stock up-to-date versions of these files that come with ISLE. This turns out to be the most complex part of the entire migration process and Laverne reaches out to the [ISLE_Group_List] for assistance with a couple of the configuration files that had been edited in the past by the colleague who set up the original Islandora system.\n\n\nFinally, she makes the necessary edits to the docker-compose.yml file to add the necessary connection specific information. This is where she will insert the new Url and IP addresses along with a number of other site-specific customizations [migration_docker_compose_checklist].\n\n\nNow she can enter the commands from the [Migration_Guide] to download the container images from Dockerhub and start them according to the instructions. After the Fedora container is up and running, Laverne follows the steps to test that all is well and sees a running Tomcat server w/ a list of running applications including fedora and Fedoragsearch. After starting the remaining containers, Laverne runs the Apache install script. If all goes well the next step will be to point a browser at the new Url and see a working Islandora site!", 
            "title": "Example User Story"
        }, 
        {
            "location": "/01_Installation_Migration/Migration_User_Story/#migrating-an-islandora-site-to-isle-sample-user-story", 
            "text": "Laverne's college archive runs an Islandora site on a server in the college IT data center. The site was installed and set up by a colleague who has since left. Some components are outdated and the work of maintaining the server and software stack is taking up a lot of Laverne's time. She's decided to try migrating the site to a new one built with ISLE.  She begins by requesting a second server from IT - based on the [System_Requirements]. IT prefers not to give clients root-level access so they agree to make Laverne a user called islandora according to the [Host_Server_Setup] instructions and provide her with the SSH login instructions. The new server has attached storage large enough to hold a copy of the existing Fedora data store from the old server.  Additionally, Laverne requests a new URL for the ISLE-based Islandora site \"https://digital.university-college.edu\" and ensures that IT has created DNS records so that this URL directs to the new server.  Once she has access to the server and has installed the necessary software including the ISLE repository files from GitHub [Host_Server_Setup], Larverne is ready for the step-by-step [Migration_Guide]. She begins by creating a place-holder directory in the new server for all the existing Islandora site data - and copying that data over from the old server using the [migration_export_checklist] as a guide. This data will be left in the place-holder directory as a backup during the coming migration process.  Laverne now creates the permanent directory structure for ISLE to use in customizing the Islandora install and re-copies the data into this structure from the place-holder directory. Since this is merely a test, she's going to skip the process of setting up an institutional Git Repository for her customization files and move on to the merge section of the guide.  Working through the [migration_merge_checklist], Laverne ensures that the directories and files listed have been copied into the ISLE directory structure created above. As specified in the checklist, some of these files are slightly different in her current production Islandora. For example, the  and that they have been compared to (and in some cases merged by hand) with the stock up-to-date versions of these files that come with ISLE. This turns out to be the most complex part of the entire migration process and Laverne reaches out to the [ISLE_Group_List] for assistance with a couple of the configuration files that had been edited in the past by the colleague who set up the original Islandora system.  Finally, she makes the necessary edits to the docker-compose.yml file to add the necessary connection specific information. This is where she will insert the new Url and IP addresses along with a number of other site-specific customizations [migration_docker_compose_checklist].  Now she can enter the commands from the [Migration_Guide] to download the container images from Dockerhub and start them according to the instructions. After the Fedora container is up and running, Laverne follows the steps to test that all is well and sees a running Tomcat server w/ a list of running applications including fedora and Fedoragsearch. After starting the remaining containers, Laverne runs the Apache install script. If all goes well the next step will be to point a browser at the new Url and see a working Islandora site!", 
            "title": "Migrating an Islandora site to ISLE: sample user story..."
        }, 
        {
            "location": "/01_Installation_Migration/migration_export_checklist/", 
            "text": "Migration Export Checklist\n\n\nThis section is a checklist of materials to \nCOPY\n from the current running institutional Islandora Production server(s) to the appropriate storage location / directory on the new ISLE directory.\n\n\nPlease Note:\n \nUbuntu / Debian style paths are used for all examples file locations below, endusers might have different locations for these files HOWEVER the file and directory names etc should be roughly the same.\n\n\nCaution\n: While the ISLE Project recommends use of export methods or tools such as rsync, scp etc., it assumes that endusers are familiar with them and are aware of possible dangers of improperly exporting or copying production data.\nEnsure adequate backups of any production system(s) are made prior to any attempts. If you are not familiar or are uncomfortable with these processes, it is highly advisable to work with an appropriate IT resource.\n\n\nFinally also please note:\n Instructions below call for you to \nCOPY\n data from your running Islandora environment into a folder: \ncurrent-production-config\n located on your workstation. You will then work from this copy for future steps.\n\n\n\n\nApache\n\n\nCopy the following below from the Islandora Production Server(s) to the suggested directory \n/current-production-config/apache/\n on the ISLE directory.\n\n\nThis data will be used in conjunction with an Apache container.\n\n\n\n\n\n\n\n\nData\n\n\nDescription\n\n\nPossible Location\n\n\nSuggested ISLE Path Destination\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nhtml\n\n\nIslandora/Drupal Website\n\n\n/var/www/\n\n\n/current-production-config/apache/\n\n\nsee below\n\n\n\n\n\n\nsettings.php\n\n\nDrupal settings.php file\n\n\n/var/www/html/sites/default/\n\n\n/current-production-config/apache/\n\n\nsee below\n\n\n\n\n\n\nphp.ini\n\n\nPHP configuration file\n\n\n/etc/\n\n\n/current-production-config/apache/\n\n\n--\n\n\n\n\n\n\nyoursite.conf\n\n\nApache webserver vhost file\n\n\n/etc/apache2/sites-available/\n\n\n/current-production-config/apache/\n\n\nsee below\n\n\n\n\n\n\n\n\nApache Notes\n:\n\n\n\n\n\n\n/var/www/\nhtml\n\n\n\n\n\n\nEntire contents unless size prohibits\n\n\n\n\n\n\nIf \nhtml\n is not used, then substitute with the appropriate directory for the Islandora / Drupal site\n\n\n\n\n\n\n\n\n\n\nsettings.php\n\n\n\n\nIf running multi-sites separate or rename appropriately e.g. multisite2_name_settings.php, multisite3_name_settings.php and so on...\n\n\n\n\n\n\n\n\nyoursite.conf\n\n\n\n\n\n\nFile will have different name\n\n\n\n\n\n\n\n\nFedora\n\n\nCopy the following below from the Islandora Production Server(s) to the suggested directory \ncurrent-production-config/fedora/\n on the ISLE directory.\n\n\nThis data will be used in conjunction with a Fedora container.  \n\n\n\n\n\n\n\n\nData\n\n\nDescription\n\n\nPossible Location\n\n\nSuggested ISLE Path Destination\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\ndata\n\n\nEntire Fedora data directory\n\n\n/usr/local/fedora/\n\n\n/current-production-config/fedora/\n\n\n--\n\n\n\n\n\n\nfedora.fcfg\n\n\nFedora repository config file\n\n\n/usr/local/fedora/server/config/\n\n\n/current-production-config/fedora/\n\n\n--\n\n\n\n\n\n\nfedora-users.xml\n\n\nFedora users config file\n\n\n/usr/local/fedora/server/config/\n\n\n/current-production-config/fedora/\n\n\n--\n\n\n\n\n\n\nfilter-drupal.xml\n\n\nFedora Drupal filter file\n\n\n/usr/local/fedora/server/config/\n\n\n/current-production-config/fedora/\n\n\n--\n\n\n\n\n\n\n\n\n\n\nGsearch\n\n\nCopy the following below from the Islandora Production Server(s) to the suggested directory \ncurrent-production-config/gsearch/\n on the ISLE directory.\n\n\nThis data will be used in conjunction with a Fedora container.\n\n\n\n\n\n\n\n\nData\n\n\nDescription\n\n\nPossible Location\n\n\nSuggested ISLE Path Destination\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nfedoragsearch.properties\n\n\nGsearch config file\n\n\n/var/lib/tomcat/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/\n\n\n/current-production-config/gsearch/\n\n\n--\n\n\n\n\n\n\nfgsconfig-basic-configForIslandora.properties\n\n\nGsearch config file\n\n\n/var/lib/tomcat7/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/\n\n\n/current-production-config/gsearch/\n\n\n--\n\n\n\n\n\n\nfgsconfigObjects.properties\n\n\nGsearch config file\n\n\n/var/lib/tomcat7/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/\n\n\n/current-production-config/gsearch/\n\n\n--\n\n\n\n\n\n\nrepository.properties\n\n\nGsearch config file\n\n\n/var/lib/tomcat7/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/repository/FgsRepos/\n\n\n/current-production-config/gsearch/\n\n\n--\n\n\n\n\n\n\nislandora_transforms\n\n\nTransformation XSLTs directory\n\n\n/var/lib/tomcat7/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/index/FgsIndex/\n\n\n/current-production-config/gsearch/\n\n\n--\n\n\n\n\n\n\nfoxmlToSolr.xslt\n\n\n\"top-level\" transformational XSLT\n\n\n/var/lib/tomcat7/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/index/FgsIndex/\n\n\n/current-production-config/gsearch/\n\n\n--\n\n\n\n\n\n\n\n\nMySQL\n\n\nCopy the following below from the Islandora Production Server(s) to the suggested directory \ncurrent-production-config/mysql/\n on the ISLE directory.\n\n\nThis data will be used in conjunction with a MySQL container.\n\n\n\n\n\n\n\n\nData\n\n\nDescription\n\n\nPossible Location\n\n\nSuggested COPY Method\n\n\nSuggested ISLE Path Destination\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nDatabases\n\n\nDrupal website databases\n\n\n/var/lib/mysql\n\n\nCLI, MySQL Workbench or Sequel Pro etc.\n\n\n/current-production-config/mysql/\n\n\nsee below\n\n\n\n\n\n\nmy.cnf\n\n\nMySQL server config file\n\n\n/etc/mysql/my.cnf\n\n\nrsync / scp\n\n\n/current-production-config/mysql/\n\n\n--\n\n\n\n\n\n\n\n\nMySQL Notes\n:\n\n\n\n\n\n\nDrupal website databases can have a multitude of names and conventions. Confer with the appropriate IT resources for your institution's database naming conventions.\n\n\n\n\n\n\nCLI == Command line\n\n\n\n\n\n\nRecommended that the production databases be exported using the \n.sql\n and \n.gz\n file formats e.g. \ndrupal_site_2018.sql.gz\n for better compression and minimal storage footprint.\n\n\n\n\n\n\nIf the enduser is running multi-sites, there will be additional databases to export.\n\n\n\n\n\n\nDo not export the \nfedora3\n database as it will be recreated by the SQL index in later steps of the Migration Guide\n\n\n\n\n\n\nIf possible, on the production Apache webserver, run \ndrush cc all\n from the command line on the production server in the appropriate sites directory PRIOR to db export(s)\n\n\n\n\nOtherwise issues can occur on import due to all cache tables being larger than \ninnodb_log_file_size\n allows\n\n\n\n\nMySQL Tools for Export\n\n\n\n\nOfficial MySQL documentation\n\n\nDigital Ocean quick start for cli export\n\n\nOfficial MySQL GUI app - Workbench\n \nFor Linux, MacOS and Windows\n\n\nSequel Pro\n \nMacOS only\n\n\n\n\nTomcat\n\n\nCopy the following below from the Islandora Production Server(s) to the suggested directory to the ISLE directory \ncurrent-production-config/tomcat\n\n\nThis data will be used in conjunction with the Tomcat service found on a Fedora or SOLR container.\n\n\n\n\n\n\n\n\nData\n\n\nDescription\n\n\nPossible Location\n\n\nSuggested ISLE Path Destination\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\ntomcat-users.xml\n\n\nTomcat server config file\n\n\n/var/lib/tomcat7/conf/tomcat-users.xml\n\n\n/current-production-config/tomcat/\n\n\n--\n\n\n\n\n\n\n\n\nSolr\n\n\nCopy the following below from the Islandora Production Server(s) to the suggested directory to the ISLE directory \ncurrent-production-config/solr\n\n\nThis data will be used in conjunction with a SOLR container.\n\n\n\n\n\n\n\n\nData\n\n\nDescription\n\n\nPossible Location\n\n\nSuggested ISLE Path Destination\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nschema.xml\n\n\nSolr schema file\n\n\n/var/lib/tomcat7/webapps/solr/collection1/conf/schema.xml\n\n\n/current-production-config/solr\n\n\nsee below\n\n\n\n\n\n\nsolrconfig.xml\n\n\nSolr config file\n\n\n/var/lib/tomcat7/webapps/solr/collection1/conf/solrconfig.xml\n\n\n/current-production-config/solr\n\n\nsee below\n\n\n\n\n\n\nstopwords.txt\n\n\nSolr file for filtering out common words\n\n\n/var/lib/tomcat7/webapps/solr/collection1/conf/stopwords.txt\n\n\n/current-production-config/solr\n\n\nsee below", 
            "title": "Migration Export Checklist"
        }, 
        {
            "location": "/01_Installation_Migration/migration_export_checklist/#migration-export-checklist", 
            "text": "This section is a checklist of materials to  COPY  from the current running institutional Islandora Production server(s) to the appropriate storage location / directory on the new ISLE directory.  Please Note:   Ubuntu / Debian style paths are used for all examples file locations below, endusers might have different locations for these files HOWEVER the file and directory names etc should be roughly the same.  Caution : While the ISLE Project recommends use of export methods or tools such as rsync, scp etc., it assumes that endusers are familiar with them and are aware of possible dangers of improperly exporting or copying production data.\nEnsure adequate backups of any production system(s) are made prior to any attempts. If you are not familiar or are uncomfortable with these processes, it is highly advisable to work with an appropriate IT resource.  Finally also please note:  Instructions below call for you to  COPY  data from your running Islandora environment into a folder:  current-production-config  located on your workstation. You will then work from this copy for future steps.", 
            "title": "Migration Export Checklist"
        }, 
        {
            "location": "/01_Installation_Migration/migration_export_checklist/#apache", 
            "text": "Copy the following below from the Islandora Production Server(s) to the suggested directory  /current-production-config/apache/  on the ISLE directory.  This data will be used in conjunction with an Apache container.     Data  Description  Possible Location  Suggested ISLE Path Destination  Notes      html  Islandora/Drupal Website  /var/www/  /current-production-config/apache/  see below    settings.php  Drupal settings.php file  /var/www/html/sites/default/  /current-production-config/apache/  see below    php.ini  PHP configuration file  /etc/  /current-production-config/apache/  --    yoursite.conf  Apache webserver vhost file  /etc/apache2/sites-available/  /current-production-config/apache/  see below     Apache Notes :    /var/www/ html    Entire contents unless size prohibits    If  html  is not used, then substitute with the appropriate directory for the Islandora / Drupal site      settings.php   If running multi-sites separate or rename appropriately e.g. multisite2_name_settings.php, multisite3_name_settings.php and so on...     yoursite.conf    File will have different name", 
            "title": "Apache"
        }, 
        {
            "location": "/01_Installation_Migration/migration_export_checklist/#fedora", 
            "text": "Copy the following below from the Islandora Production Server(s) to the suggested directory  current-production-config/fedora/  on the ISLE directory.  This data will be used in conjunction with a Fedora container.       Data  Description  Possible Location  Suggested ISLE Path Destination  Notes      data  Entire Fedora data directory  /usr/local/fedora/  /current-production-config/fedora/  --    fedora.fcfg  Fedora repository config file  /usr/local/fedora/server/config/  /current-production-config/fedora/  --    fedora-users.xml  Fedora users config file  /usr/local/fedora/server/config/  /current-production-config/fedora/  --    filter-drupal.xml  Fedora Drupal filter file  /usr/local/fedora/server/config/  /current-production-config/fedora/  --", 
            "title": "Fedora"
        }, 
        {
            "location": "/01_Installation_Migration/migration_export_checklist/#gsearch", 
            "text": "Copy the following below from the Islandora Production Server(s) to the suggested directory  current-production-config/gsearch/  on the ISLE directory.  This data will be used in conjunction with a Fedora container.     Data  Description  Possible Location  Suggested ISLE Path Destination  Notes      fedoragsearch.properties  Gsearch config file  /var/lib/tomcat/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/  /current-production-config/gsearch/  --    fgsconfig-basic-configForIslandora.properties  Gsearch config file  /var/lib/tomcat7/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/  /current-production-config/gsearch/  --    fgsconfigObjects.properties  Gsearch config file  /var/lib/tomcat7/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/  /current-production-config/gsearch/  --    repository.properties  Gsearch config file  /var/lib/tomcat7/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/repository/FgsRepos/  /current-production-config/gsearch/  --    islandora_transforms  Transformation XSLTs directory  /var/lib/tomcat7/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/index/FgsIndex/  /current-production-config/gsearch/  --    foxmlToSolr.xslt  \"top-level\" transformational XSLT  /var/lib/tomcat7/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/index/FgsIndex/  /current-production-config/gsearch/  --", 
            "title": "Gsearch"
        }, 
        {
            "location": "/01_Installation_Migration/migration_export_checklist/#mysql", 
            "text": "Copy the following below from the Islandora Production Server(s) to the suggested directory  current-production-config/mysql/  on the ISLE directory.  This data will be used in conjunction with a MySQL container.     Data  Description  Possible Location  Suggested COPY Method  Suggested ISLE Path Destination  Notes      Databases  Drupal website databases  /var/lib/mysql  CLI, MySQL Workbench or Sequel Pro etc.  /current-production-config/mysql/  see below    my.cnf  MySQL server config file  /etc/mysql/my.cnf  rsync / scp  /current-production-config/mysql/  --     MySQL Notes :    Drupal website databases can have a multitude of names and conventions. Confer with the appropriate IT resources for your institution's database naming conventions.    CLI == Command line    Recommended that the production databases be exported using the  .sql  and  .gz  file formats e.g.  drupal_site_2018.sql.gz  for better compression and minimal storage footprint.    If the enduser is running multi-sites, there will be additional databases to export.    Do not export the  fedora3  database as it will be recreated by the SQL index in later steps of the Migration Guide    If possible, on the production Apache webserver, run  drush cc all  from the command line on the production server in the appropriate sites directory PRIOR to db export(s)   Otherwise issues can occur on import due to all cache tables being larger than  innodb_log_file_size  allows   MySQL Tools for Export   Official MySQL documentation  Digital Ocean quick start for cli export  Official MySQL GUI app - Workbench   For Linux, MacOS and Windows  Sequel Pro   MacOS only   Tomcat  Copy the following below from the Islandora Production Server(s) to the suggested directory to the ISLE directory  current-production-config/tomcat  This data will be used in conjunction with the Tomcat service found on a Fedora or SOLR container.     Data  Description  Possible Location  Suggested ISLE Path Destination  Notes      tomcat-users.xml  Tomcat server config file  /var/lib/tomcat7/conf/tomcat-users.xml  /current-production-config/tomcat/  --     Solr  Copy the following below from the Islandora Production Server(s) to the suggested directory to the ISLE directory  current-production-config/solr  This data will be used in conjunction with a SOLR container.     Data  Description  Possible Location  Suggested ISLE Path Destination  Notes      schema.xml  Solr schema file  /var/lib/tomcat7/webapps/solr/collection1/conf/schema.xml  /current-production-config/solr  see below    solrconfig.xml  Solr config file  /var/lib/tomcat7/webapps/solr/collection1/conf/solrconfig.xml  /current-production-config/solr  see below    stopwords.txt  Solr file for filtering out common words  /var/lib/tomcat7/webapps/solr/collection1/conf/stopwords.txt  /current-production-config/solr  see below", 
            "title": "MySQL"
        }, 
        {
            "location": "/01_Installation_Migration/migration_merge_checklist/", 
            "text": "Migration Merge Checklist\n\n\nThis section is to serve as a new checklist for the editing or merging of the copied Islandora Production server(s) data and config files to the appropriate config directory on the new ISLE Host Server.\n\n\nThe suggested workflow is for endusers to review the Production file(s) first, make note of any settings and then make appropriate edits within the \nyourdomain-config\n directory to change values, add passwords or usernames etc unless otherwise directed e.g. Apache \nhtml\n and Fedora \ndata\n. (NOTE: as per the migration guide instructions the name of this directory shouldn't literally be \"yourdomain-confg\" but replace \"yourdomain\" with the name of your intended Islandora site's domain).\n\n\nWhile this checklist will attempt to point out most of the merge challenges or pitfalls, you may encounter unique situations depending on the edits and customizations made to your Islandora environment in the past. This is a good place to reach out to the Islandora community for assistance.\n\n\nPlease note:\n\n\n\n\n\n\nIn most cases, many of the configuration files copied from your running production Islandora will have comments (#) in them to help guide endusers to make the appropriate edits e.g. (# enduser edit here)\n\n\n\n\n\n\nIn most cases, many of the configuration files copied from ISLE repository to \nyourdomain-config\n will have fake or empty settings in them. Please remove, edit or enter new values as advised.\n\n\n\n\n\n\n\n\nApache\n\n\nCompare, edit, merge or copy the following from the source directory \ncurrent-production-config/apache/\n to:\n\n\n\n\nyourdomain-config/apache/\n\n\n\n\nThis data will be used in conjunction with an Apache container.\n\n\n\n\n\n\n\n\nData\n\n\nDescription\n\n\nProduction Data Copy\n\n\nMerge, Copy or Edit Location / Destination\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nhtml\n\n\nIslandora/Drupal Website\n\n\ncurrent-production-config/apache/\n\n\nyourdomain-config/apache/\n\n\nsee below\n\n\n\n\n\n\nsettings.php\n\n\nDrupal settings.php file\n\n\ncurrent-production-config/apache/\n\n\nyourdomain-config/apache/\n\n\nsee below\n\n\n\n\n\n\nsite.conf\n\n\nApache webserver vhost file\n\n\ncurrent-production-config/apache/\n\n\nyourdomain-config/apache/\n\n\nsee below\n\n\n\n\n\n\n\n\n\n\n\n\nhtml\n - endusers will \nCOPY\n this entire directory \ninstead\n to \nyourdomain-config/apache/html\n\n\n\n\n\n\nsettings.php\n - endusers will want to edit database and user names for Drupal sites to connect properly.\n\n\n\n\n\n\nLines 251 -253: Change the appropriate settings for the Drupal website database, associate database user name and password. Do not change the \nhost\n settings.  \n\n\n\n\n\n\nLine 288: \nRecommend adding a Drupal hash value here of 25+ alpha-numeric characters\n\n\n\n\n\n\nLine 312: \n$base_url\n should be the URL of the ISLE production Drupal website e.g. \nhttps://site.institution.extension\n\n\n\n\n\n\n\n\n\n\nsite.conf\n - endusers will edit this file as required to setup the Apache webserver on the Apache container.\n\n\n\n\n\n\nThe filename can stay the same or can be changed. Please note that Line 85 of the associated \ndocker-compose.yml\n will need to be updated if the file is renamed\n\n\n\n\n\n\nLines 2, 3, 6, 7, 34 - 37, 39, 40, 44 \n 45:  endusers will edit this file as directed in the (# enduser please edit this and then remove this comment) instructions.\n\n\n\n\n\n\nDo remove (# enduser please edit this and then remove this comment) after editing or adding the appropriate values.\n\n\n\n\n\n\n\n\n\n\nApache Optional Edits\n\n\n\n\n\n\n\n\nData\n\n\nDescription\n\n\nProduction Data Copy\n\n\nMerge, Copy or Edit Location / Destination\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nphp.ini\n\n\nPHP configuration file\n\n\ncurrent-production-config/apache/\n\n\nyourdomain-config/apache/\n\n\nsee below\n\n\n\n\n\n\n\n\n\n\n\n\nphp.ini\n - endusers can make appropriate edits within \nyourdomain-config/apache/php.ini\n to increase the upload settings, memory etc. as needed. Otherwise leaving the default values should work.\n\n\n\n\n\n\nPlease note:\n an additional line will have to be added to the associated \ndocker-compose.yml\n in the Apache \nvolumes:\n section for this edit to work e.g. \n- ./apache/php.ini:/etc/php.ini\n\n\n\n\n\n\n\n\n\n\n\n\nData\n\n\nDescription\n\n\nProduction Data Copy\n\n\nMerge, Copy or Edit Location / Destination\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\ntmpreaper\n\n\nCronjob for tmpreaper\n\n\ncurrent-production-config/apache/\n\n\nyourdomain-config/apache/\n\n\nsee below\n\n\n\n\n\n\n\n\n\n\n\n\ntmpreaper\n - (optional) endusers may want to edit this tmpreaper cron job for different locations and/or times. The \ndocker-compose.yml\n file will need an associated bind-mount for this change.\n\n\n\n\n\n\nPlease note:\n an additional line will have to be added to the associated \ndocker-compose.yml\n in the Apache \nvolumes:\n section for this edit to work e.g. \n- ./apache/tmpreaper/cron:/etc/cron.d/tmpreaper-cron\n\n\n\n\n\n\nFedora\n\n\nCompare, edit, merge or copy the following from the suggested directory \ncurrent-production-config/fedora/\n to:\n\n\n\n\nyourdomain-config/fedora/\n\n\n\n\n\n\n\n\n\n\nData\n\n\nDescription\n\n\nPossible Location\n\n\nSuggested Destination\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\ndata\n\n\nEntire Fedora data directory\n\n\n/usr/local/fedora/\n\n\nyourdomain-config/fedora/\n\n\nsee below\n\n\n\n\n\n\nfedora.fcfg\n\n\nFedora repository config file\n\n\n/usr/local/fedora/server/config/\n\n\n/yourdomain-config/fedora/\n\n\nsee below\n\n\n\n\n\n\nfedora-users.xml\n\n\nFedora users config file\n\n\n/usr/local/fedora/server/config/\n\n\n/yourdomain-config/fedora/\n\n\nsee below\n\n\n\n\n\n\nfilter-drupal.xml\n\n\nFedora Drupal filter file\n\n\n/usr/local/fedora/server/config/\n\n\n/yourdomain-config/fedora/\n\n\nsee below\n\n\n\n\n\n\nrepository-policies\n\n\nFedora Drupal filter file\n\n\n/usr/local/fedora/server/config/\n\n\n/yourdomain-config/fedora/\n\n\nsee below\n\n\n\n\n\n\n\n\nFedora Notes\n:\n\n\n\n\n\n\ndata\n - endusers will \nCOPY\n this entire directory \ninstead\n to \nyourdomain-config/fedora/data\n\n\n\n\n\n\nfedora.fcfg\n - endusers will want to edit the following:\n\n\n\n\n\n\nLine: 562 (optional) to change the \nfedora_admin\n username for the \nfedora3\n database\n\n\n\n\n\n\nLine: 598 (necessary) to enter the \nfedora_admin\n user password for the \nfedora3\n database\n\n\n\n\n\n\n\n\n\n\nfedora-users.xml\n - endusers will want to edit the following:\n\n\n\n\nLines 3, 8, 14 and 19: Add the appropriate passwords or users as needed.  \n\n\n\n\n\n\n\n\nfilter-drupal.xml\n - endusers will want to edit\n\n\n\n\n\n\nLine 3: Add the appropriate Drupal site database name, Drupal site database user and Drupal site database user password in between all \n\"\"\n\n\n\n\n\n\nPlease note:\n For endusers using Drupal multi-sites, please add additional sites as guided in the example below\n\n\n\n\n\n\nExample\n\n\n\n\n\n\n?xml version=\n1.0\n encoding=\nUTF-8\n?\n\n\nFilterDrupal_Connection\n\n\n    \nconnection server=\nmysql\n port=\n3306\n dbname=\ndrupalsite1\n user=\ndrupalsite1_user\n password=\ndrupalsite1_user_pw\n\n    \nsql\n\n       SELECT DISTINCT u.uid AS userid, u.name AS Name, u.pass AS Pass,r.name AS Role FROM (users u LEFT JOIN users_roles ON u.uid=users_roles.uid) LEFT JOIN role r ON r.rid=users_roles.rid WHERE u.name=? AND u.pass=?;\n    \n/sql\n\n    \n/connection\n\n\n    \nconnection server=\nmysql\n port=\n3306\n dbname=\ndrupalsite2\n user=\ndrupalsite2_user\n password=\ndrupalsite2_user_pw\n\n    \nsql\n\n       SELECT DISTINCT u.uid AS userid, u.name AS Name, u.pass AS Pass,r.name AS Role FROM (users u LEFT JOIN users_roles ON u.uid=users_roles.uid) LEFT JOIN role r ON r.rid=users_roles.rid WHERE u.name=? AND u.pass=?;\n    \n/sql\n\n    \n/connection\n\n\n\n/FilterDrupal_Connection\n\n\n\n\n\n\n\nfedora/repository-policies\n - endusers can edit the files contained within for more granular or customized Fedora user permissions or repository access.\n\n\n\n\nSolr\n\n\n   Copy the following below from the `current-production-config/solr/`\n   This data will be used in conjunction with a Solr container.\n   | Data           | Description               | Possible Location        | Suggested ISLE Path Destination          | Notes         |\n   | -------------  | -------------             | -------------            | -------------                            | ------------- |\n   | schema.xml     | Solr index config file    | ../solr/collection1/conf | /yourdomain-config/solr/ | _see below_   |\n   | solrconfig.xml | Solr config file          | ../solr/collection1/conf | /yourdomain-config/solr/ | _see below_   |\n   | solr.xml       | Solr config file file     | /opt/solr/               | /yourdomain-config/solr/ | _see below_   |\n   | stopwords.txt  | solr webserver vhost file | ../solr/collection1/conf | /yourdomain-config/solr/ | _see below_   |\n\n\n\nSolr Notes\n:\n\n\n\n\nschema.xml\n\n\nUsually the first file one configures when setting up a new Solr installation\n\n\nThe schema declares\n\n\nwhat kinds of fields there are\n\n\nwhich field should be used as the unique/primary key\n\n\nwhich fields are required\n\n\nhow to index and search each field\n\n\n\n\n\n\nsolrconfig.xml\n\n\nThe solrconfig.xml file is the configuration file with the most parameters affecting Solr itself.\n\n\nIn solrconfig.xml, one can configure the following:\n\n\nrequest handlers, which process requests to Solr, e.g. requests to add documents to the index or requests to return results for a query\n\n\nprocesses that \"listen\" for particular query-related events; listeners can be used to trigger the execution of special code\n\n\nthe Request Dispatcher for managing HTTP communications\n\n\nthe Admin Web interface\n\n\nparameters related to replication and duplication\n\n\n\n\n\n\nsolr.xml\n\n\nThe solr.xml file defines global configuration options that apply to all or many cores.\n\n\nstopwords.txt\n\n\n_Using the stopwords.txt file, one can avoid the common words of a language, which do not add a significant value to any search.\n\n\n\n\nFor example, a, an, the, you, I, am, and so on. One can specify words to be removed from the Solr search in this file line-by-line.\n\n\n\n\n\n\nAdditional Locations:\n\n\n\n\n/opt/solr\n\n\n/usr/local/solr\n\n\n/var/lib/tomcat7/webapps/solr\n\n\n/usr/share/tomcat/webapps/solr", 
            "title": "Migration Merge Checklist"
        }, 
        {
            "location": "/01_Installation_Migration/migration_merge_checklist/#migration-merge-checklist", 
            "text": "This section is to serve as a new checklist for the editing or merging of the copied Islandora Production server(s) data and config files to the appropriate config directory on the new ISLE Host Server.  The suggested workflow is for endusers to review the Production file(s) first, make note of any settings and then make appropriate edits within the  yourdomain-config  directory to change values, add passwords or usernames etc unless otherwise directed e.g. Apache  html  and Fedora  data . (NOTE: as per the migration guide instructions the name of this directory shouldn't literally be \"yourdomain-confg\" but replace \"yourdomain\" with the name of your intended Islandora site's domain).  While this checklist will attempt to point out most of the merge challenges or pitfalls, you may encounter unique situations depending on the edits and customizations made to your Islandora environment in the past. This is a good place to reach out to the Islandora community for assistance.  Please note:    In most cases, many of the configuration files copied from your running production Islandora will have comments (#) in them to help guide endusers to make the appropriate edits e.g. (# enduser edit here)    In most cases, many of the configuration files copied from ISLE repository to  yourdomain-config  will have fake or empty settings in them. Please remove, edit or enter new values as advised.", 
            "title": "Migration Merge Checklist"
        }, 
        {
            "location": "/01_Installation_Migration/migration_merge_checklist/#apache", 
            "text": "Compare, edit, merge or copy the following from the source directory  current-production-config/apache/  to:   yourdomain-config/apache/   This data will be used in conjunction with an Apache container.     Data  Description  Production Data Copy  Merge, Copy or Edit Location / Destination  Notes      html  Islandora/Drupal Website  current-production-config/apache/  yourdomain-config/apache/  see below    settings.php  Drupal settings.php file  current-production-config/apache/  yourdomain-config/apache/  see below    site.conf  Apache webserver vhost file  current-production-config/apache/  yourdomain-config/apache/  see below       html  - endusers will  COPY  this entire directory  instead  to  yourdomain-config/apache/html    settings.php  - endusers will want to edit database and user names for Drupal sites to connect properly.    Lines 251 -253: Change the appropriate settings for the Drupal website database, associate database user name and password. Do not change the  host  settings.      Line 288:  Recommend adding a Drupal hash value here of 25+ alpha-numeric characters    Line 312:  $base_url  should be the URL of the ISLE production Drupal website e.g.  https://site.institution.extension      site.conf  - endusers will edit this file as required to setup the Apache webserver on the Apache container.    The filename can stay the same or can be changed. Please note that Line 85 of the associated  docker-compose.yml  will need to be updated if the file is renamed    Lines 2, 3, 6, 7, 34 - 37, 39, 40, 44   45:  endusers will edit this file as directed in the (# enduser please edit this and then remove this comment) instructions.    Do remove (# enduser please edit this and then remove this comment) after editing or adding the appropriate values.", 
            "title": "Apache"
        }, 
        {
            "location": "/01_Installation_Migration/migration_merge_checklist/#apache-optional-edits", 
            "text": "Data  Description  Production Data Copy  Merge, Copy or Edit Location / Destination  Notes      php.ini  PHP configuration file  current-production-config/apache/  yourdomain-config/apache/  see below       php.ini  - endusers can make appropriate edits within  yourdomain-config/apache/php.ini  to increase the upload settings, memory etc. as needed. Otherwise leaving the default values should work.    Please note:  an additional line will have to be added to the associated  docker-compose.yml  in the Apache  volumes:  section for this edit to work e.g.  - ./apache/php.ini:/etc/php.ini       Data  Description  Production Data Copy  Merge, Copy or Edit Location / Destination  Notes      tmpreaper  Cronjob for tmpreaper  current-production-config/apache/  yourdomain-config/apache/  see below       tmpreaper  - (optional) endusers may want to edit this tmpreaper cron job for different locations and/or times. The  docker-compose.yml  file will need an associated bind-mount for this change.    Please note:  an additional line will have to be added to the associated  docker-compose.yml  in the Apache  volumes:  section for this edit to work e.g.  - ./apache/tmpreaper/cron:/etc/cron.d/tmpreaper-cron", 
            "title": "Apache Optional Edits"
        }, 
        {
            "location": "/01_Installation_Migration/migration_merge_checklist/#fedora", 
            "text": "Compare, edit, merge or copy the following from the suggested directory  current-production-config/fedora/  to:   yourdomain-config/fedora/      Data  Description  Possible Location  Suggested Destination  Notes      data  Entire Fedora data directory  /usr/local/fedora/  yourdomain-config/fedora/  see below    fedora.fcfg  Fedora repository config file  /usr/local/fedora/server/config/  /yourdomain-config/fedora/  see below    fedora-users.xml  Fedora users config file  /usr/local/fedora/server/config/  /yourdomain-config/fedora/  see below    filter-drupal.xml  Fedora Drupal filter file  /usr/local/fedora/server/config/  /yourdomain-config/fedora/  see below    repository-policies  Fedora Drupal filter file  /usr/local/fedora/server/config/  /yourdomain-config/fedora/  see below     Fedora Notes :    data  - endusers will  COPY  this entire directory  instead  to  yourdomain-config/fedora/data    fedora.fcfg  - endusers will want to edit the following:    Line: 562 (optional) to change the  fedora_admin  username for the  fedora3  database    Line: 598 (necessary) to enter the  fedora_admin  user password for the  fedora3  database      fedora-users.xml  - endusers will want to edit the following:   Lines 3, 8, 14 and 19: Add the appropriate passwords or users as needed.       filter-drupal.xml  - endusers will want to edit    Line 3: Add the appropriate Drupal site database name, Drupal site database user and Drupal site database user password in between all  \"\"    Please note:  For endusers using Drupal multi-sites, please add additional sites as guided in the example below    Example    ?xml version= 1.0  encoding= UTF-8 ?  FilterDrupal_Connection \n\n     connection server= mysql  port= 3306  dbname= drupalsite1  user= drupalsite1_user  password= drupalsite1_user_pw \n     sql \n       SELECT DISTINCT u.uid AS userid, u.name AS Name, u.pass AS Pass,r.name AS Role FROM (users u LEFT JOIN users_roles ON u.uid=users_roles.uid) LEFT JOIN role r ON r.rid=users_roles.rid WHERE u.name=? AND u.pass=?;\n     /sql \n     /connection \n\n     connection server= mysql  port= 3306  dbname= drupalsite2  user= drupalsite2_user  password= drupalsite2_user_pw \n     sql \n       SELECT DISTINCT u.uid AS userid, u.name AS Name, u.pass AS Pass,r.name AS Role FROM (users u LEFT JOIN users_roles ON u.uid=users_roles.uid) LEFT JOIN role r ON r.rid=users_roles.rid WHERE u.name=? AND u.pass=?;\n     /sql \n     /connection  /FilterDrupal_Connection    fedora/repository-policies  - endusers can edit the files contained within for more granular or customized Fedora user permissions or repository access.", 
            "title": "Fedora"
        }, 
        {
            "location": "/01_Installation_Migration/migration_merge_checklist/#solr", 
            "text": "Copy the following below from the `current-production-config/solr/`\n   This data will be used in conjunction with a Solr container.\n   | Data           | Description               | Possible Location        | Suggested ISLE Path Destination          | Notes         |\n   | -------------  | -------------             | -------------            | -------------                            | ------------- |\n   | schema.xml     | Solr index config file    | ../solr/collection1/conf | /yourdomain-config/solr/ | _see below_   |\n   | solrconfig.xml | Solr config file          | ../solr/collection1/conf | /yourdomain-config/solr/ | _see below_   |\n   | solr.xml       | Solr config file file     | /opt/solr/               | /yourdomain-config/solr/ | _see below_   |\n   | stopwords.txt  | solr webserver vhost file | ../solr/collection1/conf | /yourdomain-config/solr/ | _see below_   |  Solr Notes :   schema.xml  Usually the first file one configures when setting up a new Solr installation  The schema declares  what kinds of fields there are  which field should be used as the unique/primary key  which fields are required  how to index and search each field    solrconfig.xml  The solrconfig.xml file is the configuration file with the most parameters affecting Solr itself.  In solrconfig.xml, one can configure the following:  request handlers, which process requests to Solr, e.g. requests to add documents to the index or requests to return results for a query  processes that \"listen\" for particular query-related events; listeners can be used to trigger the execution of special code  the Request Dispatcher for managing HTTP communications  the Admin Web interface  parameters related to replication and duplication    solr.xml  The solr.xml file defines global configuration options that apply to all or many cores.  stopwords.txt  _Using the stopwords.txt file, one can avoid the common words of a language, which do not add a significant value to any search.   For example, a, an, the, you, I, am, and so on. One can specify words to be removed from the Solr search in this file line-by-line.    Additional Locations:   /opt/solr  /usr/local/solr  /var/lib/tomcat7/webapps/solr  /usr/share/tomcat/webapps/solr", 
            "title": "Solr"
        }, 
        {
            "location": "/Isle_Containers_Description/", 
            "text": "ISLE consists of 5 \"images\" accessible from the Dockerhub cloud repository. These images were built by the ISLE project in collaboration with the vendor, Born-Digital. ISLE project members maintain these images with software and hardware patches - the newest set on Dockerhub are always tagged \nlatest\n.\n\n\nThe images are spun up using Docker and create \"containers\" - a type of virtual server networked together by Docker internal networking. Together with the customization files in the \nconfig\n folder, they form the software stack for Islandora.\n\n\n\n\n\n\nisle-apache \nhttps://hub.docker.com/r/islandoracollabgroup/isle-apache/\n  \n\n\n\n\n\n\nisle-fedora \nhttps://hub.docker.com/r/islandoracollabgroup/isle-fedora/\n  \n\n\n\n\n\n\nisle-mysql \nhttps://hub.docker.com/r/islandoracollabgroup/isle-mysql/\n  \n\n\n\n\n\n\nisle-solr  \nhttps://hub.docker.com/r/islandoracollabgroup/isle-solr/\n  \n\n\n\n\n\n\nisle-proxy  \nhttps://hub.docker.com/r/islandoracollabgroup/isle-proxy/\n  \n\n\n\n\n\n\n\n\n1. MySQL container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\nmysql\n\n\nisle-mysql\n\n\nMySQL 5.6\n\n\n3306\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccount\n\n\nPassword\n\n\nDatabase\n\n\nPerms\n\n\n\n\n\n\n\n\n\n\nroot\n\n\nild_mysqlrt_2018\n\n\nALL\n\n\nALL\n\n\n\n\n\n\nfedora_admin\n\n\nild_feddb_2018\n\n\nfedora3\n\n\nAll\n except \nGrant\n option\n\n\n\n\n\n\nisle_ld_user\n\n\nisle_ld_db2018\n\n\nisle_ld\n\n\nAll\n except \nGrant\n option\n\n\n\n\n\n\n\n\n\n\n2. Fedora container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\nfedora\n\n\nisle-fedora\n\n\nsee below\n\n\n8080, 80 (on container) mapped to 8777 (on host)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware\n\n\nVersion\n\n\n\n\n\n\n\n\n\n\nFedora\n\n\n3.8.1\n\n\n\n\n\n\nApache\n\n\n2.4.7\n\n\n\n\n\n\nDrupalfilter\n\n\n3.8.1\n\n\n\n\n\n\nGsearch (w/remote SOLR plugin)\n\n\n2.8+ (DG patched)\n\n\n\n\n\n\n(DG) GSearch Extensions\n\n\n0.13\n\n\n\n\n\n\n(DG) Islandora Transforms (XSLTs)\n\n\nas of 1/2018\n\n\n\n\n\n\nTomcat\n\n\n7.x\n\n\n\n\n\n\nOracle JDK\n\n\n8.x\n\n\n\n\n\n\nDjatoka\n\n\n1.1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccount\n\n\nPassword\n\n\nService\n\n\nURL\n\n\n\n\n\n\n\n\n\n\nfedoraAdmin\n\n\nild_fed_admin_2018\n\n\nFedora\n\n\nhttp://hostip:8080/fedora/describe\n\n\n\n\n\n\nfedoraIntCallUser\n\n\nild_fed_IntCallUser_2018\n\n\nFedora\n\n\nhttp://hostip:8080/fedora/objects\n\n\n\n\n\n\nanonymous\n\n\nanonymous\n\n\nFedora\n\n\n---\n\n\n\n\n\n\nfgsAdmin\n\n\nild_fgs_admin_2018\n\n\nGsearch\n\n\nhttp://hostip:8080/fedoragsearch/rest?operation=updateIndex\n\n\n\n\n\n\nadmin\n\n\nild_tc_adm_2018\n\n\nTomcat\n\n\nhttp://hostip:8080/manager/html\n\n\n\n\n\n\nmanager\n\n\nild_tc_man_2018\n\n\nTomcat\n\n\nhttp://hostip:8080/manager/html\n\n\n\n\n\n\n--\n\n\n--\n\n\nDjatoka\n\n\nhttp://hostip:8080/adore-djatoka/\n\n\n\n\n\n\n--\n\n\n--\n\n\nApache\n\n\nhttp://hostip:8777\n\n\n\n\n\n\n\n\n\n\n3. Solr container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\nsolr\n\n\nisle-solr\n\n\nsee below\n\n\n8993, 8080 (on container) mapped to 8091 (on host)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware\n\n\nVersion\n\n\n\n\n\n\n\n\n\n\nSolr\n\n\n4.10.4\n\n\n\n\n\n\nTomcat\n\n\n7.x\n\n\n\n\n\n\nOracle JDK\n\n\n8.x\n\n\n\n\n\n\n(DG) Basic Solr Config\n\n\n4.10.x branch\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccount\n\n\nPassword\n\n\nService\n\n\nURL\n\n\n\n\n\n\n\n\n\n\nadmin\n\n\nild_tc_adm_2018\n\n\nTomcat\n\n\nhttp://hostip:8091/manager/html\n\n\n\n\n\n\nmanager\n\n\nild_tc_man_2018\n\n\nTomcat\n\n\nhttp://hostip:8091/manager/html\n\n\n\n\n\n\n--\n\n\n--\n\n\nSolr\n\n\nhttp://hostip:8091/solr/\n\n\n\n\n\n\n\n\n\n\n4. Apache container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\napache\n\n\nisle-apache\n\n\nsee below\n\n\n80\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware\n\n\nVersion\n\n\n\n\n\n\n\n\n\n\nApache\n\n\n2.4.7\n\n\n\n\n\n\nOracle JDK\n\n\n8.x\n\n\n\n\n\n\nDjatoka\n\n\n1.1\n\n\n\n\n\n\nDrupal\n\n\n7.56\n\n\n\n\n\n\nPHP\n\n\n5.6\n\n\n\n\n\n\nIslandora\n\n\n7.x\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccount\n\n\nPassword\n\n\nService\n\n\nURL\n\n\n\n\n\n\n\n\n\n\nisle_localdomain_admin\n\n\nisle_localdomain_adminpw2018\n\n\nDrupal site admin\n\n\nhttp://isle.localdomain", 
            "title": "ISLE Containers Description"
        }, 
        {
            "location": "/Isle_Containers_Description/#1-mysql-container", 
            "text": "Compose Service Name  Container Name  Software  Ports      mysql  isle-mysql  MySQL 5.6  3306        Account  Password  Database  Perms      root  ild_mysqlrt_2018  ALL  ALL    fedora_admin  ild_feddb_2018  fedora3  All  except  Grant  option    isle_ld_user  isle_ld_db2018  isle_ld  All  except  Grant  option", 
            "title": "1. MySQL container"
        }, 
        {
            "location": "/Isle_Containers_Description/#2-fedora-container", 
            "text": "Compose Service Name  Container Name  Software  Ports      fedora  isle-fedora  see below  8080, 80 (on container) mapped to 8777 (on host)        Software  Version      Fedora  3.8.1    Apache  2.4.7    Drupalfilter  3.8.1    Gsearch (w/remote SOLR plugin)  2.8+ (DG patched)    (DG) GSearch Extensions  0.13    (DG) Islandora Transforms (XSLTs)  as of 1/2018    Tomcat  7.x    Oracle JDK  8.x    Djatoka  1.1        Account  Password  Service  URL      fedoraAdmin  ild_fed_admin_2018  Fedora  http://hostip:8080/fedora/describe    fedoraIntCallUser  ild_fed_IntCallUser_2018  Fedora  http://hostip:8080/fedora/objects    anonymous  anonymous  Fedora  ---    fgsAdmin  ild_fgs_admin_2018  Gsearch  http://hostip:8080/fedoragsearch/rest?operation=updateIndex    admin  ild_tc_adm_2018  Tomcat  http://hostip:8080/manager/html    manager  ild_tc_man_2018  Tomcat  http://hostip:8080/manager/html    --  --  Djatoka  http://hostip:8080/adore-djatoka/    --  --  Apache  http://hostip:8777", 
            "title": "2. Fedora container"
        }, 
        {
            "location": "/Isle_Containers_Description/#3-solr-container", 
            "text": "Compose Service Name  Container Name  Software  Ports      solr  isle-solr  see below  8993, 8080 (on container) mapped to 8091 (on host)        Software  Version      Solr  4.10.4    Tomcat  7.x    Oracle JDK  8.x    (DG) Basic Solr Config  4.10.x branch        Account  Password  Service  URL      admin  ild_tc_adm_2018  Tomcat  http://hostip:8091/manager/html    manager  ild_tc_man_2018  Tomcat  http://hostip:8091/manager/html    --  --  Solr  http://hostip:8091/solr/", 
            "title": "3. Solr container"
        }, 
        {
            "location": "/Isle_Containers_Description/#4-apache-container", 
            "text": "Compose Service Name  Container Name  Software  Ports      apache  isle-apache  see below  80        Software  Version      Apache  2.4.7    Oracle JDK  8.x    Djatoka  1.1    Drupal  7.56    PHP  5.6    Islandora  7.x        Account  Password  Service  URL      isle_localdomain_admin  isle_localdomain_adminpw2018  Drupal site admin  http://isle.localdomain", 
            "title": "4. Apache container"
        }, 
        {
            "location": "/1_system_process_overview/summary/", 
            "text": "Project Overview\n\n\nISLE public repository: https://github.com/Islandora-Collaboration-Group/ISLE\n\n\nWhat is Islandora Enterprise (ISLE)?\n\n\nIslandora Enterprise (ISLE) is a new project in development that will address one of the most significant pain-points in Islandora: installation and maintenance.\n\n\nHow does it work?\n\n\nISLE separates an institution\u2019s customizations from core code, and moves that core code into containers that are easily updated, simplifying and largely automating the process of installation and updates/maintenance of Islandora. ISLE also bundles together the best shared modules into a common, production-ready and security-hardened platform.\n\n\nWhy is it needed?\n\n\nIslandora is a powerful digital repository comprised of more than 80 different open-source software libraries. This complex ecosystem makes Islandora difficult and expensive to install, maintain and customize. ISLE lowers the barrier to entry for new schools while allowing existing institutions to reallocate funds towards development or ingestion instead of maintenance.\n\n\nHigh Level Objective\n\n\nTo deliver a secure and production-ready Islandora stack (\u201cISLE\u201d) that reduces the involved support time and effort for installation, maintenance and customization.\n\n\nISLE Functional Definition\n\n\nBy ISLE, it is meant a system that will:  \n\n\n\n\nFunction as both an initial installer and maintenance updater for Islandora stacks with up-to-date components suitable for use as staging, development or production environments, as well as for use on personal computers for development work.\n\n\nConsist of a public, tagged set of Docker containers.\n\n\nInclude use of an orchestration tool such as Docker Composer.\n\n\nAllow for the replacement of older containers with newer versions.\n\n\nBe updated to include new component security patch releases within one calendar month.\n\n\nSupport institution-specific customizations (XSLTs/Islandora Transforms, Solr, schemas, config.xml, MODS configurations/forms, XACML policies) able to persist through container upgrades and replacements.\n\n\nThese will be stored in a git repository and a mechanism will be provided to reintegrate with the installed Docker containers as part of an upgrade.\n\n\n\n\n\n\nSupport for either institutional hosting or Amazon Web Services (AWS) for the Docker host server.\n\n\nSupport data store flexibility on institutional hosting or an AWS cloud environment.\n\n\nEncompass critical security patches, and full stack software updates, plus dependencies for commonly installed features and all available solution packs.\n\n\nInclude an integrated ISLE/Islandora test suite (expected to utilize TravisCI) to be utilized, developed in conjunction with the Islandora Foundation and the current Islandora release managers\n\n\nInclude documentation that covers end usage, a how-to guide to set up an initial ISLE installation, a how-to guide for an established installation to upgrade containers to the latest versions, and a functional description of mechanics, administrative system management and the process for future ISLE development", 
            "title": "1.1 - Executive summary"
        }, 
        {
            "location": "/1_system_process_overview/summary/#project-overview", 
            "text": "ISLE public repository: https://github.com/Islandora-Collaboration-Group/ISLE", 
            "title": "Project Overview"
        }, 
        {
            "location": "/1_system_process_overview/summary/#what-is-islandora-enterprise-isle", 
            "text": "Islandora Enterprise (ISLE) is a new project in development that will address one of the most significant pain-points in Islandora: installation and maintenance.", 
            "title": "What is Islandora Enterprise (ISLE)?"
        }, 
        {
            "location": "/1_system_process_overview/summary/#how-does-it-work", 
            "text": "ISLE separates an institution\u2019s customizations from core code, and moves that core code into containers that are easily updated, simplifying and largely automating the process of installation and updates/maintenance of Islandora. ISLE also bundles together the best shared modules into a common, production-ready and security-hardened platform.", 
            "title": "How does it work?"
        }, 
        {
            "location": "/1_system_process_overview/summary/#why-is-it-needed", 
            "text": "Islandora is a powerful digital repository comprised of more than 80 different open-source software libraries. This complex ecosystem makes Islandora difficult and expensive to install, maintain and customize. ISLE lowers the barrier to entry for new schools while allowing existing institutions to reallocate funds towards development or ingestion instead of maintenance.", 
            "title": "Why is it needed?"
        }, 
        {
            "location": "/1_system_process_overview/summary/#high-level-objective", 
            "text": "To deliver a secure and production-ready Islandora stack (\u201cISLE\u201d) that reduces the involved support time and effort for installation, maintenance and customization.", 
            "title": "High Level Objective"
        }, 
        {
            "location": "/1_system_process_overview/summary/#isle-functional-definition", 
            "text": "By ISLE, it is meant a system that will:     Function as both an initial installer and maintenance updater for Islandora stacks with up-to-date components suitable for use as staging, development or production environments, as well as for use on personal computers for development work.  Consist of a public, tagged set of Docker containers.  Include use of an orchestration tool such as Docker Composer.  Allow for the replacement of older containers with newer versions.  Be updated to include new component security patch releases within one calendar month.  Support institution-specific customizations (XSLTs/Islandora Transforms, Solr, schemas, config.xml, MODS configurations/forms, XACML policies) able to persist through container upgrades and replacements.  These will be stored in a git repository and a mechanism will be provided to reintegrate with the installed Docker containers as part of an upgrade.    Support for either institutional hosting or Amazon Web Services (AWS) for the Docker host server.  Support data store flexibility on institutional hosting or an AWS cloud environment.  Encompass critical security patches, and full stack software updates, plus dependencies for commonly installed features and all available solution packs.  Include an integrated ISLE/Islandora test suite (expected to utilize TravisCI) to be utilized, developed in conjunction with the Islandora Foundation and the current Islandora release managers  Include documentation that covers end usage, a how-to guide to set up an initial ISLE installation, a how-to guide for an established installation to upgrade containers to the latest versions, and a functional description of mechanics, administrative system management and the process for future ISLE development", 
            "title": "ISLE Functional Definition"
        }, 
        {
            "location": "/1_system_process_overview/mvpspecs/", 
            "text": "ISLE MVP Host Specifications Guide\n\n\nCurrently as this software is in the Alpha stage, the following is recommended for Hosts (Local or Remote). These specifications are subject to change as the project matures and further testing is performed.\n\n\nThe \"Host\" is defined as the system that is running Docker which in turn runs the ISLE containers independent of type (\nsee next section\n).\n\n\n\n\nHost Infrastructure (Types)\n\n\n\n\n\n\nLocal\n: A laptop or workstation running ISLE.\n\n\n\n\n\n\nTypically this setup is used for development, testing or otherwise exploring ISLE and Islandora development environments with smaller sample sets.\n\n\n\n\n\n\nRemote\n: A Bare metal (standalone physical server) or a Virtual Machines (VMWare, VSphere, Virtualbox etc) running in an institutional datacenter or cloud platform e.g. Amazon, Google etc.\n\n\n\n\nTypically this setup is used for multiple ISLE and Islandora environments (e.g. production, staging and development) with large sized repositories.\n\n\n\n\n\n\n\n\n\n\nHost Operating Systems\n\n\n\n\nLocal\n: A laptop or workstation running Docker, Docker Compose and ISLE.\n\n\nMacOS Sierra 10.12.x or High Sierra 10.13.x\n\n\nWindows 10 Home or Pro\n\n\n\n\nUbuntu 16.04+ Desktop\n\n\n\n\n\n\nRemote\n: A server or VM running Docker, Docker Compose and ISLE.\n\n\n\n\nCentOS 7\n\n\n\n\nUbuntu 16.04 LTS\n\n\n\n\n\n\nPlease note:\n At this time, Red Hat Enterprise Server 7 has been tested but there is a distinct lack of clarity as to what version of Docker is running and/or is supported. Unless a license for Docker EE is purchased, the project owners do not recommend using it at this time. Currently ISLE has only been built, tested and approved using the free edition of Docker Community Edition (\ndocker-ce\n)\n\n\n\n\n\n\nChallenge 1:\n \nDocker Community Edition not supported on or by Red Hat\n\n\n\n\nhttps://docs.docker.com/install/ (see matrix)\n\n\nhttps://www.docker.com/community-edition\n\n\n\n\n\n\n\n\nChallenge 2:\n \nRed Hat wants endusers to pay for Docker EE license\n\n\n\n\nhttps://www.docker.com/enterprise-edition\n\n\n\n\n\n\n\n\nChallenge 3:\n \nChoices for alternate free Docker versions supported by Red Hat are not clear in features comparison or support roadmap.\n\n\n\n\nhttps://docs.docker.com/release-notes/docker-ce/\n\n\nhttps://access.redhat.com/articles/2317361\n\n\n\n\n\n\n\n\n\n\nHost Memory\n\n\nIf an institution chooses to run more than one ISLE platform (e.g. production, staging and development configurations) all on one host server, increasing RAM is recommended)\n\n\n\n\n\n\nLocal:\n minimum 8 GB RAM or higher.\n\n\n\n\n\n\nRemote:\n minimum 16 GB RAM or higher.\n\n\n\n\n\n\n\n\nHost CPU\n\n\nIf an institution chooses to run more than one ISLE platform (e.g. production, staging and development configurations) all on one host server, increasing CPU cores and speed is recommended)\n\n\n\n\nLocal or Remote:\n minimum of 2 cores running at 2.0 GHz or higher.\n\n\n\n\n\n\nHost Storage\n\n\nWhile \nISLE\n and its configs, images, software etc are typically cloned to \n/opt/ISLE\n and controlled from that location some data can be stored in \n/var/docker\n.\n  * Please ensure that both the host server's \n/opt\n and \n/var\n directories are on disks, mounts or storage systems that can accommodate at least 200 GB in size. In some cases, institutions during the Alpha testing of ISLE increased the size of the host server's \nopt\n directory by:\n  * Increasing the overall size of the host server VM beyond 200GB\n  * Attaching separate storage capacity directly to \n/opt\n and \n/var\n\n  * Additional documentation will be forthcoming on how mounts, volumes and directories can be setup to avoid shortages and for data growth.\n\n\n\n\n\n\nLocal:\n minimum 128 GB or higher for data storage\n\n\n\n\nCan be added as separate mounts / volumes\n\n\n\n\n\n\n\n\nRemote:\n minimum 2 TB or higher for data storage     \n\n\n\n\n\n\nCan be added as separate mounts / volumes\n\n\n\n\n\n\nIf migrating an existing Islandora Production site, review current production storage and replicate this accordingly", 
            "title": "1.2 - MVP specs"
        }, 
        {
            "location": "/1_system_process_overview/mvpspecs/#isle-mvp-host-specifications-guide", 
            "text": "Currently as this software is in the Alpha stage, the following is recommended for Hosts (Local or Remote). These specifications are subject to change as the project matures and further testing is performed.  The \"Host\" is defined as the system that is running Docker which in turn runs the ISLE containers independent of type ( see next section ).", 
            "title": "ISLE MVP Host Specifications Guide"
        }, 
        {
            "location": "/1_system_process_overview/mvpspecs/#host-infrastructure-types", 
            "text": "Local : A laptop or workstation running ISLE.    Typically this setup is used for development, testing or otherwise exploring ISLE and Islandora development environments with smaller sample sets.    Remote : A Bare metal (standalone physical server) or a Virtual Machines (VMWare, VSphere, Virtualbox etc) running in an institutional datacenter or cloud platform e.g. Amazon, Google etc.   Typically this setup is used for multiple ISLE and Islandora environments (e.g. production, staging and development) with large sized repositories.", 
            "title": "Host Infrastructure (Types)"
        }, 
        {
            "location": "/1_system_process_overview/mvpspecs/#host-operating-systems", 
            "text": "Local : A laptop or workstation running Docker, Docker Compose and ISLE.  MacOS Sierra 10.12.x or High Sierra 10.13.x  Windows 10 Home or Pro   Ubuntu 16.04+ Desktop    Remote : A server or VM running Docker, Docker Compose and ISLE.   CentOS 7   Ubuntu 16.04 LTS    Please note:  At this time, Red Hat Enterprise Server 7 has been tested but there is a distinct lack of clarity as to what version of Docker is running and/or is supported. Unless a license for Docker EE is purchased, the project owners do not recommend using it at this time. Currently ISLE has only been built, tested and approved using the free edition of Docker Community Edition ( docker-ce )    Challenge 1:   Docker Community Edition not supported on or by Red Hat   https://docs.docker.com/install/ (see matrix)  https://www.docker.com/community-edition     Challenge 2:   Red Hat wants endusers to pay for Docker EE license   https://www.docker.com/enterprise-edition     Challenge 3:   Choices for alternate free Docker versions supported by Red Hat are not clear in features comparison or support roadmap.   https://docs.docker.com/release-notes/docker-ce/  https://access.redhat.com/articles/2317361", 
            "title": "Host Operating Systems"
        }, 
        {
            "location": "/1_system_process_overview/mvpspecs/#host-memory", 
            "text": "If an institution chooses to run more than one ISLE platform (e.g. production, staging and development configurations) all on one host server, increasing RAM is recommended)    Local:  minimum 8 GB RAM or higher.    Remote:  minimum 16 GB RAM or higher.", 
            "title": "Host Memory"
        }, 
        {
            "location": "/1_system_process_overview/mvpspecs/#host-cpu", 
            "text": "If an institution chooses to run more than one ISLE platform (e.g. production, staging and development configurations) all on one host server, increasing CPU cores and speed is recommended)   Local or Remote:  minimum of 2 cores running at 2.0 GHz or higher.", 
            "title": "Host CPU"
        }, 
        {
            "location": "/1_system_process_overview/mvpspecs/#host-storage", 
            "text": "While  ISLE  and its configs, images, software etc are typically cloned to  /opt/ISLE  and controlled from that location some data can be stored in  /var/docker .\n  * Please ensure that both the host server's  /opt  and  /var  directories are on disks, mounts or storage systems that can accommodate at least 200 GB in size. In some cases, institutions during the Alpha testing of ISLE increased the size of the host server's  opt  directory by:\n  * Increasing the overall size of the host server VM beyond 200GB\n  * Attaching separate storage capacity directly to  /opt  and  /var \n  * Additional documentation will be forthcoming on how mounts, volumes and directories can be setup to avoid shortages and for data growth.    Local:  minimum 128 GB or higher for data storage   Can be added as separate mounts / volumes     Remote:  minimum 2 TB or higher for data storage         Can be added as separate mounts / volumes    If migrating an existing Islandora Production site, review current production storage and replicate this accordingly", 
            "title": "Host Storage"
        }, 
        {
            "location": "/1_system_process_overview/1_3_system_overview/systemoverview/", 
            "text": "Introduction\n\n\nIslandora\n is an open-source software \nframework\n designed to help institutions and organizations and their audiences collaboratively manage, and discover digital assets using a best-practices framework.\n\n\nISLE is an orchestrated group of Docker containers to be run on a server, laptop or cloud instance with a minimal suite of tools enabling an efficient deploy and release of an updated production-ready Islandora environment.\n\n\nISLE functions as both an initial installer and maintenance updater with the ability to build new production, staging and sandbox environments as distributable, lightweight and fast \u201ccontainers\u201d in a \nDocker Engine\n environment.\n\n\nThis process would allows institutions to choose between hosting:  \n\n\n\n\nlocally on a laptop for development work\n\n\nlocally in their Institutional data center\n\n\nin a cloud environment such as (\nAmazon Web Services\n).\n\n\n\n\nISLE\u2019s production-ready platform is to be updated monthly with:\n\n\n\n\ncritical security patches\n\n\nfull stack software updates\n\n\na suite of commonly installed features and solution packs.\n\n\n\n\nISLE is designed to be an evolving but trusted environment to help create a managed process for migrating to the next major release of Islandora (termed CLAW).", 
            "title": "1.3 - System overview"
        }, 
        {
            "location": "/1_system_process_overview/1_3_system_overview/systemoverview/#introduction", 
            "text": "Islandora  is an open-source software  framework  designed to help institutions and organizations and their audiences collaboratively manage, and discover digital assets using a best-practices framework.  ISLE is an orchestrated group of Docker containers to be run on a server, laptop or cloud instance with a minimal suite of tools enabling an efficient deploy and release of an updated production-ready Islandora environment.  ISLE functions as both an initial installer and maintenance updater with the ability to build new production, staging and sandbox environments as distributable, lightweight and fast \u201ccontainers\u201d in a  Docker Engine  environment.  This process would allows institutions to choose between hosting:     locally on a laptop for development work  locally in their Institutional data center  in a cloud environment such as ( Amazon Web Services ).   ISLE\u2019s production-ready platform is to be updated monthly with:   critical security patches  full stack software updates  a suite of commonly installed features and solution packs.   ISLE is designed to be an evolving but trusted environment to help create a managed process for migrating to the next major release of Islandora (termed CLAW).", 
            "title": "Introduction"
        }, 
        {
            "location": "/1_system_process_overview/1_3_system_overview/supported-specification-matrix-table/", 
            "text": "Software\n\n\nLegacy 3.7.1\n\n\nLegacy 3.8\n\n\nNewest 3.8.1\n\n\n\n\n\n\n\n\n\n\nDocker Tag\n\n\nf371\n\n\nf38\n\n\nf381\n\n\n\n\n\n\nApache\n\n\n2.4 for all versions\n\n\n\n\n\n\n\n\n\n\nDjatoka\n\n\n1.1 used for all versions\n\n\n\n\n\n\n\n\n\n\nDrupal\n\n\n7.4x\n\n\n7.4x\n\n\n7.5x\n\n\n\n\n\n\nDrupal filter\n\n\n3.7.1\n\n\n3.8\n\n\n3.8.1\n\n\n\n\n\n\nFedora\n\n\n3.7.1\n\n\n3.8\n\n\n3.8.1\n\n\n\n\n\n\nGsearch\n\n\n2.7.1\n\n\n2.8\n\n\nDG Patched (2.8.x)\n\n\n\n\n\n\nGSearch Extensions\n\n\n0.1.1\n\n\n0.1.2\n\n\n0.1.3\n\n\n\n\n\n\nIslandora\n\n\n7.x\n\n\n7.x\n\n\nHEAD\n\n\n\n\n\n\nIslandora Transforms (XSLTs)\n\n\nall versions use\n\n\nlatest XSLTs from DG \nrepo\n\n\ntested for all versions\n\n\n\n\n\n\nMySQL\n\n\n5.5\n\n\n5.5\n\n\n5.6\n\n\n\n\n\n\nOpenJDK\n\n\nJDK 7\n\n\nJDK 7\n\n\nJDK 8.x\n\n\n\n\n\n\nOracle Java\n\n\nJDK 7\n\n\nJDK 7\n\n\nJDK 8.x\n\n\n\n\n\n\nPHP\n\n\n5.5\n\n\n5.5\n\n\n5.6\n\n\n\n\n\n\nSolr\n\n\n4.2\n\n\n4.6.1\n\n\n4.10.4\n\n\n\n\n\n\nTomcat\n\n\n7.x\n\n\n7.x\n\n\n8.x\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nContainer\n\n\nSoftware / Service\n\n\nLegacy 3.7.1\n\n\nLegacy 3.8\n\n\nNewest 3.8.1\n\n\n\n\n\n\n\n\n\n\nisle-apache\n\n\nDocker Tag\n\n\nf371\n\n\nf38\n\n\nf381\n\n\n\n\n\n\n\n\nApache\n\n\n2.4 for all versions\n\n\n\n\n\n\n\n\n\n\n\n\nDjatoka\n\n\n1.1 used for all versions\n\n\n\n\n\n\n\n\n\n\n\n\nDrupal\n\n\n7.4x\n\n\n7.4x\n\n\n7.56\n\n\n\n\n\n\n\n\nIslandora\n\n\n7.x\n\n\n7.x\n\n\nHEAD\n\n\n\n\n\n\n\n\nOpenJDK\n\n\nJDK 7.x\n\n\nJDK 7.x\n\n\nJDK 8.x\n\n\n\n\n\n\n\n\nOracle Java\n\n\nJDK 7.x\n\n\nJDK 7.x\n\n\nJDK 8.x\n\n\n\n\n\n\n\n\nPHP\n\n\n5.5.9\n\n\n5.5.9\n\n\n5.6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nContainer\n\n\nSoftware / Service\n\n\nLegacy 3.7.1\n\n\nLegacy 3.8\n\n\nNewest 3.8.1\n\n\n\n\n\n\n\n\n\n\nisle-fedora\n\n\nDocker Tag\n\n\nf371\n\n\nf38\n\n\nf381\n\n\n\n\n\n\n\n\nApache\n\n\n2.4 for all versions\n\n\n\n\n\n\n\n\n\n\n\n\nDjatoka\n\n\n1.1 used for all versions\n\n\n\n\n\n\n\n\n\n\n\n\nDrupal filter\n\n\n3.7.1\n\n\n3.8\n\n\n3.8.1\n\n\n\n\n\n\n\n\nFedora\n\n\n3.7.1\n\n\n3.8\n\n\n3.8.1\n\n\n\n\n\n\n\n\nGsearch\n\n\n2.7.1\n\n\n2.8\n\n\nDG Patched (2.8.x)\n\n\n\n\n\n\n\n\nGSearch Extensions\n\n\n0.1.1\n\n\n0.1.2\n\n\n0.1.3\n\n\n\n\n\n\n\n\nIslandora Transforms\n\n\nall versions use\n\n\nlatest XSLTs from DG \nrepo\n\n\ntested for all versions\n\n\n\n\n\n\n\n\nOpenJDK\n\n\nJDK 7.x\n\n\nJDK 7.x\n\n\nJDK 8.x\n\n\n\n\n\n\n\n\nOracle Java\n\n\nJDK 7.x\n\n\nJDK 7.x\n\n\nJDK 8.x\n\n\n\n\n\n\n\n\nTomcat\n\n\n7.x\n\n\n7.x\n\n\n8.x\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nContainer\n\n\nSoftware / Service\n\n\nLegacy 3.7.1\n\n\nLegacy 3.8\n\n\nNewest 3.8.1\n\n\n\n\n\n\n\n\n\n\nisle-mysql\n\n\nDocker Tag\n\n\nf371\n\n\nf38\n\n\nf381\n\n\n\n\n\n\n\n\nMySQL\n\n\n5.5\n\n\n5.5\n\n\n5.6\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nContainer\n\n\nSoftware / Service\n\n\nLegacy 3.7.1\n\n\nLegacy 3.8\n\n\nNewest 3.8.1\n\n\n\n\n\n\n\n\n\n\nisle-solr\n\n\nDocker Tag\n\n\nf371\n\n\nf38\n\n\nf381\n\n\n\n\n\n\n\n\nOpenJDK\n\n\nJDK 7.x\n\n\nJDK 7.x\n\n\nJDK 8.x\n\n\n\n\n\n\n\n\nSolr\n\n\n4.2\n\n\n4.6.1\n\n\n4.10.4\n\n\n\n\n\n\n\n\nTomcat\n\n\n7.x\n\n\n7.x\n\n\n8.x", 
            "title": "1.3 - Supported Specification Matrix table"
        }, 
        {
            "location": "/1_system_process_overview/1_3_system_overview/supported-islandora-modules/", 
            "text": "", 
            "title": "1.3 - Supported Islandora Modules"
        }, 
        {
            "location": "/1_system_process_overview/1_3_system_overview/supported-drupal-modules/", 
            "text": "", 
            "title": "1.3 - Supported Drupal Modules"
        }, 
        {
            "location": "/1_system_process_overview/1_3_system_overview/supported-software-repositories/", 
            "text": "", 
            "title": "1.3 - Supported Software Repositories"
        }, 
        {
            "location": "/1_system_process_overview/1_3_system_overview/supported-ssl/", 
            "text": "", 
            "title": "1.3 - Supported SSL"
        }, 
        {
            "location": "/1_system_process_overview/1_3_system_overview/release-process/", 
            "text": "To release ISLE code and updates, a public open \nGithub\n repository linked to \nDocker Hub\n, a cloud-based registry service will be used.\n\n\nDocker Hub will provide the centralized resource for ISLE container image discovery and distribution for end-users, automated testing and deploy services to build, test and download images.\n\n\nUsers of ISLE will download \u201ctagged\u201d versions of the software (images) to see what version fits their current needs; either a \u201clegacy\u201d setup to provide a clear \u201cupgration\u201d path or a fully current, tested and stable version for production use.\n\n\n\n\nExample of a \u201ctagged\u201d software version on Docker Hub:\n\n\n\n\n\n\nBy using tagged releases (images) for container software e.g. SOLR versions 4.2 - 4.10, end-users will be able to spin up containers quickly and test a wider variety of configurations with the ultimate goal of being on the most recent and stable version. End-users will also be able to make quick edits to configuration templates from the downloaded Github repositories to establish the basic three environment types;\n\n\n\n\nremote admin (sandbox)\n\n\nstaging\n\n\nproduction.\n\n\n\n\nFor specific tags by version please reference, the Supported Specification Matrix \ntable\n\n\nAdditional platform customization and configuration will be handled by the creation of master Dockerfiles template whose values end-users can change for the appropriate institution specific values e.g. edits to schema.xml, config.xml, XSLTs, xacml permissions etc", 
            "title": "1.3 - Release Process"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_ansible/", 
            "text": "Host Local Setup Guide - Ansible\n\n\nEndusers now have the choice of using Ansible to deploy their Docker Host server instead of performing manual commands. The Ansible script and configuration files can be found in the root folder of the ISLE git repo in a directory named \nansible\n.\n\n\nAnsible is an free open source automation platform / tool which runs on Linux, Mac or BSD, doesn\u2019t use local or remote agents and is relatively easy to setup. Ansible can help with server configuration management, application deployment, task automation and IT orchestration (\nrunning tasks in sequence on several different servers or devices\n).\n\n\nIf you are not familiar with the Ansible, it is recommended to start with their documentation.\n\n\n\n\nAnsible website\n\n\nWhat is Ansible?\n\n\nAnsible Documentation\n\n\n\n\nPlease note:\n For MacOS users using a local ISLE Host VM on their laptop or workstation, please scroll down to \nLine 395\n the section called \n### Host Local Setup - Ansible MacOS ONLY\n\n\nPrerequisites / Assumptions\n\n\n\n\n\n\nFamiliarity or knowledge of Ansible\n\n\n\n\n\n\nAnsible control workstation, laptop or server that runs MacOs, BSD or Linux (Windows doesn't work yet for this) with the following:\n\n\n\n\nAnsible 2.2+\n (choice of \ninstall methods\n)\n\n\nopenssh\n (2.2.x+)\n\n\ngit\n (2.15.1+)\n\n\npython\n (2.7+)\n\n\n\n\nThe \nISLE project repository\n cloned to an appropriate location.\n\n\n\n\n\n\nA previously created ISLE Host Server running either of these operating systems:\n\n\n\n\nUbuntu 16.04 LTS\n\n\n\n\nCentOS 7   \n\n\n\n\n\n\nAn account with ssh access to the ISLE Host Server\n\n\n\n\n\n\nAn account with passwordless sudo access on the ISLE Host Server\n\n\n\n\n\n\nThe IP of the ISLE Host server\n\n\n\n\n\n\n\n\nAnsible Deploy Script Explanation\n\n\nWithin the \ndocker_install.yml\n Ansible playbook, there are the following roles which perform different actions or cause different events on the ISLE Host server.\n\n\n\n\n\n\n\n\nAnsible Role\n\n\nAction / Event\n\n\n\n\n\n\n\n\n\n\ndependencies\n\n\nInstalls software dependencies \n tools as described above\n\n\n\n\n\n\nusers_groups\n\n\nAdds users, groups and updates permissions as described above\n\n\n\n\n\n\ndocker\n\n\nInstalls Docker\n\n\n\n\n\n\ndocker_compose\n\n\nInstalls Docker Compose\n\n\n\n\n\n\ngit_clone\n\n\nClones the current ISLE git repository to \n/opt/ISLE\n\n\n\n\n\n\ndocker_images\n\n\nPulls down the latest ISLE Docker Images from Dockerhub.com\n\n\n\n\n\n\n\n\nInstalls software dependencies \n tools including:\n\n\nThe Ansible script will deploy the following to the ISLE Host server:\n\n\n\n\n\n\n\n\nUbuntu / Debian\n\n\nCentOS\n\n\n\n\n\n\n\n\n\n\nsoftware-properties-common\n\n\nlibselinux-python\n\n\n\n\n\n\npython-software-properties\n\n\nlibsemanage-python\n\n\n\n\n\n\n--\n\n\nyum-utils\n\n\n\n\n\n\nntp\n\n\nntp\n\n\n\n\n\n\nopenssh-client\n\n\nopenssh-clients\n\n\n\n\n\n\nrsync\n\n\nrsync\n\n\n\n\n\n\ncurl\n\n\ncurl\n\n\n\n\n\n\nwget\n\n\nwget\n\n\n\n\n\n\ngit\n\n\ngit\n\n\n\n\n\n\nzip\n\n\nzip\n\n\n\n\n\n\nunzip\n\n\nunzip\n\n\n\n\n\n\nvim\n\n\nvim\n\n\n\n\n\n\nnano\n\n\nnano\n\n\n\n\n\n\nemacs24-nox\n\n\nemacs\n\n\n\n\n\n\nhtop\n\n\nhtop\n\n\n\n\n\n\napt-transport-https\n\n\n--\n\n\n\n\n\n\nca-certificates\n\n\n--\n\n\n\n\n\n\n\n\nMakes ISLE Host service changes\n\n\nPlease Note:\n \nAny of these services can be re-enabled post installation see appropriate documentation for opening ports on firewalls etc.\n\n\n\n\n\n\n\n\nUbuntu / Debian\n\n\nCentOS\n\n\n\n\n\n\n\n\n\n\nenables ntp service\n\n\nenables ntp service\n\n\n\n\n\n\ndisables ufw\n\n\ndisables iptables\n\n\n\n\n\n\n--\n\n\nsets selinux to permissive\n\n\n\n\n\n\n\n\nAdds users, groups and updates permissions\n\n\n\n\nCreates the \nislandora\n user\n\n\nAlong with an appropriate password\n\n\ngenerates a ssh key\n\n\nbestows sudo password-less access\n\n\n\n\nGives the \nislandora\n user the ability to run Docker \n Docker Compose by adding the account to the Docker group.  \n\n\n\n\n\n\nDisables \nroot\n user access via ssh\n\n\n\n\nDisables use of passwords with ssh.\n\n\nkey based access only to the ISLE Host server\n\n\n\n\nInstalls additional software\n\n\n\n\n\n\nDocker\n\n\n\n\n\n\nDocker Compose\n\n\n\n\n\n\nGit clones the ISLE repo to \n/opt/ISLE\n\n\n\n\n\n\nPulls down the most recent ISLE images\n\n\n\n\n\n\nAnsible script directory structure\n\n\nansible\n\u251c\u2500\u2500 docker_install.yml\n\u251c\u2500\u2500 host_vars\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 host_local_macos_isle_localdomain.yml\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 isle-prod-project.institution.yml\n\u251c\u2500\u2500 inventory\n\u2514\u2500\u2500 roles\n    \u251c\u2500\u2500 dependencies\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 ubuntu.yml\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 main.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 centos.yml\n    \u251c\u2500\u2500 docker\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 install.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 main.yml\n    \u251c\u2500\u2500 docker_compose\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 install.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 main.yml\n    \u251c\u2500\u2500 docker_images\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 images_pull.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 main.yml\n    \u251c\u2500\u2500 git_clone\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 git_clone.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 main.yml\n    \u2514\u2500\u2500 users_groups\n        \u251c\u2500\u2500 files\n        \u2502\u00a0\u00a0 \u2514\u2500\u2500 islandora\n        \u2514\u2500\u2500 tasks\n            \u251c\u2500\u2500 groups.yml\n            \u251c\u2500\u2500 main.yml\n            \u251c\u2500\u2500 secure.yml\n            \u251c\u2500\u2500 ssh.yml\n            \u2514\u2500\u2500 users.yml\n\n\n\n\nConfigure Ansible Script to deploy to ISLE Host\n\n\nTo configure the Ansible script to deploy to one's institutional ISLE Host Server, please review and edit the following files within the \nansible\n directory.\n\n\n\n\nansible/docker_install.yml\n\n\nansible/inventory\n\n\nansible/host_vars/isle-prod-project.institution.yml\n\n\n\n\nBasically wherever \nisle-prod-project.institution\n appears as a value in these three files, please replace with the appropriate ISLE Host server fully qualified domain name (\nfqdn\n) e.g. \nyourislesite.institution.com\n\n\nOne can open up and edit all files in a text editor e.g. Atom, Textedit, Textwrangler etc.\n\n\nansible/docker_install.yml\n\n\nThis is the Ansible playbook necessary to deploy software to the ISLE host server.\n\n\n\n\nAt the top of the file remove \nisle-prod-project.institution\n and replace with the appropriate \nfqdn\n.  \n\n\n\n\nansible/inventory.yml\n\n\nThis is the possible list of server(s) to deploy to using Ansible and its associated playbook(s).\n\n\nPlease Note:\n These instructions below are repeated within the file itself.\n\n\n\n\n\n\nLine 7: remove \nisle-prod-project.institution\n from in between the brackets and replace with the appropriate \nfqdn\n\n\n\n\n\n\nLine 8: Add the appropriate ISLE Host server user account that has \nsudo\n passwordless permissions to the end of \nansible_ssh_user=\n\n\nExample\n: \nansible_ssh_user=janesmith\n\n\n\n\n\n\nLine 8: Add the appropriate path to this ISLE Host Server user accounts public ssh key to the end of \nansible_ssh_private_key_file=\n\n\n\n\n\n\nExample\n of inventory using settings for local Ansible deploy laptop:\n\n\n\n\n\n\nansible_ssh_private_key_file=/home/janesmith/.ssh/id_rsa.pub\n\n\n\n\nPlease Note:\n This key is typically found on the local control (Ansible deploy laptop / workstation) system and should have been previously copied to the appropriate ISLE Host server user account's \n/home/islehostserver_user/.ssh/authorized_keys\n file.\n\n\n\n\nFinal Example\n end result for inventory file with all settings above\n\n\n\n\n[yourislesite.institution.com]   \nyourislesite.institution.com ansible_connection=ssh ansible_ssh_user=janesmith ansible_ssh_private_key_file=/home/janesmith/.ssh/id_rsa.pub\n\n\n\n\nansible/isle-prod-project.institution.yml\n\n\n\n\n\n\nCopy this file and rename the copy to with the appropriate \nfqdn\n\n\n\n\n\n\nExample\n of how \nhost_vars\n directory should now contain two files:  \n\n\n\n\n\n\nansible\n\u251c\u2500\u2500 docker_install.yml\n\u251c\u2500\u2500 host_vars\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 isle-prod-project.institution.yml\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 yourislesite.institution.com.yml\n\u251c\u2500\u2500 inventory\n\u2514\u2500\u2500 roles\n\n\n\n\n\n\n\n\nEdit the following lines within the newly created file i.e. \nyourislesite.institution.com.yml\n and remove the comments (#) as asked\n\n\n\n\n\n\nPlease Note:\n \nThe \nfqdn\n in the \ninventory\n file should match this filename as well.\n\n\n\n\n\n\nExamples ONLY\n (\nDo not enter these literal values\n)  \n\n\n\n\n\n\nLine 9: \nansible_ssh_host: 192.168.1.16\n\n\n\n\nThis is the IP address of the ISLE Host server\n\n\n\n\n\n\n\n\nLine 10: \nansible_ssh_user: janesmith\n  \n\n\n\n\nThis is the appropriate ISLE Host server user account that has \nsudo\n passwordless permissions.\n\n\n\n\n\n\n\n\nLine 15: \npub_locale: /home/janesmith/.ssh/id_rsa.pub\n\n\n\n\nThis is the key found on the local control (Ansible deploy laptop / workstation) system which has been previously copied to the appropriate ISLE Host server user account's \n/home/islehostserver_user/.ssh/authorized_keys\n file.\n\n\n\n\n\n\n\n\n\n\nAnsible commands to test connection\n\n\n\n\nTest if the Ansible control laptop / workstation can connect to the ISLE Host server by running these commands. On the local Ansible control laptop / workstation, open a terminal window and enter the following:\n\n\n\n\ncd /path/to/ISLE/repo\n\nansible -i inventory isle-host-server -m ping\n\n\n\n\n\n\nExample\n output of above command (\nIGNORE THE WARNING\n)\n\n\n\n\n[WARNING]: Found both group and host with same name: isle-host-server   \n\nisle-host-server | SUCCESS =\n {\n     \nchanged\n: false,\n     \nping\n: \npong\n\n   }\n\n\n\n\nPlease Note:\n \nIf SUCCESS doesn't appear as a value or if the wording of the prompt is in RED with \"host doesn't exist ...\", review all steps above and check the settings. Do not advance until the \nExample\n output above matches.\n  \n\n\nAnsible commands for deploy\n\n\n\n\n\n\nTo deploy to the ISLE Host Server, run this command.\n\n\nansible-playbook -i inventory docker_install.yml\n\n\n\n\n\n\nAnsible will start displaying output within the terminal. If any turn red and the script terminates, please review the above settings and connectivity to the server. Attempt to rerun the script.\n\n\nQC Review checklist\n\n\nTo ensure a successful deploy to the ISLE Server, please review the following to ensure that the deploy to the Islandora Host server was successful.\n\n\nOpen a terminal window on the Ansible control laptop /workstation and \nssh\n into the Islandora Host server using the appropriate enduser account setup prior to the deploy.\n\n\nExample\n:\n\n\nssh enduser@isle-prod-project.institution\n\n\n\n\nDocker\n\n\n\n\n\n\nTo check where Docker has been installed to, enter:  \n\n\nwhich docker\n    \n\n\nExample\n output:      \n\n\n/usr/bin/docker\n\n\n\n\n\n\nTo check which version of Docker has been installed, enter:\n\n\ndocker --version\n\n\nExample\n output:\n\n\nDocker version 17.12.0-ce, build c97c6d6\n\n\n\n\n\n\nTo check if Docker is running, enter:\n\n\nservice docker status\n   \n\n\nExample\n output:\n\n\n\n\n\n\nRedirecting to /bin/systemctl status docker.service\n\u25cf docker.service - Docker Application Container Engine\n  Loaded: loaded (/usr/lib/systemd/system/docker.service; enabled; vendor preset: disabled)\n  Active: active (running) since Thu 2018-01-18 14:36:55 EST; 1 weeks 4 days ago\n    Docs: https://docs.docker.com\nMain PID: 23066 (dockerd)\n  Memory: 55.3M\n....\n\n\n\n\n\n\n\n\nTo check if the ISLE images have been downloaded on the ISLE Host server, enter:\n\n\ndocker image ls\n\n\nExample\n output:  \n\n\n\n\n\n\nREPOSITORY                         TAG                 IMAGE ID            CREATED             SIZE\nislandoracollabgroup/isle-fedora   latest              6e2749ca2c2f        2 weeks ago         2.43GB\nislandoracollabgroup/isle-apache   latest              82fe4ae16932        2 weeks ago         2.18GB\nislandoracollabgroup/isle-solr     latest              7fba26c10433        2 weeks ago         784MB\nislandoracollabgroup/isle-mysql    latest              f34162f1e0f8        2 weeks ago         299MB\n\n\n\n\nDocker Compose\n\n\n\n\n\n\nTo check where Docker-compose has been installed to, enter:  \n\n\nwhich docker-compose\n\n\nExample\n output:\n\n\n/usr/local/bin/docker-compose\n\n\n\n\n\n\nTo check which version of Docker-compose has been installed, enter:\n\n\ndocker-compose -version\n\n\nExample\n output:\n\n\ndocker-compose version 1.17.1, build 6d101fb\n\n\n\n\n\n\nIslandora user\n\n\n\n\n\n\nTo check if the \nislandora\n user has been created, enter:\n\n\ncat /etc/passwd\n  \n\n\nExample\n output:\n\n\nislandora:x:1002:1002::/home/islandora:/bin/bash\n\n\n\n\n\n\nISLE Project directory\n\n\n\n\n\n\nTo check if the ISLE project git repo has been cloned to \n/opt/ISLE\n, enter:\n\n\nls -lh /opt/ISLE\n\n\nExample\n output:\n\n\n\n\n\n\ntotal 24K\ndrwxr-xr-x. 3 islandora islandora  110 Jan 17 09:17 apache\ndrwxr-xr-x. 5 islandora islandora   84 Jan 23 13:44 config\n-rwxr-xr-x. 1 islandora islandora 2.0K Jan 18 16:58 docker-compose.yml\ndrwxr-xr-x. 7 islandora islandora  143 Jan 17 09:17 docs\ndrwxr-xr-x. 7 islandora islandora  102 Jan 17 09:17 fedora\n-rwxr-xr-x. 1 islandora islandora  12K Jan 17 09:17 mkdocs.yml\ndrwxr-xr-x. 3 islandora islandora   54 Jan 17 09:17 mysql\n-rwxr-xr-x. 1 islandora islandora 4.1K Jan 17 09:17 README.md\ndrwxr-xr-x. 4 islandora islandora   50 Jan 17 09:17 solr\n\n\n\n\nOnce this script has finished one can:\n\n\n\n\n\n\nAdd any appropriate public ssh keys to \n/home/islandora/.ssh/authorized_keys\n prior to attempting to ssh to the Islandora Host server as the \nislandora\n user.\n\n\n\n\n\n\nAdd the \n/home/islandora/.ssh/id_rsa.pub\n key to any git repository contained within the Migration Guide. (Additional instructions appear in that guide if this process is unfamiliar.)\n\n\n\n\n\n\nProceed to bottom of this page for next steps.\n\n\n\n\nHost Local Setup - Ansible MacOS ONLY\n\n\n\n\n\n\nTo install \nAnsible\n on the enduser's MacOS laptop / workstation.\n\n\n\n\n\n\nInstall Ansible via Python pip\n\n\n\n\nFollow here http://docs.ansible.com/ansible/latest/intro_installation.html#latest-releases-via-pip\n\n\n\n\n\n\n\n\nOr install Ansible via Homebrew (better)\n\n\n\n\n/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n\n\nbrew install ansible\n\n\n\n\n\n\n\n\nThere is a ready made Ansible script for the MacOS hosted isle.localdomain called \nansible/host_vars/host_local_macos_isle_localdomain.yml\n\n\n\n\n\n\nUse \nvagrant\n for the \nansible_ssh_user=\n value in the \nansible/inventory\n file\n\n\n\n\n\n\nUse \n~/Users/enduser/.vagrant.d/insecure_private_key\n for the \nansible_ssh_private_key_file\n value in the \nansible/inventory\n file\n\n\n\n\n\n\nExample\n\n\n[host_local_macos_isle_localdomain]\nhost_local_macos_isle_localdomain ansible_connection=ssh ansible_ssh_user=vagrant ansible_ssh_private_key_file=/Users/enduser/.vagrant.d/insecure_private_key\n\n\n\n\n\n\n\n\nLine 13\n in the \nansible/host_vars/host_local_macos_isle_localdomain.yml\n file will need to be edited with the correct path to the enduser's id_rsa.pub  file. Change the \nenduser\n value to the real username. (\nassumes the\n \nid_rsa.pub\n \nfile exists!\n)\n\n\n\n\n\n\nLine 3\n in the \nansible/docker_install.yml\n file will need to be edited, change the value of \nisle-prod-project.institution\n to \nhost_local_macos_isle_localdomain\n\n\n\n\n\n\nOnce these files have been edited, open a terminal and enter:\n\n\n\n\n\n\ncd path_to/ISLE/ansible/\n\n\n\n\n\n\nTest the connection to the ISLE Host Vagrant Ubuntu VM\n\n\n\n\n\n\nansible -i inventory host_local_macos_isle_localdomain -m ping\n\n\n\n\n\n\nExample\n output of above command (\nIGNORE THE WARNING\n)\n\n\n\n\n\n\n\n\n\n\n[WARNING]: Found both group and host with same name: host_local_macos_isle_localdomain   \nhost_local_macos_isle_localdomain | SUCCESS =\n {\n   \nchanged\n: false,\n   \nping\n: \npong\n\n }\n\n\n\n\nPlease Note:\n \nIf SUCCESS doesn't appear as a value or if the wording of the prompt is in RED with \"host doesn't exist ...\", review all steps above and check the settings. Do not advance until the \nExample\n output above matches.\n  \n\n\n\n\nTo deploy to the ISLE Host Server, run this command.\n\n\n\n\nansible-playbook -i inventory docker_install.yml\n\n\nAnsible will start displaying output within the terminal. If any turn red and the script terminates, please review the above settings and connectivity to the server. Attempt to rerun the script.\n\n\n\n\nPost Server Deploy or next steps\n\n\n\n\n\n\nContinue next steps with the \nTest Site Guide - isle.localdomain\n\n\n\n\n\n\nContinue next steps with \nMigration Guide", 
            "title": "1.4. -Testing - Host Local Setup Guide - Ansible"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_ansible/#host-local-setup-guide-ansible", 
            "text": "Endusers now have the choice of using Ansible to deploy their Docker Host server instead of performing manual commands. The Ansible script and configuration files can be found in the root folder of the ISLE git repo in a directory named  ansible .  Ansible is an free open source automation platform / tool which runs on Linux, Mac or BSD, doesn\u2019t use local or remote agents and is relatively easy to setup. Ansible can help with server configuration management, application deployment, task automation and IT orchestration ( running tasks in sequence on several different servers or devices ).  If you are not familiar with the Ansible, it is recommended to start with their documentation.   Ansible website  What is Ansible?  Ansible Documentation   Please note:  For MacOS users using a local ISLE Host VM on their laptop or workstation, please scroll down to  Line 395  the section called  ### Host Local Setup - Ansible MacOS ONLY", 
            "title": "Host Local Setup Guide - Ansible"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_ansible/#prerequisites-assumptions", 
            "text": "Familiarity or knowledge of Ansible    Ansible control workstation, laptop or server that runs MacOs, BSD or Linux (Windows doesn't work yet for this) with the following:   Ansible 2.2+  (choice of  install methods )  openssh  (2.2.x+)  git  (2.15.1+)  python  (2.7+)   The  ISLE project repository  cloned to an appropriate location.    A previously created ISLE Host Server running either of these operating systems:   Ubuntu 16.04 LTS   CentOS 7       An account with ssh access to the ISLE Host Server    An account with passwordless sudo access on the ISLE Host Server    The IP of the ISLE Host server", 
            "title": "Prerequisites / Assumptions"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_ansible/#ansible-deploy-script-explanation", 
            "text": "Within the  docker_install.yml  Ansible playbook, there are the following roles which perform different actions or cause different events on the ISLE Host server.     Ansible Role  Action / Event      dependencies  Installs software dependencies   tools as described above    users_groups  Adds users, groups and updates permissions as described above    docker  Installs Docker    docker_compose  Installs Docker Compose    git_clone  Clones the current ISLE git repository to  /opt/ISLE    docker_images  Pulls down the latest ISLE Docker Images from Dockerhub.com", 
            "title": "Ansible Deploy Script Explanation"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_ansible/#installs-software-dependencies-tools-including", 
            "text": "The Ansible script will deploy the following to the ISLE Host server:     Ubuntu / Debian  CentOS      software-properties-common  libselinux-python    python-software-properties  libsemanage-python    --  yum-utils    ntp  ntp    openssh-client  openssh-clients    rsync  rsync    curl  curl    wget  wget    git  git    zip  zip    unzip  unzip    vim  vim    nano  nano    emacs24-nox  emacs    htop  htop    apt-transport-https  --    ca-certificates  --", 
            "title": "Installs software dependencies &amp; tools including:"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_ansible/#makes-isle-host-service-changes", 
            "text": "Please Note:   Any of these services can be re-enabled post installation see appropriate documentation for opening ports on firewalls etc.     Ubuntu / Debian  CentOS      enables ntp service  enables ntp service    disables ufw  disables iptables    --  sets selinux to permissive", 
            "title": "Makes ISLE Host service changes"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_ansible/#adds-users-groups-and-updates-permissions", 
            "text": "Creates the  islandora  user  Along with an appropriate password  generates a ssh key  bestows sudo password-less access   Gives the  islandora  user the ability to run Docker   Docker Compose by adding the account to the Docker group.      Disables  root  user access via ssh   Disables use of passwords with ssh.  key based access only to the ISLE Host server", 
            "title": "Adds users, groups and updates permissions"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_ansible/#installs-additional-software", 
            "text": "Docker    Docker Compose    Git clones the ISLE repo to  /opt/ISLE    Pulls down the most recent ISLE images", 
            "title": "Installs additional software"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_ansible/#ansible-script-directory-structure", 
            "text": "ansible\n\u251c\u2500\u2500 docker_install.yml\n\u251c\u2500\u2500 host_vars\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 host_local_macos_isle_localdomain.yml\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 isle-prod-project.institution.yml\n\u251c\u2500\u2500 inventory\n\u2514\u2500\u2500 roles\n    \u251c\u2500\u2500 dependencies\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 ubuntu.yml\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 main.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 centos.yml\n    \u251c\u2500\u2500 docker\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 install.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 main.yml\n    \u251c\u2500\u2500 docker_compose\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 install.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 main.yml\n    \u251c\u2500\u2500 docker_images\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 images_pull.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 main.yml\n    \u251c\u2500\u2500 git_clone\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 git_clone.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 main.yml\n    \u2514\u2500\u2500 users_groups\n        \u251c\u2500\u2500 files\n        \u2502\u00a0\u00a0 \u2514\u2500\u2500 islandora\n        \u2514\u2500\u2500 tasks\n            \u251c\u2500\u2500 groups.yml\n            \u251c\u2500\u2500 main.yml\n            \u251c\u2500\u2500 secure.yml\n            \u251c\u2500\u2500 ssh.yml\n            \u2514\u2500\u2500 users.yml", 
            "title": "Ansible script directory structure"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_ansible/#configure-ansible-script-to-deploy-to-isle-host", 
            "text": "To configure the Ansible script to deploy to one's institutional ISLE Host Server, please review and edit the following files within the  ansible  directory.   ansible/docker_install.yml  ansible/inventory  ansible/host_vars/isle-prod-project.institution.yml   Basically wherever  isle-prod-project.institution  appears as a value in these three files, please replace with the appropriate ISLE Host server fully qualified domain name ( fqdn ) e.g.  yourislesite.institution.com  One can open up and edit all files in a text editor e.g. Atom, Textedit, Textwrangler etc.", 
            "title": "Configure Ansible Script to deploy to ISLE Host"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_ansible/#ansibledocker_installyml", 
            "text": "This is the Ansible playbook necessary to deploy software to the ISLE host server.   At the top of the file remove  isle-prod-project.institution  and replace with the appropriate  fqdn .", 
            "title": "ansible/docker_install.yml"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_ansible/#ansibleinventoryyml", 
            "text": "This is the possible list of server(s) to deploy to using Ansible and its associated playbook(s).  Please Note:  These instructions below are repeated within the file itself.    Line 7: remove  isle-prod-project.institution  from in between the brackets and replace with the appropriate  fqdn    Line 8: Add the appropriate ISLE Host server user account that has  sudo  passwordless permissions to the end of  ansible_ssh_user=  Example :  ansible_ssh_user=janesmith    Line 8: Add the appropriate path to this ISLE Host Server user accounts public ssh key to the end of  ansible_ssh_private_key_file=    Example  of inventory using settings for local Ansible deploy laptop:    ansible_ssh_private_key_file=/home/janesmith/.ssh/id_rsa.pub  Please Note:  This key is typically found on the local control (Ansible deploy laptop / workstation) system and should have been previously copied to the appropriate ISLE Host server user account's  /home/islehostserver_user/.ssh/authorized_keys  file.   Final Example  end result for inventory file with all settings above   [yourislesite.institution.com]   \nyourislesite.institution.com ansible_connection=ssh ansible_ssh_user=janesmith ansible_ssh_private_key_file=/home/janesmith/.ssh/id_rsa.pub", 
            "title": "ansible/inventory.yml"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_ansible/#ansibleisle-prod-projectinstitutionyml", 
            "text": "Copy this file and rename the copy to with the appropriate  fqdn    Example  of how  host_vars  directory should now contain two files:      ansible\n\u251c\u2500\u2500 docker_install.yml\n\u251c\u2500\u2500 host_vars\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 isle-prod-project.institution.yml\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 yourislesite.institution.com.yml\n\u251c\u2500\u2500 inventory\n\u2514\u2500\u2500 roles    Edit the following lines within the newly created file i.e.  yourislesite.institution.com.yml  and remove the comments (#) as asked    Please Note:   The  fqdn  in the  inventory  file should match this filename as well.    Examples ONLY  ( Do not enter these literal values )      Line 9:  ansible_ssh_host: 192.168.1.16   This is the IP address of the ISLE Host server     Line 10:  ansible_ssh_user: janesmith      This is the appropriate ISLE Host server user account that has  sudo  passwordless permissions.     Line 15:  pub_locale: /home/janesmith/.ssh/id_rsa.pub   This is the key found on the local control (Ansible deploy laptop / workstation) system which has been previously copied to the appropriate ISLE Host server user account's  /home/islehostserver_user/.ssh/authorized_keys  file.", 
            "title": "ansible/isle-prod-project.institution.yml"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_ansible/#ansible-commands-to-test-connection", 
            "text": "Test if the Ansible control laptop / workstation can connect to the ISLE Host server by running these commands. On the local Ansible control laptop / workstation, open a terminal window and enter the following:   cd /path/to/ISLE/repo\n\nansible -i inventory isle-host-server -m ping   Example  output of above command ( IGNORE THE WARNING )   [WARNING]: Found both group and host with same name: isle-host-server   \n\nisle-host-server | SUCCESS =  {\n      changed : false,\n      ping :  pong \n   }  Please Note:   If SUCCESS doesn't appear as a value or if the wording of the prompt is in RED with \"host doesn't exist ...\", review all steps above and check the settings. Do not advance until the  Example  output above matches.", 
            "title": "Ansible commands to test connection"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_ansible/#ansible-commands-for-deploy", 
            "text": "To deploy to the ISLE Host Server, run this command.  ansible-playbook -i inventory docker_install.yml    Ansible will start displaying output within the terminal. If any turn red and the script terminates, please review the above settings and connectivity to the server. Attempt to rerun the script.", 
            "title": "Ansible commands for deploy"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_ansible/#qc-review-checklist", 
            "text": "To ensure a successful deploy to the ISLE Server, please review the following to ensure that the deploy to the Islandora Host server was successful.  Open a terminal window on the Ansible control laptop /workstation and  ssh  into the Islandora Host server using the appropriate enduser account setup prior to the deploy.  Example :  ssh enduser@isle-prod-project.institution", 
            "title": "QC Review checklist"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_ansible/#docker", 
            "text": "To check where Docker has been installed to, enter:    which docker       Example  output:        /usr/bin/docker    To check which version of Docker has been installed, enter:  docker --version  Example  output:  Docker version 17.12.0-ce, build c97c6d6    To check if Docker is running, enter:  service docker status      Example  output:    Redirecting to /bin/systemctl status docker.service\n\u25cf docker.service - Docker Application Container Engine\n  Loaded: loaded (/usr/lib/systemd/system/docker.service; enabled; vendor preset: disabled)\n  Active: active (running) since Thu 2018-01-18 14:36:55 EST; 1 weeks 4 days ago\n    Docs: https://docs.docker.com\nMain PID: 23066 (dockerd)\n  Memory: 55.3M\n....    To check if the ISLE images have been downloaded on the ISLE Host server, enter:  docker image ls  Example  output:      REPOSITORY                         TAG                 IMAGE ID            CREATED             SIZE\nislandoracollabgroup/isle-fedora   latest              6e2749ca2c2f        2 weeks ago         2.43GB\nislandoracollabgroup/isle-apache   latest              82fe4ae16932        2 weeks ago         2.18GB\nislandoracollabgroup/isle-solr     latest              7fba26c10433        2 weeks ago         784MB\nislandoracollabgroup/isle-mysql    latest              f34162f1e0f8        2 weeks ago         299MB", 
            "title": "Docker"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_ansible/#docker-compose", 
            "text": "To check where Docker-compose has been installed to, enter:    which docker-compose  Example  output:  /usr/local/bin/docker-compose    To check which version of Docker-compose has been installed, enter:  docker-compose -version  Example  output:  docker-compose version 1.17.1, build 6d101fb", 
            "title": "Docker Compose"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_ansible/#islandora-user", 
            "text": "To check if the  islandora  user has been created, enter:  cat /etc/passwd     Example  output:  islandora:x:1002:1002::/home/islandora:/bin/bash", 
            "title": "Islandora user"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_ansible/#isle-project-directory", 
            "text": "To check if the ISLE project git repo has been cloned to  /opt/ISLE , enter:  ls -lh /opt/ISLE  Example  output:    total 24K\ndrwxr-xr-x. 3 islandora islandora  110 Jan 17 09:17 apache\ndrwxr-xr-x. 5 islandora islandora   84 Jan 23 13:44 config\n-rwxr-xr-x. 1 islandora islandora 2.0K Jan 18 16:58 docker-compose.yml\ndrwxr-xr-x. 7 islandora islandora  143 Jan 17 09:17 docs\ndrwxr-xr-x. 7 islandora islandora  102 Jan 17 09:17 fedora\n-rwxr-xr-x. 1 islandora islandora  12K Jan 17 09:17 mkdocs.yml\ndrwxr-xr-x. 3 islandora islandora   54 Jan 17 09:17 mysql\n-rwxr-xr-x. 1 islandora islandora 4.1K Jan 17 09:17 README.md\ndrwxr-xr-x. 4 islandora islandora   50 Jan 17 09:17 solr  Once this script has finished one can:    Add any appropriate public ssh keys to  /home/islandora/.ssh/authorized_keys  prior to attempting to ssh to the Islandora Host server as the  islandora  user.    Add the  /home/islandora/.ssh/id_rsa.pub  key to any git repository contained within the Migration Guide. (Additional instructions appear in that guide if this process is unfamiliar.)    Proceed to bottom of this page for next steps.", 
            "title": "ISLE Project directory"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_ansible/#host-local-setup-ansible-macos-only", 
            "text": "To install  Ansible  on the enduser's MacOS laptop / workstation.    Install Ansible via Python pip   Follow here http://docs.ansible.com/ansible/latest/intro_installation.html#latest-releases-via-pip     Or install Ansible via Homebrew (better)   /usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"  brew install ansible     There is a ready made Ansible script for the MacOS hosted isle.localdomain called  ansible/host_vars/host_local_macos_isle_localdomain.yml    Use  vagrant  for the  ansible_ssh_user=  value in the  ansible/inventory  file    Use  ~/Users/enduser/.vagrant.d/insecure_private_key  for the  ansible_ssh_private_key_file  value in the  ansible/inventory  file    Example  [host_local_macos_isle_localdomain]\nhost_local_macos_isle_localdomain ansible_connection=ssh ansible_ssh_user=vagrant ansible_ssh_private_key_file=/Users/enduser/.vagrant.d/insecure_private_key    Line 13  in the  ansible/host_vars/host_local_macos_isle_localdomain.yml  file will need to be edited with the correct path to the enduser's id_rsa.pub  file. Change the  enduser  value to the real username. ( assumes the   id_rsa.pub   file exists! )    Line 3  in the  ansible/docker_install.yml  file will need to be edited, change the value of  isle-prod-project.institution  to  host_local_macos_isle_localdomain    Once these files have been edited, open a terminal and enter:    cd path_to/ISLE/ansible/    Test the connection to the ISLE Host Vagrant Ubuntu VM    ansible -i inventory host_local_macos_isle_localdomain -m ping    Example  output of above command ( IGNORE THE WARNING )      [WARNING]: Found both group and host with same name: host_local_macos_isle_localdomain   \nhost_local_macos_isle_localdomain | SUCCESS =  {\n    changed : false,\n    ping :  pong \n }  Please Note:   If SUCCESS doesn't appear as a value or if the wording of the prompt is in RED with \"host doesn't exist ...\", review all steps above and check the settings. Do not advance until the  Example  output above matches.      To deploy to the ISLE Host Server, run this command.   ansible-playbook -i inventory docker_install.yml  Ansible will start displaying output within the terminal. If any turn red and the script terminates, please review the above settings and connectivity to the server. Attempt to rerun the script.", 
            "title": "Host Local Setup - Ansible MacOS ONLY"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_ansible/#post-server-deploy-or-next-steps", 
            "text": "Continue next steps with the  Test Site Guide - isle.localdomain    Continue next steps with  Migration Guide", 
            "title": "Post Server Deploy or next steps"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_centos/", 
            "text": "Host Local Setup Guide - CentOS\n\n\nTO DO\n\nModify for Host Local Virtualbox settings Please\n\n\n\n\n\n\n\nThis alpha build uses \nisle.localdomain\n as the test domain along with the Docker Compose service names e.g. \nmysql, fedora, apache\n etc.\n\n\nIf your institution's server uses real DNS, then skip the next step. If not, please proceed with the following:\n\n\nTo ensure this domain resolves properly, one will need to edit the servers and/or their own local \n/etc/hosts\n file.\n\n\n\n\nOpen up a terminal and enter: \nsudo vi /etc/hosts\n\n\n\n\n\n\nAdd one or more of the following: (\nExamples ONLY\n)\n\n\n\n\n\n\nUbuntu 16.04 LTS Host Server (or VM)\n\n\n127.0.0.1       localhost isle.localdomain fedora apache fedora.isle.localdomain apache.isle.localdomain\n\n\n\n\n\n\nEnduser local laptop\n \n127.0.0.1 localhost   \n 192.156.123.26       isle.localdomain fedora apache fedora.isle.localdomain apache.isle.localdomain\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInstall / run on CentOS 7 server\n\n\n\n\nVirtualbox Virtual Machine (VM)  \n\n\na Vagrant image (recommend using \nbento/centos-7.2\n)  \n\n\nCloud based server e.g. Digital Ocean or Amazon Web Services  \n\n\nPost-installation, add the appropriate ssh keys to the root user's \n.ssh/authorized_keys\n file.  \n\n\n\n\nDocker setup for CentOS 7\n\n\n\n\nOpen a terminal, ssh to the CentOS server as root and install the following:  \n\n\nyum install openssl git htop ntp wget curl\n\n\n\n\n\n\n\n\nInstall Docker on CentOS 7 (as root user)\n\n\n\n\nwget -qO- https://get.docker.com/ | sh\n\n\n\n\nCreate islandora user (as root)\n\n\n\n\n\n\nadduser islandora\n\n\n\n\n\n\npasswd islandora\n\n\n\n\n\n\nisle2017\n\n\n\n\n\n\necho \"islandora ALL=(ALL) NOPASSWD: ALL\" \n /etc/sudoers.d/islandora\n\n\n\n\n\n\nCreate Docker group \ngroupadd docker\n  \n\n\n\n\n\n\nAdd islandora user to docker group \nusermod -aG docker islandora\n  \n\n\n\n\n\n\nAdd islandora user to wheel group \nsudo usermod -aG wheel islandora\n\n\n\n\n\n\nCreate a ssh key for the islandora user\n\n\n\n\n\n\nmkdir /home/islandora/.ssh\n  \n\n\n\n\n\n\nchmod -Rv 700 /home/islandora/.ssh\n  \n\n\n\n\n\n\ncd /home/islandora/.ssh\n  \n\n\n\n\n\n\nssh-keygen\n  \n\n\n\n\nFollow the prompts to save these files to \n/home/islandora/.ssh\n\n\n\n\n\n\n\n\nCreate an \nauthorized_keys\n file in \n/home/islandora/.ssh\nusing one of the following tools: \nnano\n, \npico\n, \nvi\n or \nemacs\n\n\n\n\n\n\nExample:\n     \nvi /home/islandora/.ssh/authorized_keys\n\n\n\n\n\n\nCopy in the existing ssh key from the enduser's laptop /workstation. This will allow key based ssh access for the enduser.\n\n\n\n\n\n\ncat /Users/endusername/.ssh/id_rsa.pub\n\n\n\n\n\n\nCopy and paste this value exactly into the \n/home/islandora/.ssh/authorized_keys\n file.\n\n\n\n\n\n\n\n\n\n\nExit out of the ssh session from the host server as the root user \nexit\n\n\n\n\n\n\nssh back in as \nislandora\n\n\n\n\n\n\nEnable the Docker service to start on host server boot\n\n\n\n\nsudo systemctl enable docker.service\n\n\n\n\n\n\n\n\nStart the Docker service\n\n\n\n\nsudo systemctl start docker.service\n\n\n\n\n\n\n\n\nInstall Docker-Compose (version 1.17.1 as of 11/16/2017) as islandora-user on CentOS 7\n\n\n\n\n\n\nOpen a terminal and ssh back into the CentOS Host Server/VM as the \nislandora\n user and perform the following:\n\n\n\n\n\n\nAdd the CENTOS epel-release package repository\n\n\n\n\nsudo yum install epel-release\n\n\n\n\n\n\n\n\nInstall Python Pip (package manager for Python Scripting Language)\n\n\n\n\nsudo yum install -y python-pip\n\n\n\n\n\n\n\n\nUpgrade Python to latest version\n\n\n\n\nsudo yum upgrade python*\n\n\n\n\n\n\n\n\nUpgrade Python Pip\n\n\n\n\nsudo pip install --upgrade pip\n\n\n\n\n\n\n\n\nInstall Docker compose\n\n\n\n\nsudo pip install docker-compose\n\n\n\n\n\n\n\n\nClone ISLE repository\n\n\n\n\n\n\nPlease note in some Linux Distributions, one might need to create the \n/opt\n directory (optional)  \n\n\n\n\n\n\nOne can \nls -lha /\n to see if an \n/opt\n directory exists  \n\n\n\n\n\n\nIf missing, \nsudo mkdir /opt\n  \n\n\n\n\n\n\nIf not missing, proceed to next step.  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncd /opt\n\n\n\n\n\n\nsudo git clone https://github.com/Islandora-Collaboration-Group/ISLE.git\n\n\n\n\n\n\nThis process will take 1 - 3 minutes depending on internet bandwidth\n\n\n\n\n\n\nsudo chown -Rv islandora:islandora ISLE\n\n\n\n\n\n\ncd /opt/ISLE\n\n\n\n\n\n\nNext steps\n\n\nOnce this process has finished one chose to do one of the following:\n\n\n\n\nContinue next steps with the \nTest Site Guide - isle.localdomain\n\n\n\n\n* Continue next steps with \nMigration Guide", 
            "title": "1.4. -Testing - Host Local Setup Guide - CentOS"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_centos/#host-local-setup-guide-centos", 
            "text": "TO DO\n\nModify for Host Local Virtualbox settings Please   This alpha build uses  isle.localdomain  as the test domain along with the Docker Compose service names e.g.  mysql, fedora, apache  etc.  If your institution's server uses real DNS, then skip the next step. If not, please proceed with the following:  To ensure this domain resolves properly, one will need to edit the servers and/or their own local  /etc/hosts  file.   Open up a terminal and enter:  sudo vi /etc/hosts    Add one or more of the following: ( Examples ONLY )    Ubuntu 16.04 LTS Host Server (or VM)  127.0.0.1       localhost isle.localdomain fedora apache fedora.isle.localdomain apache.isle.localdomain    Enduser local laptop\n  127.0.0.1 localhost   \n 192.156.123.26       isle.localdomain fedora apache fedora.isle.localdomain apache.isle.localdomain", 
            "title": "Host Local Setup Guide - CentOS"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_centos/#install-run-on-centos-7-server", 
            "text": "Virtualbox Virtual Machine (VM)    a Vagrant image (recommend using  bento/centos-7.2 )    Cloud based server e.g. Digital Ocean or Amazon Web Services    Post-installation, add the appropriate ssh keys to the root user's  .ssh/authorized_keys  file.", 
            "title": "Install / run on CentOS 7 server"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_centos/#docker-setup-for-centos-7", 
            "text": "Open a terminal, ssh to the CentOS server as root and install the following:    yum install openssl git htop ntp wget curl", 
            "title": "Docker setup for CentOS 7"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_centos/#install-docker-on-centos-7-as-root-user", 
            "text": "wget -qO- https://get.docker.com/ | sh", 
            "title": "Install Docker on CentOS 7 (as root user)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_centos/#create-islandora-user-as-root", 
            "text": "adduser islandora    passwd islandora    isle2017    echo \"islandora ALL=(ALL) NOPASSWD: ALL\"   /etc/sudoers.d/islandora    Create Docker group  groupadd docker       Add islandora user to docker group  usermod -aG docker islandora       Add islandora user to wheel group  sudo usermod -aG wheel islandora    Create a ssh key for the islandora user    mkdir /home/islandora/.ssh       chmod -Rv 700 /home/islandora/.ssh       cd /home/islandora/.ssh       ssh-keygen      Follow the prompts to save these files to  /home/islandora/.ssh     Create an  authorized_keys  file in  /home/islandora/.ssh using one of the following tools:  nano ,  pico ,  vi  or  emacs    Example:\n      vi /home/islandora/.ssh/authorized_keys    Copy in the existing ssh key from the enduser's laptop /workstation. This will allow key based ssh access for the enduser.    cat /Users/endusername/.ssh/id_rsa.pub    Copy and paste this value exactly into the  /home/islandora/.ssh/authorized_keys  file.      Exit out of the ssh session from the host server as the root user  exit    ssh back in as  islandora    Enable the Docker service to start on host server boot   sudo systemctl enable docker.service     Start the Docker service   sudo systemctl start docker.service", 
            "title": "Create islandora user (as root)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_centos/#install-docker-compose-version-1171-as-of-11162017-as-islandora-user-on-centos-7", 
            "text": "Open a terminal and ssh back into the CentOS Host Server/VM as the  islandora  user and perform the following:    Add the CENTOS epel-release package repository   sudo yum install epel-release     Install Python Pip (package manager for Python Scripting Language)   sudo yum install -y python-pip     Upgrade Python to latest version   sudo yum upgrade python*     Upgrade Python Pip   sudo pip install --upgrade pip     Install Docker compose   sudo pip install docker-compose", 
            "title": "Install Docker-Compose (version 1.17.1 as of 11/16/2017) as islandora-user on CentOS 7"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_centos/#clone-isle-repository", 
            "text": "Please note in some Linux Distributions, one might need to create the  /opt  directory (optional)      One can  ls -lha /  to see if an  /opt  directory exists      If missing,  sudo mkdir /opt       If not missing, proceed to next step.          cd /opt    sudo git clone https://github.com/Islandora-Collaboration-Group/ISLE.git    This process will take 1 - 3 minutes depending on internet bandwidth    sudo chown -Rv islandora:islandora ISLE    cd /opt/ISLE", 
            "title": "Clone ISLE repository"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_centos/#next-steps", 
            "text": "Once this process has finished one chose to do one of the following:   Continue next steps with the  Test Site Guide - isle.localdomain", 
            "title": "Next steps"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_centos/#continue-next-steps-with-migration-guide", 
            "text": "", 
            "title": "* Continue next steps with Migration Guide"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_macos/", 
            "text": "Host Local Setup Guide - MacOS (Vagrant / Virtualbox)\n\n\nThis is a guide to setup and install all ISLE pre-requisites on a MacOS local laptop or workstation.\n\n\nPlease note:\n This guide is for using \nVagrant / Virtualbox\n software only.\n\n\nAssumptions / Pre-Requisites\n\n\n\n\nEnduser has a local laptop / workstation that conforms to the specifications outlined in the \nISLE MVP Host Specifications Guide\n\n\n\n\nInstall process overview\n\n\n\n\nInstall git\n\n\nInstall VirtualBox\n\n\nInstall VirtualBox Extensions\n\n\nInstall Vagrant\n\n\nInstall Vagrant plugin\n\n\nClone the ISLE project repository\n\n\nStart the ISLE Host VM (using vagrant)\n\n\nInstall the ISLE project and software dependencies using the Ubuntu (manual) or Ansible (scripted) guides\n\n\nInstall and run the ISLE project on the ISLE Host VM using the Testsite Guide\n\n\n\n\nStep 1: Git Installation\n\n\nIn order to get a copy (clone) of the current ISLE project, git will need to be installed. \nGit\n is a software version control system for tracking changes in computer files and coordinating work on those files among multiple people.\n\n\n\n\n\n\nOpen a terminal and enter: \ngit --version\n.\n\n\n\n\n\n\nThis command will inform the enduser if git is already installed.  \n\n\n\n\n\n\n$git --version\ngit version 2.15.1\n\n\n\n\n\n\n\n\nIf git is not installed, running that previous command may trigger the \nInstall Command Line Developer Tools\n prompt. If the prompt appears:\n\n\n\n\nClick on the blue \nInstall\n button for the license agreement.\n\n\nClick the white \nAgree\n button.\n\n\nThe package will take 1-2 minutes to download.\n\n\nClick the \nDone\n button once finished.\n\n\n\n\n\n\n\n\nIf git is not installed and the prompt doesn't show, then follow one of the recommended methods for installing git in this nice \ntutorial\n\n\n\n\n\n\nIf git is already installed, then please proceed to the next section.\n\n\nStep 2: VirtualBox Installation\n\n\nVirtualBox is a general-purpose full virtualizer for x86 hardware, targeted at server, desktop and embedded use.\n\n\n\n\n\n\nIn a web browser, navigate to https://www.virtualbox.org/wiki/Downloads to download the latest version. Click on the \nOS X hosts\n link to start.\n\n\n\n\n\n\nThe \nVirtualBox-x.x.xxx.dmg\n file download process will start and depending on the enduser's Internet connection will take between 5 - 15 mins. This file once downloaded will be found in the endusers \nDownloads\n folder.\n\n\n\n\n\n\nDouble-click the \nVirtualBox-x.x.xxx.dmg\n file in the \nDownloads\n folder.\n\n\n\n\n\n\nA \nVirtualBox\n install prompt will appear. Within the prompt, Double click on the \nVirtualBox.pkg\n icon as also instructed in the prompt.\n\n\n\n\n\n\nA \nInstall Oracle VM VirtualBox\n prompt will appear click on the \nContinue\n button.\n\n\n\n\n\n\nThe \nStandard Install on...\n window appears, click on the \nInstall\n button at the lower right hand corner.\n\n\n\n\n\n\nThe \nInstaller is trying to install new software\n prompt appears. The enduser's User Name should already be filled out in the top field. Enter the associated password in the second field and then click the \nInstall Software Button\n.\n\n\n\n\n\n\nA \nThe installation was successful\n window should now appear. Click the \nClose\n button.\n\n\n\n\n\n\nA final prompt may appear asking the enduser if they want to move the \nOracle VM VirtualBox Installer to the Trash\n. Click the \nMove to Trash\n button.\n\n\n\n\n\n\nOpen a new \nFinder\n window and click on the \n^\n symbol to eject the \nVirtualBox\n install mount. This will close the previous \nVirtualBox\n install prompt.\n\n\n\n\n\n\nStep 3: VirtualBox Extensions for VirtualBox Installation\n\n\n\n\n\n\nIn a web browser, navigate to https://www.virtualbox.org/wiki/Downloads to download the latest version. Click on the Oracle VM VirtualBox Extension Pack \nAll supported platforms\n link to start.\n\n\n\n\n\n\nThe \nOracle_VM_VirtualBox_Extension_Pack-x.x.xxx.vbox-extpack\n file download process will start and depending on the enduser's Internet connection will take between 5 - 15 mins. This file once downloaded will be found in the endusers \nDownloads\n folder.\n\n\n\n\n\n\nDouble-click the \nOracle_VM_VirtualBox_Extension_Pack-x.x.xxx.vbox-extpack\n file in the \nDownloads\n folder.\n\n\n\n\n\n\nThis should automatically start VirtualBox and a dropdown window will appear directing the enduser to either install or upgrade the Extension pack. Click on the appropriate install or upgrade button. Either will have the same effect.\n\n\n\n\n\n\nA VirtualBox license agreement prompt should appear. Using the scrollbar on the right hand side of the prompt, scroll to the bottom (after reading of course ;) ) and click the \nI agree\n button.\n\n\n\n\n\n\nThe enduser will be asked for their user name and password in a new prompt. Enter accordingly.\n\n\n\n\n\n\nThe extension pack should now install (\n10 seconds) and a new prompt with \nThe extension pack Oracle VM VirtualBox Extension Pack was installed successfully.\n should appear. Click the \nOK\n button to close. The enduser can also now close the VirtualBox window / application.\n\n\n\n\n\n\nStep 4: Vagrant Installation\n\n\nVagrant is a tool for building and managing virtual machine environments in a single workflow. Endusers can read more \nhere\n\n\n\n\n\n\nIn a web browser, navigate to https://www.vagrantup.com/downloads.html to download the latest version. Click on the \n64-bit\n link in the Mac OS X section.\n\n\n\n\n\n\nThe \nvagrant_x.x.x_x86_64.dmg\n file download process will start and depending on the enduser's Internet connection will take between 5 - 15 mins. This file once downloaded will be found in the endusers \nDownloads\n folder.\n\n\n\n\n\n\nDouble-click the \nvagrant_x.x.x_x86_64.dmg\n file in the \nDownloads\n folder.\n\n\n\n\n\n\nA \nVagrant\n install prompt will appear. Within the prompt, Double click on the \nvagrant.pkg\n icon.\n\n\n\n\n\n\nA \nInstall Vagrant\n prompt will appear, click on the \nContinue\n button.\n\n\n\n\n\n\nThe \nStandard Install on...\n window appears, click on the \nInstall\n button at the lower right hand corner.\n\n\n\n\n\n\nThe \nInstaller is trying to install new software\n prompt appears. The enduser's User Name should already be filled out in the top field. Enter the associated password in the second field and then click the \nInstall Software Button\n.\n\n\n\n\n\n\nA \nThe installation was successful\n window should now appear. Click the \nClose\n button.\n\n\n\n\n\n\nA final prompt may appear asking the enduser if they want to move the \nVagrant Installer to the Trash\n. Click the \nMove to Trash\n button.\n\n\n\n\n\n\nOpen a new \nFinder\n window and click on the \n^\n symbol to eject the \nVagrant\n install mount. This will close the previous \nVagrant\n install prompt.\n\n\n\n\n\n\nStep 5: Vagrant Plugin Installation\n\n\n\n\n\n\nOpen a terminal and enter the following:\n\n\n\n\n\n\nvagrant plugin install vagrant-hostsupdater\n\n\n\n\n\n\nThis process should take 10 - 30 seconds depending on Internet speed\n\n\n\n\n\n\nExample\n\n\n\nvagrant plugin install vagrant-hostsupdater\n\nInstalling the 'vagrant-hostsupdater' plugin. This can take a few minutes...\n\nInstalled the plugin 'vagrant-hostsupdater (1.0.2)'!\n\n\n\n\nStep 6: Clone the ISLE repository\n\n\nIn this section, the enduser will need to decide on an appropriate area on their laptop to clone the current ISLE project software to.\n\n\nSome endusers create a new directory e.g. \nProjects\n or \nCode\n within their \nDocuments\n directory. It is entirely up to the enduser to decide. The steps below are an example.\n\n\nThe built-in terminal for MacOs can be found in \n~/Applications/Utilities/Terminal\n\n\n\n\n\n\nOpen a terminal\n\n\n\n\n\n\ncd ~/Documents\n\n\n\n\n\n\ngit clone https://github.com/Islandora-Collaboration-Group/ISLE\n\n\n\n\n\n\nThis process will take 3 - 5 minutes depending on internet bandwidth\n\n\n\n\n\n\nA new directory \nISLE\n should now be visible. The enduser can check by either:\n\n\n\n\n\n\nusing the \nFinder\n application to navigate to this directory\n\n\n\n\n\n\nOr within the same terminal, enter \nls -lha\n\n\n\n\n\n\nStep 7: Start the ISLE Host Vagrant Ubuntu VM\n\n\n\n\n\n\nOpen a terminal and enter the following:\n\n\n\n\n\n\ncd ~/path_to/ISLE/vagrant/\n\n\n\n\nvagrant up\n\n\n\n\nThis process should start the ISLE Host Vagrant Ubuntu VM and should take anywhere from 10 - 20 minutes for the software to download and start.\n\n\nStep 8: Install Docker, Docker Compose and ISLE on the ISLE Host Vagrant Ubuntu VM\n\n\nOnce this process finishes and the ISLE Host Vagrant Ubuntu VM is running.\n\n\n\n\n\n\nThe enduser should enter in the terminal:\n\n\n\n\nvagrant ssh\n\n\n\n\n\n\n\n\nThis command shells in the vagrant user to the ISLE Host.\n\n\nThe enduser now has a choice to follow these one of these two guides to install the dependencies.\n\n\n\n\nChoice 1:\n \nHost Local - Ubuntu Setup Guide\n\n\n\n\nstart on \nLine 34 - #### Docker setup for Ubuntu 16.04 LTS\n to perform this process manually on the ISLE Host Vagrant Ubuntu VM\n\n\n\n\n\n\nChoice 2\n \nHost Local - Ansible Setup Guide\n\n\n\n\nstart on \nLine 392 - ### Host Local Setup - Ansible MacOS ONLY\n to setup Ansible, use the supplied Ansible script and automatically install Docker, Docker-Compose on the ISLE Host Vagrant Ubuntu VM.\n\n\n\n\nStep 9: Next steps\n\n\nOnce this process has finished one chose to do one of the following:\n\n\n\n\n\n\nContinue next steps with the \nTestsite Guide\n (isle.localdomain)\n\n\n\n\n\n\nContinue next steps with the \nNewsite Guide\n\n\n\n\n\n\nContinue next steps with the \nMigration Guide\n\n\n\n\n\n\nContinue next steps with the \nDeveloper Build Guide for Linux\n\n\n\n\n\n\n* Continue next steps with the \nDeveloper Build Guide for MacOS", 
            "title": "1.4. -Testing - Host Local Setup Guide - MacOS"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_macos/#host-local-setup-guide-macos-vagrant-virtualbox", 
            "text": "This is a guide to setup and install all ISLE pre-requisites on a MacOS local laptop or workstation.  Please note:  This guide is for using  Vagrant / Virtualbox  software only.", 
            "title": "Host Local Setup Guide - MacOS (Vagrant / Virtualbox)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_macos/#assumptions-pre-requisites", 
            "text": "Enduser has a local laptop / workstation that conforms to the specifications outlined in the  ISLE MVP Host Specifications Guide", 
            "title": "Assumptions / Pre-Requisites"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_macos/#install-process-overview", 
            "text": "Install git  Install VirtualBox  Install VirtualBox Extensions  Install Vagrant  Install Vagrant plugin  Clone the ISLE project repository  Start the ISLE Host VM (using vagrant)  Install the ISLE project and software dependencies using the Ubuntu (manual) or Ansible (scripted) guides  Install and run the ISLE project on the ISLE Host VM using the Testsite Guide", 
            "title": "Install process overview"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_macos/#step-1-git-installation", 
            "text": "In order to get a copy (clone) of the current ISLE project, git will need to be installed.  Git  is a software version control system for tracking changes in computer files and coordinating work on those files among multiple people.    Open a terminal and enter:  git --version .    This command will inform the enduser if git is already installed.      $git --version\ngit version 2.15.1    If git is not installed, running that previous command may trigger the  Install Command Line Developer Tools  prompt. If the prompt appears:   Click on the blue  Install  button for the license agreement.  Click the white  Agree  button.  The package will take 1-2 minutes to download.  Click the  Done  button once finished.     If git is not installed and the prompt doesn't show, then follow one of the recommended methods for installing git in this nice  tutorial    If git is already installed, then please proceed to the next section.", 
            "title": "Step 1: Git Installation"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_macos/#step-2-virtualbox-installation", 
            "text": "VirtualBox is a general-purpose full virtualizer for x86 hardware, targeted at server, desktop and embedded use.    In a web browser, navigate to https://www.virtualbox.org/wiki/Downloads to download the latest version. Click on the  OS X hosts  link to start.    The  VirtualBox-x.x.xxx.dmg  file download process will start and depending on the enduser's Internet connection will take between 5 - 15 mins. This file once downloaded will be found in the endusers  Downloads  folder.    Double-click the  VirtualBox-x.x.xxx.dmg  file in the  Downloads  folder.    A  VirtualBox  install prompt will appear. Within the prompt, Double click on the  VirtualBox.pkg  icon as also instructed in the prompt.    A  Install Oracle VM VirtualBox  prompt will appear click on the  Continue  button.    The  Standard Install on...  window appears, click on the  Install  button at the lower right hand corner.    The  Installer is trying to install new software  prompt appears. The enduser's User Name should already be filled out in the top field. Enter the associated password in the second field and then click the  Install Software Button .    A  The installation was successful  window should now appear. Click the  Close  button.    A final prompt may appear asking the enduser if they want to move the  Oracle VM VirtualBox Installer to the Trash . Click the  Move to Trash  button.    Open a new  Finder  window and click on the  ^  symbol to eject the  VirtualBox  install mount. This will close the previous  VirtualBox  install prompt.", 
            "title": "Step 2: VirtualBox Installation"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_macos/#step-3-virtualbox-extensions-for-virtualbox-installation", 
            "text": "In a web browser, navigate to https://www.virtualbox.org/wiki/Downloads to download the latest version. Click on the Oracle VM VirtualBox Extension Pack  All supported platforms  link to start.    The  Oracle_VM_VirtualBox_Extension_Pack-x.x.xxx.vbox-extpack  file download process will start and depending on the enduser's Internet connection will take between 5 - 15 mins. This file once downloaded will be found in the endusers  Downloads  folder.    Double-click the  Oracle_VM_VirtualBox_Extension_Pack-x.x.xxx.vbox-extpack  file in the  Downloads  folder.    This should automatically start VirtualBox and a dropdown window will appear directing the enduser to either install or upgrade the Extension pack. Click on the appropriate install or upgrade button. Either will have the same effect.    A VirtualBox license agreement prompt should appear. Using the scrollbar on the right hand side of the prompt, scroll to the bottom (after reading of course ;) ) and click the  I agree  button.    The enduser will be asked for their user name and password in a new prompt. Enter accordingly.    The extension pack should now install ( 10 seconds) and a new prompt with  The extension pack Oracle VM VirtualBox Extension Pack was installed successfully.  should appear. Click the  OK  button to close. The enduser can also now close the VirtualBox window / application.", 
            "title": "Step 3: VirtualBox Extensions for VirtualBox Installation"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_macos/#step-4-vagrant-installation", 
            "text": "Vagrant is a tool for building and managing virtual machine environments in a single workflow. Endusers can read more  here    In a web browser, navigate to https://www.vagrantup.com/downloads.html to download the latest version. Click on the  64-bit  link in the Mac OS X section.    The  vagrant_x.x.x_x86_64.dmg  file download process will start and depending on the enduser's Internet connection will take between 5 - 15 mins. This file once downloaded will be found in the endusers  Downloads  folder.    Double-click the  vagrant_x.x.x_x86_64.dmg  file in the  Downloads  folder.    A  Vagrant  install prompt will appear. Within the prompt, Double click on the  vagrant.pkg  icon.    A  Install Vagrant  prompt will appear, click on the  Continue  button.    The  Standard Install on...  window appears, click on the  Install  button at the lower right hand corner.    The  Installer is trying to install new software  prompt appears. The enduser's User Name should already be filled out in the top field. Enter the associated password in the second field and then click the  Install Software Button .    A  The installation was successful  window should now appear. Click the  Close  button.    A final prompt may appear asking the enduser if they want to move the  Vagrant Installer to the Trash . Click the  Move to Trash  button.    Open a new  Finder  window and click on the  ^  symbol to eject the  Vagrant  install mount. This will close the previous  Vagrant  install prompt.", 
            "title": "Step 4: Vagrant Installation"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_macos/#step-5-vagrant-plugin-installation", 
            "text": "Open a terminal and enter the following:    vagrant plugin install vagrant-hostsupdater    This process should take 10 - 30 seconds depending on Internet speed    Example  \nvagrant plugin install vagrant-hostsupdater\n\nInstalling the 'vagrant-hostsupdater' plugin. This can take a few minutes...\n\nInstalled the plugin 'vagrant-hostsupdater (1.0.2)'!", 
            "title": "Step 5: Vagrant Plugin Installation"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_macos/#step-6-clone-the-isle-repository", 
            "text": "In this section, the enduser will need to decide on an appropriate area on their laptop to clone the current ISLE project software to.  Some endusers create a new directory e.g.  Projects  or  Code  within their  Documents  directory. It is entirely up to the enduser to decide. The steps below are an example.  The built-in terminal for MacOs can be found in  ~/Applications/Utilities/Terminal    Open a terminal    cd ~/Documents    git clone https://github.com/Islandora-Collaboration-Group/ISLE    This process will take 3 - 5 minutes depending on internet bandwidth    A new directory  ISLE  should now be visible. The enduser can check by either:    using the  Finder  application to navigate to this directory    Or within the same terminal, enter  ls -lha", 
            "title": "Step 6: Clone the ISLE repository"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_macos/#step-7-start-the-isle-host-vagrant-ubuntu-vm", 
            "text": "Open a terminal and enter the following:    cd ~/path_to/ISLE/vagrant/   vagrant up   This process should start the ISLE Host Vagrant Ubuntu VM and should take anywhere from 10 - 20 minutes for the software to download and start.", 
            "title": "Step 7: Start the ISLE Host Vagrant Ubuntu VM"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_macos/#step-8-install-docker-docker-compose-and-isle-on-the-isle-host-vagrant-ubuntu-vm", 
            "text": "Once this process finishes and the ISLE Host Vagrant Ubuntu VM is running.    The enduser should enter in the terminal:   vagrant ssh     This command shells in the vagrant user to the ISLE Host.  The enduser now has a choice to follow these one of these two guides to install the dependencies.   Choice 1:   Host Local - Ubuntu Setup Guide   start on  Line 34 - #### Docker setup for Ubuntu 16.04 LTS  to perform this process manually on the ISLE Host Vagrant Ubuntu VM    Choice 2   Host Local - Ansible Setup Guide   start on  Line 392 - ### Host Local Setup - Ansible MacOS ONLY  to setup Ansible, use the supplied Ansible script and automatically install Docker, Docker-Compose on the ISLE Host Vagrant Ubuntu VM.", 
            "title": "Step 8: Install Docker, Docker Compose and ISLE on the ISLE Host Vagrant Ubuntu VM"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_macos/#step-9-next-steps", 
            "text": "Once this process has finished one chose to do one of the following:    Continue next steps with the  Testsite Guide  (isle.localdomain)    Continue next steps with the  Newsite Guide    Continue next steps with the  Migration Guide    Continue next steps with the  Developer Build Guide for Linux", 
            "title": "Step 9: Next steps"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_macos/#continue-next-steps-with-the-developer-build-guide-for-macos", 
            "text": "", 
            "title": "* Continue next steps with the Developer Build Guide for MacOS"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_ubuntu/", 
            "text": "Host Local Setup Guide - Ubuntu\n\n\nTO DO\n\nModify for Local Virtualbox settings Please\n\n\n\n\n\n\n\nThis alpha build uses \nisle.localdomain\n as the test domain along with the Docker Compose service names e.g. \nmysql, fedora, apache\n etc.\n\n\nIf your institution's server uses real DNS, then skip the next step. If not, please proceed with the following:\n\n\nTo ensure this domain resolves properly, one will need to edit the servers and/or their own local \n/etc/hosts\n file.\n\n\n\n\nOpen up a terminal and enter: \nsudo vi /etc/hosts\n\n\n\n\n\n\nAdd one or more of the following: (\nExamples ONLY\n)\n\n\n\n\n\n\nUbuntu 16.04 LTS Host Server (or VM)\n\n\n127.0.0.1       localhost isle.localdomain fedora apache fedora.isle.localdomain apache.isle.localdomain\n\n\n\n\n\n\nEnduser local laptop\n \n127.0.0.1 localhost   \n 192.156.123.26       isle.localdomain fedora apache fedora.isle.localdomain apache.isle.localdomain\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInstall / run on Ubuntu 16.04 LTS server\n\n\n\n\nVirtualbox Virtual Machine (VM)  \n\n\na Vagrant image (recommend using \nbento/ubuntu-16.04\n)  \n\n\nCloud based server e.g. Digital Ocean or Amazon Web Services  \n\n\nPost-installation, add the appropriate ssh keys to the root user's \n.ssh/authorized_keys\n file.  \n\n\n\n\nDocker setup for Ubuntu 16.04 LTS\n\n\n\n\n\n\nOpen a terminal, ssh to the Ubuntu server as root and install the following:\n\n\n\n\n\n\nIf you are not root, \nsudo -s\n\n\n\n\n\n\napt-get update\n  \n\n\n\n\n\n\napt-get install openssl git htop ntp curl\n  \n\n\n\n\n\n\n\n\n\n\nInstall Docker on Ubuntu 16.04 LTS\n\n\n\n\n\n\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\n  \n\n\n\n\n\n\nadd-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\n  \n\n\n\n\n\n\napt-get update\n  \n\n\n\n\n\n\napt-get install -y docker-ce\n  \n\n\n\n\n\n\nCheck if running \nsystemctl status docker\n  \n\n\n\n\nYou may need to PRESS Shift-Z twice to exit out.\n\n\n\n\n\n\n\n\nCreate islandora user (as root)\n\n\n\n\n\n\nadduser islandora\n\n\n\n\n\n\npasswd islandora\n\n\n\n\n\n\nisle2017\n\n\n\n\n\n\necho \"islandora ALL=(ALL) NOPASSWD: ALL\" \n /etc/sudoers.d/islandora\n\n\n\n\n\n\nCreate Docker group \ngroupadd docker\n  \n\n\n\n\n\n\nAdd islandora user to docker group \nusermod -aG docker islandora\n  \n\n\n\n\n\n\nCreate a ssh key for the islandora user\n\n\n\n\n\n\nmkdir /home/islandora/.ssh\n  \n\n\n\n\n\n\nchmod -Rv 700 /home/islandora/.ssh\n  \n\n\n\n\n\n\ncd /home/islandora/.ssh\n  \n\n\n\n\n\n\nssh-keygen\n  \n\n\n\n\nFollow the prompts to save these files to \n/home/islandora/.ssh\n\n\n\n\n\n\n\n\nCreate an \nauthorized_keys\n file in \n/home/islandora/.ssh\nusing one of the following tools: \nnano\n, \npico\n, \nvi\n or \nemacs\n\n\n\n\n\n\nExample:\n     \nvi /home/islandora/.ssh/authorized_keys\n\n\n\n\n\n\nCopy in the existing ssh key from the enduser's laptop /workstation. This will allow key based ssh access for the enduser.\n\n\n\n\n\n\ncat /Users/endusername/.ssh/id_rsa.pub\n\n\n\n\n\n\nCopy and paste this value exactly into the \n/home/islandora/.ssh/authorized_keys\n file.\n\n\n\n\n\n\n\n\n\n\nExit out of the session as the root user.\n\n\n\n\nexit\n\n\nsu islandora\n  \n\n\n\n\n\n\n\n\nInstall Docker-Compose (version 1.17.1 as of 11/16/2017) as islandora-user on Ubuntu 16.04 LTS\n\n\n\n\n\n\ncd /home/islandora\n\n\n\n\n\n\nsudo curl -L https://github.com/docker/compose/releases/download/1.17.1/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose\n\n\n\n\n\n\nsudo chmod +x /usr/local/bin/docker-compose\n  \n\n\n\n\n\n\nClone ISLE repository\n\n\n\n\n\n\nPlease note in some Linux Distributions, one might need to create the \n/opt\n directory (optional)  \n\n\n\n\n\n\nOne can \nls -lha /\n to see if an \n/opt\n directory exists  \n\n\n\n\n\n\nIf missing, \nsudo mkdir /opt\n  \n\n\n\n\n\n\nIf not missing, proceed to next step.  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncd /opt\n\n\n\n\n\n\nsudo git clone https://github.com/Islandora-Collaboration-Group/ISLE.git\n\n\n\n\n\n\nThis process will take 1 - 3 minutes depending on internet bandwidth\n\n\n\n\n\n\nsudo chown -Rv islandora:islandora ISLE\n\n\n\n\n\n\ncd /opt/ISLE\n\n\n\n\n\n\nNext steps\n\n\nOnce this process has finished one chose to do one of the following:\n\n\n\n\n\n\nContinue next steps with the \nTest Site Guide - isle.localdomain\n\n\n\n\n\n\nContinue next steps with \nMigration Guide", 
            "title": "1.4. -Testing - Host Local Setup Guide - Ubuntu"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_ubuntu/#host-local-setup-guide-ubuntu", 
            "text": "TO DO\n\nModify for Local Virtualbox settings Please   This alpha build uses  isle.localdomain  as the test domain along with the Docker Compose service names e.g.  mysql, fedora, apache  etc.  If your institution's server uses real DNS, then skip the next step. If not, please proceed with the following:  To ensure this domain resolves properly, one will need to edit the servers and/or their own local  /etc/hosts  file.   Open up a terminal and enter:  sudo vi /etc/hosts    Add one or more of the following: ( Examples ONLY )    Ubuntu 16.04 LTS Host Server (or VM)  127.0.0.1       localhost isle.localdomain fedora apache fedora.isle.localdomain apache.isle.localdomain    Enduser local laptop\n  127.0.0.1 localhost   \n 192.156.123.26       isle.localdomain fedora apache fedora.isle.localdomain apache.isle.localdomain", 
            "title": "Host Local Setup Guide - Ubuntu"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_ubuntu/#install-run-on-ubuntu-1604-lts-server", 
            "text": "Virtualbox Virtual Machine (VM)    a Vagrant image (recommend using  bento/ubuntu-16.04 )    Cloud based server e.g. Digital Ocean or Amazon Web Services    Post-installation, add the appropriate ssh keys to the root user's  .ssh/authorized_keys  file.", 
            "title": "Install / run on Ubuntu 16.04 LTS server"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_ubuntu/#docker-setup-for-ubuntu-1604-lts", 
            "text": "Open a terminal, ssh to the Ubuntu server as root and install the following:    If you are not root,  sudo -s    apt-get update       apt-get install openssl git htop ntp curl", 
            "title": "Docker setup for Ubuntu 16.04 LTS"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_ubuntu/#install-docker-on-ubuntu-1604-lts", 
            "text": "curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -       add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"       apt-get update       apt-get install -y docker-ce       Check if running  systemctl status docker      You may need to PRESS Shift-Z twice to exit out.", 
            "title": "Install Docker on Ubuntu 16.04 LTS"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_ubuntu/#create-islandora-user-as-root", 
            "text": "adduser islandora    passwd islandora    isle2017    echo \"islandora ALL=(ALL) NOPASSWD: ALL\"   /etc/sudoers.d/islandora    Create Docker group  groupadd docker       Add islandora user to docker group  usermod -aG docker islandora       Create a ssh key for the islandora user    mkdir /home/islandora/.ssh       chmod -Rv 700 /home/islandora/.ssh       cd /home/islandora/.ssh       ssh-keygen      Follow the prompts to save these files to  /home/islandora/.ssh     Create an  authorized_keys  file in  /home/islandora/.ssh using one of the following tools:  nano ,  pico ,  vi  or  emacs    Example:\n      vi /home/islandora/.ssh/authorized_keys    Copy in the existing ssh key from the enduser's laptop /workstation. This will allow key based ssh access for the enduser.    cat /Users/endusername/.ssh/id_rsa.pub    Copy and paste this value exactly into the  /home/islandora/.ssh/authorized_keys  file.      Exit out of the session as the root user.   exit  su islandora", 
            "title": "Create islandora user (as root)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_ubuntu/#install-docker-compose-version-1171-as-of-11162017-as-islandora-user-on-ubuntu-1604-lts", 
            "text": "cd /home/islandora    sudo curl -L https://github.com/docker/compose/releases/download/1.17.1/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose    sudo chmod +x /usr/local/bin/docker-compose", 
            "title": "Install Docker-Compose (version 1.17.1 as of 11/16/2017) as islandora-user on Ubuntu 16.04 LTS"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_ubuntu/#clone-isle-repository", 
            "text": "Please note in some Linux Distributions, one might need to create the  /opt  directory (optional)      One can  ls -lha /  to see if an  /opt  directory exists      If missing,  sudo mkdir /opt       If not missing, proceed to next step.          cd /opt    sudo git clone https://github.com/Islandora-Collaboration-Group/ISLE.git    This process will take 1 - 3 minutes depending on internet bandwidth    sudo chown -Rv islandora:islandora ISLE    cd /opt/ISLE", 
            "title": "Clone ISLE repository"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_local_setup_ubuntu/#next-steps", 
            "text": "Once this process has finished one chose to do one of the following:    Continue next steps with the  Test Site Guide - isle.localdomain    Continue next steps with  Migration Guide", 
            "title": "Next steps"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_remote_setup_ansible/", 
            "text": "Host Remote Setup Guide - Ansible\n\n\nTO DO\n\nModify for Remote settings Please\n\n\n\n\n\nEndusers now have the choice of using Ansible to deploy their Docker Host server instead of performing manual commands. The Ansible script and configuration files can be found in the root folder of the ISLE git repo in a directory named \nansible\n.\n\n\nAnsible is an free open source automation platform / tool which runs on Linux, Mac or BSD, doesn\u2019t use local or remote agents and is relatively easy to setup. Ansible can help with server configuration management, application deployment, task automation and IT orchestration (\nrunning tasks in sequence on several different servers or devices\n).\n\n\nIf you are not familiar with the Ansible, it is recommended to start with their documentation.\n\n\n\n\nAnsible website\n\n\nWhat is Ansible?\n\n\nAnsible Documentation\n\n\n\n\nPrerequisites / Assumptions\n\n\n\n\n\n\nFamiliarity or knowledge of Ansible\n\n\n\n\n\n\nAnsible control workstation, laptop or server that runs MacOs, BSD or Linux (Windows doesn't work yet for this) with the following:\n\n\n\n\nAnsible 2.2+\n (choice of \ninstall methods\n)\n\n\nopenssh\n (2.2.x+)\n\n\ngit\n (2.15.1+)\n\n\npython\n (2.7+)\n\n\n\n\nThe \nISLE project repository\n cloned to an appropriate location.\n\n\n\n\n\n\nA previously created ISLE Host Server running either of these operating systems:\n\n\n\n\nUbuntu 16.04 LTS\n\n\n\n\nCentOS 7   \n\n\n\n\n\n\nAn account with ssh access to the ISLE Host Server\n\n\n\n\n\n\nAn account with passwordless sudo access on the ISLE Host Server\n\n\n\n\n\n\nThe IP of the ISLE Host server\n\n\n\n\n\n\n\n\nAnsible Deploy Script Explanation\n\n\nWithin the \ndocker_install.yml\n Ansible playbook, there are the following roles which perform different actions or cause different events on the ISLE Host server.\n\n\n\n\n\n\n\n\nAnsible Role\n\n\nAction / Event\n\n\n\n\n\n\n\n\n\n\ndependencies\n\n\nInstalls software dependencies \n tools as described above\n\n\n\n\n\n\nusers_groups\n\n\nAdds users, groups and updates permissions as described above\n\n\n\n\n\n\ndocker\n\n\nInstalls Docker\n\n\n\n\n\n\ndocker_compose\n\n\nInstalls Docker Compose\n\n\n\n\n\n\ngit_clone\n\n\nClones the current ISLE git repository to \n/opt/ISLE\n\n\n\n\n\n\ndocker_images\n\n\nPulls down the latest ISLE Docker Images from Dockerhub.com\n\n\n\n\n\n\n\n\nInstalls software dependencies \n tools including:\n\n\nThe Ansible script will deploy the following to the ISLE Host server:\n\n\n\n\n\n\n\n\nUbuntu\n\n\nCentOS\n\n\n\n\n\n\n\n\n\n\nsoftware-properties-common\n\n\nlibselinux-python\n\n\n\n\n\n\npython-software-properties\n\n\nlibsemanage-python\n\n\n\n\n\n\n--\n\n\nyum-utils\n\n\n\n\n\n\nntp\n\n\nntp\n\n\n\n\n\n\nopenssh-client\n\n\nopenssh-clients\n\n\n\n\n\n\nrsync\n\n\nrsync\n\n\n\n\n\n\ncurl\n\n\ncurl\n\n\n\n\n\n\nwget\n\n\nwget\n\n\n\n\n\n\ngit\n\n\ngit\n\n\n\n\n\n\nzip\n\n\nzip\n\n\n\n\n\n\nunzip\n\n\nunzip\n\n\n\n\n\n\nvim\n\n\nvim\n\n\n\n\n\n\nnano\n\n\nnano\n\n\n\n\n\n\nemacs24-nox\n\n\nemacs\n\n\n\n\n\n\nhtop\n\n\nhtop\n\n\n\n\n\n\napt-transport-https\n\n\n--\n\n\n\n\n\n\nca-certificates\n\n\n--\n\n\n\n\n\n\n\n\nMakes ISLE Host service changes\n\n\nPlease Note:\n \nAny of these services can be re-enabled post installation see appropriate documentation for opening ports on firewalls etc.\n\n\n\n\n\n\n\n\nUbuntu\n\n\nCentOS\n\n\n\n\n\n\n\n\n\n\nenables ntp service\n\n\nenables ntp service\n\n\n\n\n\n\ndisables ufw\n\n\ndisables iptables\n\n\n\n\n\n\n--\n\n\nsets selinux to permissive\n\n\n\n\n\n\n\n\nAdds users, groups and updates permissions\n\n\n\n\nCreates the \nislandora\n user\n\n\nAlong with an appropriate password\n\n\ngenerates a ssh key\n\n\nbestows sudo password-less access\n\n\n\n\nGives the \nislandora\n user the ability to run Docker \n Docker Compose by adding the account to the Docker group.  \n\n\n\n\n\n\nDisables \nroot\n user access via ssh\n\n\n\n\nDisables use of passwords with ssh.\n\n\nkey based access only to the ISLE Host server\n\n\n\n\nInstalls additional software\n\n\n\n\n\n\nDocker\n\n\n\n\n\n\nDocker Compose\n\n\n\n\n\n\nGit clones the ISLE repo to \n/opt/ISLE\n\n\n\n\n\n\nPulls down the most recent ISLE images\n\n\n\n\n\n\nAnsible script directory structure\n\n\nansible\n\u251c\u2500\u2500 docker_install.yml\n\u251c\u2500\u2500 host_vars\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 isle-prod-project.institution.yml\n\u251c\u2500\u2500 inventory\n\u2514\u2500\u2500 roles\n    \u251c\u2500\u2500 dependencies\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 ubuntu.yml\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 main.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 centos.yml\n    \u251c\u2500\u2500 docker\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 install.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 main.yml\n    \u251c\u2500\u2500 docker_compose\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 install.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 main.yml\n    \u251c\u2500\u2500 docker_images\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 images_pull.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 main.yml\n    \u251c\u2500\u2500 git_clone\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 git_clone.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 main.yml\n    \u2514\u2500\u2500 users_groups\n        \u251c\u2500\u2500 files\n        \u2502\u00a0\u00a0 \u2514\u2500\u2500 islandora\n        \u2514\u2500\u2500 tasks\n            \u251c\u2500\u2500 groups.yml\n            \u251c\u2500\u2500 main.yml\n            \u251c\u2500\u2500 secure.yml\n            \u251c\u2500\u2500 ssh.yml\n            \u2514\u2500\u2500 users.yml\n\n\n\n\nConfigure Ansible Script to deploy to ISLE Host\n\n\nTo configure the Ansible script to deploy to one's institutional ISLE Host Server, please review and edit the following files within the \nansible\n directory.\n\n\n\n\nansible/docker_install.yml\n\n\nansible/inventory\n\n\nansible/host_vars/isle-prod-project.institution.yml\n\n\n\n\nBasically wherever \nisle-prod-project.institution\n appears as a value in these three files, please replace with the appropriate ISLE Host server fully qualified domain name (\nfqdn\n) e.g. \nyourislesite.institution.com\n\n\nOne can open up and edit all files in a text editor e.g. Atom, Textedit, Textwrangler etc.\n\n\nansible/docker_install.yml\n\n\nThis is the Ansible playbook necessary to deploy software to the ISLE host server.\n\n\n\n\nAt the top of the file remove \nisle-prod-project.institution\n and replace with the appropriate \nfqdn\n.  \n\n\n\n\nansible/inventory.yml\n\n\nThis is the possible list of server(s) to deploy to using Ansible and its associated playbook(s).\n\n\nPlease Note:\n These instructions below are repeated within the file itself.\n\n\n\n\n\n\nLine 7: remove \nisle-prod-project.institution\n from in between the brackets and replace with the appropriate \nfqdn\n\n\n\n\n\n\nLine 8: Add the appropriate ISLE Host server user account that has \nsudo\n passwordless permissions to the end of \nansible_ssh_user=\n\n\nExample\n: \nansible_ssh_user=janesmith\n\n\n\n\n\n\nLine 8: Add the appropriate path to this ISLE Host Server user accounts public ssh key to the end of \nansible_ssh_private_key_file=\n\n\n\n\n\n\nExample\n of inventory using settings for local Ansible deploy laptop:\n\n\n\n\n\n\nansible_ssh_private_key_file=/home/janesmith/.ssh/id_rsa.pub\n\n\n\n\nPlease Note:\n This key is typically found on the local control (Ansible deploy laptop / workstation) system and should have been previously copied to the appropriate ISLE Host server user account's \n/home/islehostserver_user/.ssh/authorized_keys\n file.\n\n\n\n\nFinal Example\n end result for inventory file with all settings above\n\n\n\n\n[yourislesite.institution.com]   \nyourislesite.institution.com ansible_connection=ssh ansible_ssh_user=janesmith ansible_ssh_private_key_file=/home/janesmith/.ssh/id_rsa.pub\n\n\n\n\nansible/isle-prod-project.institution.yml\n\n\n\n\n\n\nCopy this file and rename the copy to with the appropriate \nfqdn\n\n\n\n\n\n\nExample\n of how \nhost_vars\n directory should now contain two files:  \n\n\n\n\n\n\nansible\n\u251c\u2500\u2500 docker_install.yml\n\u251c\u2500\u2500 host_vars\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 isle-prod-project.institution.yml\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 yourislesite.institution.com.yml\n\u251c\u2500\u2500 inventory\n\u2514\u2500\u2500 roles\n\n\n\n\n\n\n\n\nEdit the following lines within the newly created file i.e. \nyourislesite.institution.com.yml\n and remove the comments (#) as asked\n\n\n\n\n\n\nPlease Note:\n \nThe \nfqdn\n in the \ninventory\n file should match this filename as well.\n\n\n\n\n\n\nExamples ONLY\n (\nDo not enter these literal values\n)  \n\n\n\n\n\n\nLine 9: \nansible_ssh_host: 192.168.1.16\n\n\n\n\nThis is the IP address of the ISLE Host server\n\n\n\n\n\n\n\n\nLine 10: \nansible_ssh_user: janesmith\n  \n\n\n\n\nThis is the appropriate ISLE Host server user account that has \nsudo\n passwordless permissions.\n\n\n\n\n\n\n\n\nLine 15: \npub_locale: /home/janesmith/.ssh/id_rsa.pub\n\n\n\n\nThis is the key found on the local control (Ansible deploy laptop / workstation) system which has been previously copied to the appropriate ISLE Host server user account's \n/home/islehostserver_user/.ssh/authorized_keys\n file.\n\n\n\n\n\n\n\n\n\n\nAnsible commands to test connection\n\n\n\n\nTest if the Ansible control laptop / workstation can connect to the ISLE Host server by running these commands. On the local Ansible control laptop / workstation, open a terminal window and enter the following:\n\n\n\n\ncd /path/to/ISLE/repo\n\nansible -i inventory isle-host-server -m ping\n\n\n\n\n\n\nExample\n output of above command (\nIGNORE THE WARNING\n)\n\n\n\n\n[WARNING]: Found both group and host with same name: isle-host-server   \n\nisle-host-server | SUCCESS =\n {\n     \nchanged\n: false,\n     \nping\n: \npong\n\n   }\n\n\n\n\nPlease Note:\n \nIf SUCCESS doesn't appear as a value or if the wording of the prompt is in RED with \"host doesn't exist ...\", review all steps above and check the settings. Do not advance until the \nExample\n output above matches.\n  \n\n\nAnsible commands for deploy\n\n\n\n\n\n\nTo deploy to the ISLE Host Server, run this command.\n\n\nansible-playbook -i inventory docker_install.yml\n\n\n\n\n\n\nAnsible will start displaying output within the terminal. If any turn red and the script terminates, please review the above settings and connectivity to the server. Attempt to rerun the script.\n\n\nQC Review checklist\n\n\nTo ensure a successful deploy to the ISLE Server, please review the following to ensure that the deploy to the Islandora Host server was successful.\n\n\nOpen a terminal window on the Ansible control laptop /workstation and \nssh\n into the Islandora Host server using the appropriate enduser account setup prior to the deploy.\n\n\nExample\n:\n\n\nssh enduser@isle-prod-project.institution\n\n\n\n\nDocker\n\n\n\n\n\n\nTo check where Docker has been installed to, enter:  \n\n\nwhich docker\n    \n\n\nExample\n output:      \n\n\n/usr/bin/docker\n\n\n\n\n\n\nTo check which version of Docker has been installed, enter:\n\n\ndocker --version\n\n\nExample\n output:\n\n\nDocker version 17.12.0-ce, build c97c6d6\n\n\n\n\n\n\nTo check if Docker is running, enter:\n\n\nservice docker status\n   \n\n\nExample\n output:\n\n\n\n\n\n\nRedirecting to /bin/systemctl status docker.service\n\u25cf docker.service - Docker Application Container Engine\n  Loaded: loaded (/usr/lib/systemd/system/docker.service; enabled; vendor preset: disabled)\n  Active: active (running) since Thu 2018-01-18 14:36:55 EST; 1 weeks 4 days ago\n    Docs: https://docs.docker.com\nMain PID: 23066 (dockerd)\n  Memory: 55.3M\n....\n\n\n\n\n\n\n\n\nTo check if the ISLE images have been downloaded on the ISLE Host server, enter:\n\n\ndocker image ls\n\n\nExample\n output:  \n\n\n\n\n\n\nREPOSITORY                         TAG                 IMAGE ID            CREATED             SIZE\nislandoracollabgroup/isle-fedora   latest              6e2749ca2c2f        2 weeks ago         2.43GB\nislandoracollabgroup/isle-apache   latest              82fe4ae16932        2 weeks ago         2.18GB\nislandoracollabgroup/isle-solr     latest              7fba26c10433        2 weeks ago         784MB\nislandoracollabgroup/isle-mysql    latest              f34162f1e0f8        2 weeks ago         299MB\n\n\n\n\nDocker Compose\n\n\n\n\n\n\nTo check where Docker-compose has been installed to, enter:  \n\n\nwhich docker-compose\n\n\nExample\n output:\n\n\n/usr/local/bin/docker-compose\n\n\n\n\n\n\nTo check which version of Docker-compose has been installed, enter:\n\n\ndocker-compose -version\n\n\nExample\n output:\n\n\ndocker-compose version 1.17.1, build 6d101fb\n\n\n\n\n\n\nIslandora user\n\n\n\n\n\n\nTo check if the \nislandora\n user has been created, enter:\n\n\ncat /etc/passwd\n  \n\n\nExample\n output:\n\n\nislandora:x:1002:1002::/home/islandora:/bin/bash\n\n\n\n\n\n\nISLE Project directory\n\n\n\n\n\n\nTo check if the ISLE project git repo has been cloned to \n/opt/ISLE\n, enter:\n\n\nls -lh /opt/ISLE\n\n\nExample\n output:\n\n\n\n\n\n\ntotal 24K\ndrwxr-xr-x. 3 islandora islandora  110 Jan 17 09:17 apache\ndrwxr-xr-x. 5 islandora islandora   84 Jan 23 13:44 config\n-rwxr-xr-x. 1 islandora islandora 2.0K Jan 18 16:58 docker-compose.yml\ndrwxr-xr-x. 7 islandora islandora  143 Jan 17 09:17 docs\ndrwxr-xr-x. 7 islandora islandora  102 Jan 17 09:17 fedora\n-rwxr-xr-x. 1 islandora islandora  12K Jan 17 09:17 mkdocs.yml\ndrwxr-xr-x. 3 islandora islandora   54 Jan 17 09:17 mysql\n-rwxr-xr-x. 1 islandora islandora 4.1K Jan 17 09:17 README.md\ndrwxr-xr-x. 4 islandora islandora   50 Jan 17 09:17 solr\n\n\n\n\n\n\nPost Server Deploy or next steps\n\n\nOnce this script has finished one can:\n\n\n\n\n\n\nAdd any appropriate public ssh keys to \n/home/islandora/.ssh/authorized_keys\n prior to attempting to ssh to the Islandora Host server as the \nislandora\n user.\n\n\n\n\n\n\nAdd the \n/home/islandora/.ssh/id_rsa.pub\n key to any git repository contained within the Migration Guide. (Additional instructions appear in that guide if this process is unfamiliar.)\n\n\n\n\n\n\nContinue next steps with the \nTest Site Guide - isle.localdomain\n\n\n\n\n\n\nContinue next steps with \nMigration Guide", 
            "title": "1.4. -Testing - Host Remote Setup Guide - Ansible"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_remote_setup_ansible/#host-remote-setup-guide-ansible", 
            "text": "TO DO\n\nModify for Remote settings Please  Endusers now have the choice of using Ansible to deploy their Docker Host server instead of performing manual commands. The Ansible script and configuration files can be found in the root folder of the ISLE git repo in a directory named  ansible .  Ansible is an free open source automation platform / tool which runs on Linux, Mac or BSD, doesn\u2019t use local or remote agents and is relatively easy to setup. Ansible can help with server configuration management, application deployment, task automation and IT orchestration ( running tasks in sequence on several different servers or devices ).  If you are not familiar with the Ansible, it is recommended to start with their documentation.   Ansible website  What is Ansible?  Ansible Documentation", 
            "title": "Host Remote Setup Guide - Ansible"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_remote_setup_ansible/#prerequisites-assumptions", 
            "text": "Familiarity or knowledge of Ansible    Ansible control workstation, laptop or server that runs MacOs, BSD or Linux (Windows doesn't work yet for this) with the following:   Ansible 2.2+  (choice of  install methods )  openssh  (2.2.x+)  git  (2.15.1+)  python  (2.7+)   The  ISLE project repository  cloned to an appropriate location.    A previously created ISLE Host Server running either of these operating systems:   Ubuntu 16.04 LTS   CentOS 7       An account with ssh access to the ISLE Host Server    An account with passwordless sudo access on the ISLE Host Server    The IP of the ISLE Host server", 
            "title": "Prerequisites / Assumptions"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_remote_setup_ansible/#ansible-deploy-script-explanation", 
            "text": "Within the  docker_install.yml  Ansible playbook, there are the following roles which perform different actions or cause different events on the ISLE Host server.     Ansible Role  Action / Event      dependencies  Installs software dependencies   tools as described above    users_groups  Adds users, groups and updates permissions as described above    docker  Installs Docker    docker_compose  Installs Docker Compose    git_clone  Clones the current ISLE git repository to  /opt/ISLE    docker_images  Pulls down the latest ISLE Docker Images from Dockerhub.com", 
            "title": "Ansible Deploy Script Explanation"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_remote_setup_ansible/#installs-software-dependencies-tools-including", 
            "text": "The Ansible script will deploy the following to the ISLE Host server:     Ubuntu  CentOS      software-properties-common  libselinux-python    python-software-properties  libsemanage-python    --  yum-utils    ntp  ntp    openssh-client  openssh-clients    rsync  rsync    curl  curl    wget  wget    git  git    zip  zip    unzip  unzip    vim  vim    nano  nano    emacs24-nox  emacs    htop  htop    apt-transport-https  --    ca-certificates  --", 
            "title": "Installs software dependencies &amp; tools including:"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_remote_setup_ansible/#makes-isle-host-service-changes", 
            "text": "Please Note:   Any of these services can be re-enabled post installation see appropriate documentation for opening ports on firewalls etc.     Ubuntu  CentOS      enables ntp service  enables ntp service    disables ufw  disables iptables    --  sets selinux to permissive", 
            "title": "Makes ISLE Host service changes"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_remote_setup_ansible/#adds-users-groups-and-updates-permissions", 
            "text": "Creates the  islandora  user  Along with an appropriate password  generates a ssh key  bestows sudo password-less access   Gives the  islandora  user the ability to run Docker   Docker Compose by adding the account to the Docker group.      Disables  root  user access via ssh   Disables use of passwords with ssh.  key based access only to the ISLE Host server", 
            "title": "Adds users, groups and updates permissions"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_remote_setup_ansible/#installs-additional-software", 
            "text": "Docker    Docker Compose    Git clones the ISLE repo to  /opt/ISLE    Pulls down the most recent ISLE images", 
            "title": "Installs additional software"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_remote_setup_ansible/#ansible-script-directory-structure", 
            "text": "ansible\n\u251c\u2500\u2500 docker_install.yml\n\u251c\u2500\u2500 host_vars\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 isle-prod-project.institution.yml\n\u251c\u2500\u2500 inventory\n\u2514\u2500\u2500 roles\n    \u251c\u2500\u2500 dependencies\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 ubuntu.yml\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 main.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 centos.yml\n    \u251c\u2500\u2500 docker\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 install.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 main.yml\n    \u251c\u2500\u2500 docker_compose\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 install.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 main.yml\n    \u251c\u2500\u2500 docker_images\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 images_pull.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 main.yml\n    \u251c\u2500\u2500 git_clone\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tasks\n    \u2502\u00a0\u00a0     \u251c\u2500\u2500 git_clone.yml\n    \u2502\u00a0\u00a0     \u2514\u2500\u2500 main.yml\n    \u2514\u2500\u2500 users_groups\n        \u251c\u2500\u2500 files\n        \u2502\u00a0\u00a0 \u2514\u2500\u2500 islandora\n        \u2514\u2500\u2500 tasks\n            \u251c\u2500\u2500 groups.yml\n            \u251c\u2500\u2500 main.yml\n            \u251c\u2500\u2500 secure.yml\n            \u251c\u2500\u2500 ssh.yml\n            \u2514\u2500\u2500 users.yml", 
            "title": "Ansible script directory structure"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_remote_setup_ansible/#configure-ansible-script-to-deploy-to-isle-host", 
            "text": "To configure the Ansible script to deploy to one's institutional ISLE Host Server, please review and edit the following files within the  ansible  directory.   ansible/docker_install.yml  ansible/inventory  ansible/host_vars/isle-prod-project.institution.yml   Basically wherever  isle-prod-project.institution  appears as a value in these three files, please replace with the appropriate ISLE Host server fully qualified domain name ( fqdn ) e.g.  yourislesite.institution.com  One can open up and edit all files in a text editor e.g. Atom, Textedit, Textwrangler etc.", 
            "title": "Configure Ansible Script to deploy to ISLE Host"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_remote_setup_ansible/#ansibledocker_installyml", 
            "text": "This is the Ansible playbook necessary to deploy software to the ISLE host server.   At the top of the file remove  isle-prod-project.institution  and replace with the appropriate  fqdn .", 
            "title": "ansible/docker_install.yml"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_remote_setup_ansible/#ansibleinventoryyml", 
            "text": "This is the possible list of server(s) to deploy to using Ansible and its associated playbook(s).  Please Note:  These instructions below are repeated within the file itself.    Line 7: remove  isle-prod-project.institution  from in between the brackets and replace with the appropriate  fqdn    Line 8: Add the appropriate ISLE Host server user account that has  sudo  passwordless permissions to the end of  ansible_ssh_user=  Example :  ansible_ssh_user=janesmith    Line 8: Add the appropriate path to this ISLE Host Server user accounts public ssh key to the end of  ansible_ssh_private_key_file=    Example  of inventory using settings for local Ansible deploy laptop:    ansible_ssh_private_key_file=/home/janesmith/.ssh/id_rsa.pub  Please Note:  This key is typically found on the local control (Ansible deploy laptop / workstation) system and should have been previously copied to the appropriate ISLE Host server user account's  /home/islehostserver_user/.ssh/authorized_keys  file.   Final Example  end result for inventory file with all settings above   [yourislesite.institution.com]   \nyourislesite.institution.com ansible_connection=ssh ansible_ssh_user=janesmith ansible_ssh_private_key_file=/home/janesmith/.ssh/id_rsa.pub", 
            "title": "ansible/inventory.yml"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_remote_setup_ansible/#ansibleisle-prod-projectinstitutionyml", 
            "text": "Copy this file and rename the copy to with the appropriate  fqdn    Example  of how  host_vars  directory should now contain two files:      ansible\n\u251c\u2500\u2500 docker_install.yml\n\u251c\u2500\u2500 host_vars\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 isle-prod-project.institution.yml\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 yourislesite.institution.com.yml\n\u251c\u2500\u2500 inventory\n\u2514\u2500\u2500 roles    Edit the following lines within the newly created file i.e.  yourislesite.institution.com.yml  and remove the comments (#) as asked    Please Note:   The  fqdn  in the  inventory  file should match this filename as well.    Examples ONLY  ( Do not enter these literal values )      Line 9:  ansible_ssh_host: 192.168.1.16   This is the IP address of the ISLE Host server     Line 10:  ansible_ssh_user: janesmith      This is the appropriate ISLE Host server user account that has  sudo  passwordless permissions.     Line 15:  pub_locale: /home/janesmith/.ssh/id_rsa.pub   This is the key found on the local control (Ansible deploy laptop / workstation) system which has been previously copied to the appropriate ISLE Host server user account's  /home/islehostserver_user/.ssh/authorized_keys  file.", 
            "title": "ansible/isle-prod-project.institution.yml"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_remote_setup_ansible/#ansible-commands-to-test-connection", 
            "text": "Test if the Ansible control laptop / workstation can connect to the ISLE Host server by running these commands. On the local Ansible control laptop / workstation, open a terminal window and enter the following:   cd /path/to/ISLE/repo\n\nansible -i inventory isle-host-server -m ping   Example  output of above command ( IGNORE THE WARNING )   [WARNING]: Found both group and host with same name: isle-host-server   \n\nisle-host-server | SUCCESS =  {\n      changed : false,\n      ping :  pong \n   }  Please Note:   If SUCCESS doesn't appear as a value or if the wording of the prompt is in RED with \"host doesn't exist ...\", review all steps above and check the settings. Do not advance until the  Example  output above matches.", 
            "title": "Ansible commands to test connection"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_remote_setup_ansible/#ansible-commands-for-deploy", 
            "text": "To deploy to the ISLE Host Server, run this command.  ansible-playbook -i inventory docker_install.yml    Ansible will start displaying output within the terminal. If any turn red and the script terminates, please review the above settings and connectivity to the server. Attempt to rerun the script.", 
            "title": "Ansible commands for deploy"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_remote_setup_ansible/#qc-review-checklist", 
            "text": "To ensure a successful deploy to the ISLE Server, please review the following to ensure that the deploy to the Islandora Host server was successful.  Open a terminal window on the Ansible control laptop /workstation and  ssh  into the Islandora Host server using the appropriate enduser account setup prior to the deploy.  Example :  ssh enduser@isle-prod-project.institution", 
            "title": "QC Review checklist"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_remote_setup_ansible/#docker", 
            "text": "To check where Docker has been installed to, enter:    which docker       Example  output:        /usr/bin/docker    To check which version of Docker has been installed, enter:  docker --version  Example  output:  Docker version 17.12.0-ce, build c97c6d6    To check if Docker is running, enter:  service docker status      Example  output:    Redirecting to /bin/systemctl status docker.service\n\u25cf docker.service - Docker Application Container Engine\n  Loaded: loaded (/usr/lib/systemd/system/docker.service; enabled; vendor preset: disabled)\n  Active: active (running) since Thu 2018-01-18 14:36:55 EST; 1 weeks 4 days ago\n    Docs: https://docs.docker.com\nMain PID: 23066 (dockerd)\n  Memory: 55.3M\n....    To check if the ISLE images have been downloaded on the ISLE Host server, enter:  docker image ls  Example  output:      REPOSITORY                         TAG                 IMAGE ID            CREATED             SIZE\nislandoracollabgroup/isle-fedora   latest              6e2749ca2c2f        2 weeks ago         2.43GB\nislandoracollabgroup/isle-apache   latest              82fe4ae16932        2 weeks ago         2.18GB\nislandoracollabgroup/isle-solr     latest              7fba26c10433        2 weeks ago         784MB\nislandoracollabgroup/isle-mysql    latest              f34162f1e0f8        2 weeks ago         299MB", 
            "title": "Docker"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_remote_setup_ansible/#docker-compose", 
            "text": "To check where Docker-compose has been installed to, enter:    which docker-compose  Example  output:  /usr/local/bin/docker-compose    To check which version of Docker-compose has been installed, enter:  docker-compose -version  Example  output:  docker-compose version 1.17.1, build 6d101fb", 
            "title": "Docker Compose"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_remote_setup_ansible/#islandora-user", 
            "text": "To check if the  islandora  user has been created, enter:  cat /etc/passwd     Example  output:  islandora:x:1002:1002::/home/islandora:/bin/bash", 
            "title": "Islandora user"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_remote_setup_ansible/#isle-project-directory", 
            "text": "To check if the ISLE project git repo has been cloned to  /opt/ISLE , enter:  ls -lh /opt/ISLE  Example  output:    total 24K\ndrwxr-xr-x. 3 islandora islandora  110 Jan 17 09:17 apache\ndrwxr-xr-x. 5 islandora islandora   84 Jan 23 13:44 config\n-rwxr-xr-x. 1 islandora islandora 2.0K Jan 18 16:58 docker-compose.yml\ndrwxr-xr-x. 7 islandora islandora  143 Jan 17 09:17 docs\ndrwxr-xr-x. 7 islandora islandora  102 Jan 17 09:17 fedora\n-rwxr-xr-x. 1 islandora islandora  12K Jan 17 09:17 mkdocs.yml\ndrwxr-xr-x. 3 islandora islandora   54 Jan 17 09:17 mysql\n-rwxr-xr-x. 1 islandora islandora 4.1K Jan 17 09:17 README.md\ndrwxr-xr-x. 4 islandora islandora   50 Jan 17 09:17 solr", 
            "title": "ISLE Project directory"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_remote_setup_ansible/#post-server-deploy-or-next-steps", 
            "text": "Once this script has finished one can:    Add any appropriate public ssh keys to  /home/islandora/.ssh/authorized_keys  prior to attempting to ssh to the Islandora Host server as the  islandora  user.    Add the  /home/islandora/.ssh/id_rsa.pub  key to any git repository contained within the Migration Guide. (Additional instructions appear in that guide if this process is unfamiliar.)    Continue next steps with the  Test Site Guide - isle.localdomain    Continue next steps with  Migration Guide", 
            "title": "Post Server Deploy or next steps"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_remote_setup_centos/", 
            "text": "Host Remote Setup Guide - CentOS\n\n\nTO DO\n\nModify for Remote settings Please\n\n\n\n\n\n\n\nThis alpha build uses \nisle.localdomain\n as the test domain along with the Docker Compose service names e.g. \nmysql, fedora, apache\n etc.\n\n\nIf your institution's server uses real DNS, then skip the next step. If not, please proceed with the following:\n\n\nTo ensure this domain resolves properly, one will need to edit the servers and/or their own local \n/etc/hosts\n file.\n\n\n\n\nOpen up a terminal and enter: \nsudo vi /etc/hosts\n\n\n\n\n\n\nAdd one or more of the following: (\nExamples ONLY\n)\n\n\n\n\n\n\nUbuntu 16.04 LTS Host Server (or VM)\n\n\n127.0.0.1       localhost isle.localdomain fedora apache fedora.isle.localdomain apache.isle.localdomain\n\n\n\n\n\n\nEnduser local laptop\n \n127.0.0.1 localhost   \n 192.156.123.26       isle.localdomain fedora apache fedora.isle.localdomain apache.isle.localdomain\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInstall / run on CentOS 7 server\n\n\n\n\nVirtualbox Virtual Machine (VM)  \n\n\na Vagrant image (recommend using \nbento/centos-7.2\n)  \n\n\nCloud based server e.g. Digital Ocean or Amazon Web Services  \n\n\nPost-installation, add the appropriate ssh keys to the root user's \n.ssh/authorized_keys\n file.  \n\n\n\n\nDocker setup for CentOS 7\n\n\n\n\nOpen a terminal, ssh to the CentOS server as root and install the following:  \n\n\nyum install openssl git htop ntp wget curl\n\n\n\n\n\n\n\n\nInstall Docker on CentOS 7 (as root user)\n\n\n\n\nwget -qO- https://get.docker.com/ | sh\n\n\n\n\nCreate islandora user (as root)\n\n\n\n\n\n\nadduser islandora\n\n\n\n\n\n\npasswd islandora\n\n\n\n\n\n\nisle2017\n\n\n\n\n\n\necho \"islandora ALL=(ALL) NOPASSWD: ALL\" \n /etc/sudoers.d/islandora\n\n\n\n\n\n\nCreate Docker group \ngroupadd docker\n  \n\n\n\n\n\n\nAdd islandora user to docker group \nusermod -aG docker islandora\n  \n\n\n\n\n\n\nAdd islandora user to wheel group \nsudo usermod -aG wheel islandora\n\n\n\n\n\n\nCreate a ssh key for the islandora user\n\n\n\n\n\n\nmkdir /home/islandora/.ssh\n  \n\n\n\n\n\n\nchmod -Rv 700 /home/islandora/.ssh\n  \n\n\n\n\n\n\ncd /home/islandora/.ssh\n  \n\n\n\n\n\n\nssh-keygen\n  \n\n\n\n\nFollow the prompts to save these files to \n/home/islandora/.ssh\n\n\n\n\n\n\n\n\nCreate an \nauthorized_keys\n file in \n/home/islandora/.ssh\nusing one of the following tools: \nnano\n, \npico\n, \nvi\n or \nemacs\n\n\n\n\n\n\nExample:\n     \nvi /home/islandora/.ssh/authorized_keys\n\n\n\n\n\n\nCopy in the existing ssh key from the enduser's laptop /workstation. This will allow key based ssh access for the enduser.\n\n\n\n\n\n\ncat /Users/endusername/.ssh/id_rsa.pub\n\n\n\n\n\n\nCopy and paste this value exactly into the \n/home/islandora/.ssh/authorized_keys\n file.\n\n\n\n\n\n\n\n\n\n\nExit out of the ssh session from the host server as the root user \nexit\n\n\n\n\n\n\nssh back in as \nislandora\n\n\n\n\n\n\nEnable the Docker service to start on host server boot\n\n\n\n\nsudo systemctl enable docker.service\n\n\n\n\n\n\n\n\nStart the Docker service\n\n\n\n\nsudo systemctl start docker.service\n\n\n\n\n\n\n\n\nInstall Docker-Compose (version 1.17.1 as of 11/16/2017) as islandora-user on CentOS 7\n\n\n\n\n\n\nOpen a terminal and ssh back into the CentOS Host Server/VM as the \nislandora\n user and perform the following:\n\n\n\n\n\n\nAdd the CENTOS epel-release package repository\n\n\n\n\nsudo yum install epel-release\n\n\n\n\n\n\n\n\nInstall Python Pip (package manager for Python Scripting Language)\n\n\n\n\nsudo yum install -y python-pip\n\n\n\n\n\n\n\n\nUpgrade Python to latest version\n\n\n\n\nsudo yum upgrade python*\n\n\n\n\n\n\n\n\nUpgrade Python Pip\n\n\n\n\nsudo pip install --upgrade pip\n\n\n\n\n\n\n\n\nInstall Docker compose\n\n\n\n\nsudo pip install docker-compose\n\n\n\n\n\n\n\n\nClone ISLE repository\n\n\n\n\n\n\nPlease note in some Linux Distributions, one might need to create the \n/opt\n directory (optional)  \n\n\n\n\n\n\nOne can \nls -lha /\n to see if an \n/opt\n directory exists  \n\n\n\n\n\n\nIf missing, \nsudo mkdir /opt\n  \n\n\n\n\n\n\nIf not missing, proceed to next step.  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncd /opt\n\n\n\n\n\n\nsudo git clone https://github.com/Islandora-Collaboration-Group/ISLE.git\n\n\n\n\n\n\nThis process will take 1 - 3 minutes depending on internet bandwidth\n\n\n\n\n\n\nsudo chown -Rv islandora:islandora ISLE\n\n\n\n\n\n\ncd /opt/ISLE\n\n\n\n\n\n\nNext steps\n\n\nOnce this process has finished one chose to do one of the following:\n\n\n\n\nContinue next steps with the \nTest Site Guide - isle.localdomain\n\n\n\n\n* Continue next steps with \nMigration Guide", 
            "title": "1.4. -Testing - Host Remote Setup Guide - Centos"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_remote_setup_centos/#host-remote-setup-guide-centos", 
            "text": "TO DO\n\nModify for Remote settings Please   This alpha build uses  isle.localdomain  as the test domain along with the Docker Compose service names e.g.  mysql, fedora, apache  etc.  If your institution's server uses real DNS, then skip the next step. If not, please proceed with the following:  To ensure this domain resolves properly, one will need to edit the servers and/or their own local  /etc/hosts  file.   Open up a terminal and enter:  sudo vi /etc/hosts    Add one or more of the following: ( Examples ONLY )    Ubuntu 16.04 LTS Host Server (or VM)  127.0.0.1       localhost isle.localdomain fedora apache fedora.isle.localdomain apache.isle.localdomain    Enduser local laptop\n  127.0.0.1 localhost   \n 192.156.123.26       isle.localdomain fedora apache fedora.isle.localdomain apache.isle.localdomain", 
            "title": "Host Remote Setup Guide - CentOS"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_remote_setup_centos/#install-run-on-centos-7-server", 
            "text": "Virtualbox Virtual Machine (VM)    a Vagrant image (recommend using  bento/centos-7.2 )    Cloud based server e.g. Digital Ocean or Amazon Web Services    Post-installation, add the appropriate ssh keys to the root user's  .ssh/authorized_keys  file.", 
            "title": "Install / run on CentOS 7 server"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_remote_setup_centos/#docker-setup-for-centos-7", 
            "text": "Open a terminal, ssh to the CentOS server as root and install the following:    yum install openssl git htop ntp wget curl", 
            "title": "Docker setup for CentOS 7"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_remote_setup_centos/#install-docker-on-centos-7-as-root-user", 
            "text": "wget -qO- https://get.docker.com/ | sh", 
            "title": "Install Docker on CentOS 7 (as root user)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_remote_setup_centos/#create-islandora-user-as-root", 
            "text": "adduser islandora    passwd islandora    isle2017    echo \"islandora ALL=(ALL) NOPASSWD: ALL\"   /etc/sudoers.d/islandora    Create Docker group  groupadd docker       Add islandora user to docker group  usermod -aG docker islandora       Add islandora user to wheel group  sudo usermod -aG wheel islandora    Create a ssh key for the islandora user    mkdir /home/islandora/.ssh       chmod -Rv 700 /home/islandora/.ssh       cd /home/islandora/.ssh       ssh-keygen      Follow the prompts to save these files to  /home/islandora/.ssh     Create an  authorized_keys  file in  /home/islandora/.ssh using one of the following tools:  nano ,  pico ,  vi  or  emacs    Example:\n      vi /home/islandora/.ssh/authorized_keys    Copy in the existing ssh key from the enduser's laptop /workstation. This will allow key based ssh access for the enduser.    cat /Users/endusername/.ssh/id_rsa.pub    Copy and paste this value exactly into the  /home/islandora/.ssh/authorized_keys  file.      Exit out of the ssh session from the host server as the root user  exit    ssh back in as  islandora    Enable the Docker service to start on host server boot   sudo systemctl enable docker.service     Start the Docker service   sudo systemctl start docker.service", 
            "title": "Create islandora user (as root)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_remote_setup_centos/#install-docker-compose-version-1171-as-of-11162017-as-islandora-user-on-centos-7", 
            "text": "Open a terminal and ssh back into the CentOS Host Server/VM as the  islandora  user and perform the following:    Add the CENTOS epel-release package repository   sudo yum install epel-release     Install Python Pip (package manager for Python Scripting Language)   sudo yum install -y python-pip     Upgrade Python to latest version   sudo yum upgrade python*     Upgrade Python Pip   sudo pip install --upgrade pip     Install Docker compose   sudo pip install docker-compose", 
            "title": "Install Docker-Compose (version 1.17.1 as of 11/16/2017) as islandora-user on CentOS 7"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_remote_setup_centos/#clone-isle-repository", 
            "text": "Please note in some Linux Distributions, one might need to create the  /opt  directory (optional)      One can  ls -lha /  to see if an  /opt  directory exists      If missing,  sudo mkdir /opt       If not missing, proceed to next step.          cd /opt    sudo git clone https://github.com/Islandora-Collaboration-Group/ISLE.git    This process will take 1 - 3 minutes depending on internet bandwidth    sudo chown -Rv islandora:islandora ISLE    cd /opt/ISLE", 
            "title": "Clone ISLE repository"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_remote_setup_centos/#next-steps", 
            "text": "Once this process has finished one chose to do one of the following:   Continue next steps with the  Test Site Guide - isle.localdomain", 
            "title": "Next steps"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_remote_setup_centos/#continue-next-steps-with-migration-guide", 
            "text": "", 
            "title": "* Continue next steps with Migration Guide"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_remote_setup_ubuntu/", 
            "text": "Host Remote Setup Guide - Ubuntu\n\n\nTO DO\n\nModify for Remote settings Please\n\n\n\n\n\n\n\nThis alpha build uses \nisle.localdomain\n as the test domain along with the Docker Compose service names e.g. \nmysql, fedora, apache\n etc.\n\n\nIf your institution's server uses real DNS, then skip the next step. If not, please proceed with the following:\n\n\nTo ensure this domain resolves properly, one will need to edit the servers and/or their own local \n/etc/hosts\n file.\n\n\n\n\nOpen up a terminal and enter: \nsudo vi /etc/hosts\n\n\n\n\n\n\nAdd one or more of the following: (\nExamples ONLY\n)\n\n\n\n\n\n\nUbuntu 16.04 LTS Host Server (or VM)\n\n\n127.0.0.1       localhost isle.localdomain fedora apache fedora.isle.localdomain apache.isle.localdomain\n\n\n\n\n\n\nEnduser local laptop\n \n127.0.0.1 localhost   \n 192.156.123.26       isle.localdomain fedora apache fedora.isle.localdomain apache.isle.localdomain\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInstall / run on Ubuntu 16.04 LTS server\n\n\n\n\nVirtualbox Virtual Machine (VM)  \n\n\na Vagrant image (recommend using \nbento/ubuntu-16.04\n)  \n\n\nCloud based server e.g. Digital Ocean or Amazon Web Services  \n\n\nPost-installation, add the appropriate ssh keys to the root user's \n.ssh/authorized_keys\n file.  \n\n\n\n\nDocker setup for Ubuntu 16.04 LTS\n\n\n\n\n\n\nOpen a terminal, ssh to the Ubuntu server as root and install the following:\n\n\n\n\n\n\nIf you are not root, \nsudo -s\n\n\n\n\n\n\napt-get update\n  \n\n\n\n\n\n\napt-get install openssl git htop ntp curl\n  \n\n\n\n\n\n\n\n\n\n\nInstall Docker on Ubuntu 16.04 LTS\n\n\n\n\n\n\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\n  \n\n\n\n\n\n\nadd-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"\n  \n\n\n\n\n\n\napt-get update\n  \n\n\n\n\n\n\napt-get install -y docker-ce\n  \n\n\n\n\n\n\nCheck if running \nsystemctl status docker\n  \n\n\n\n\nYou may need to PRESS Shift-Z twice to exit out.\n\n\n\n\n\n\n\n\nCreate islandora user (as root)\n\n\n\n\n\n\nadduser islandora\n\n\n\n\n\n\npasswd islandora\n\n\n\n\n\n\nisle2017\n\n\n\n\n\n\necho \"islandora ALL=(ALL) NOPASSWD: ALL\" \n /etc/sudoers.d/islandora\n\n\n\n\n\n\nCreate Docker group \ngroupadd docker\n  \n\n\n\n\n\n\nAdd islandora user to docker group \nusermod -aG docker islandora\n  \n\n\n\n\n\n\nCreate a ssh key for the islandora user\n\n\n\n\n\n\nmkdir /home/islandora/.ssh\n  \n\n\n\n\n\n\nchmod -Rv 700 /home/islandora/.ssh\n  \n\n\n\n\n\n\ncd /home/islandora/.ssh\n  \n\n\n\n\n\n\nssh-keygen\n  \n\n\n\n\nFollow the prompts to save these files to \n/home/islandora/.ssh\n\n\n\n\n\n\n\n\nCreate an \nauthorized_keys\n file in \n/home/islandora/.ssh\nusing one of the following tools: \nnano\n, \npico\n, \nvi\n or \nemacs\n\n\n\n\n\n\nExample:\n     \nvi /home/islandora/.ssh/authorized_keys\n\n\n\n\n\n\nCopy in the existing ssh key from the enduser's laptop /workstation. This will allow key based ssh access for the enduser.\n\n\n\n\n\n\ncat /Users/endusername/.ssh/id_rsa.pub\n\n\n\n\n\n\nCopy and paste this value exactly into the \n/home/islandora/.ssh/authorized_keys\n file.\n\n\n\n\n\n\n\n\n\n\nExit out of the session as the root user.\n\n\n\n\nexit\n\n\nsu islandora\n  \n\n\n\n\n\n\n\n\nInstall Docker-Compose (version 1.17.1 as of 11/16/2017) as islandora-user on Ubuntu 16.04 LTS\n\n\n\n\n\n\ncd /home/islandora\n\n\n\n\n\n\nsudo curl -L https://github.com/docker/compose/releases/download/1.17.1/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose\n\n\n\n\n\n\nsudo chmod +x /usr/local/bin/docker-compose\n  \n\n\n\n\n\n\nClone ISLE repository\n\n\n\n\n\n\nPlease note in some Linux Distributions, one might need to create the \n/opt\n directory (optional)  \n\n\n\n\n\n\nOne can \nls -lha /\n to see if an \n/opt\n directory exists  \n\n\n\n\n\n\nIf missing, \nsudo mkdir /opt\n  \n\n\n\n\n\n\nIf not missing, proceed to next step.  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncd /opt\n\n\n\n\n\n\nsudo git clone https://github.com/Islandora-Collaboration-Group/ISLE.git\n\n\n\n\n\n\nThis process will take 1 - 3 minutes depending on internet bandwidth\n\n\n\n\n\n\nsudo chown -Rv islandora:islandora ISLE\n\n\n\n\n\n\ncd /opt/ISLE\n\n\n\n\n\n\nNext steps\n\n\nOnce this process has finished one chose to do one of the following:\n\n\n\n\n\n\nContinue next steps with the \nTest Site Guide - isle.localdomain\n\n\n\n\n\n\nContinue next steps with \nMigration Guide", 
            "title": "1.4. -Testing - Host Remote Setup Guide - Ubuntu"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_remote_setup_ubuntu/#host-remote-setup-guide-ubuntu", 
            "text": "TO DO\n\nModify for Remote settings Please   This alpha build uses  isle.localdomain  as the test domain along with the Docker Compose service names e.g.  mysql, fedora, apache  etc.  If your institution's server uses real DNS, then skip the next step. If not, please proceed with the following:  To ensure this domain resolves properly, one will need to edit the servers and/or their own local  /etc/hosts  file.   Open up a terminal and enter:  sudo vi /etc/hosts    Add one or more of the following: ( Examples ONLY )    Ubuntu 16.04 LTS Host Server (or VM)  127.0.0.1       localhost isle.localdomain fedora apache fedora.isle.localdomain apache.isle.localdomain    Enduser local laptop\n  127.0.0.1 localhost   \n 192.156.123.26       isle.localdomain fedora apache fedora.isle.localdomain apache.isle.localdomain", 
            "title": "Host Remote Setup Guide - Ubuntu"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_remote_setup_ubuntu/#install-run-on-ubuntu-1604-lts-server", 
            "text": "Virtualbox Virtual Machine (VM)    a Vagrant image (recommend using  bento/ubuntu-16.04 )    Cloud based server e.g. Digital Ocean or Amazon Web Services    Post-installation, add the appropriate ssh keys to the root user's  .ssh/authorized_keys  file.", 
            "title": "Install / run on Ubuntu 16.04 LTS server"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_remote_setup_ubuntu/#docker-setup-for-ubuntu-1604-lts", 
            "text": "Open a terminal, ssh to the Ubuntu server as root and install the following:    If you are not root,  sudo -s    apt-get update       apt-get install openssl git htop ntp curl", 
            "title": "Docker setup for Ubuntu 16.04 LTS"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_remote_setup_ubuntu/#install-docker-on-ubuntu-1604-lts", 
            "text": "curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -       add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\"       apt-get update       apt-get install -y docker-ce       Check if running  systemctl status docker      You may need to PRESS Shift-Z twice to exit out.", 
            "title": "Install Docker on Ubuntu 16.04 LTS"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_remote_setup_ubuntu/#create-islandora-user-as-root", 
            "text": "adduser islandora    passwd islandora    isle2017    echo \"islandora ALL=(ALL) NOPASSWD: ALL\"   /etc/sudoers.d/islandora    Create Docker group  groupadd docker       Add islandora user to docker group  usermod -aG docker islandora       Create a ssh key for the islandora user    mkdir /home/islandora/.ssh       chmod -Rv 700 /home/islandora/.ssh       cd /home/islandora/.ssh       ssh-keygen      Follow the prompts to save these files to  /home/islandora/.ssh     Create an  authorized_keys  file in  /home/islandora/.ssh using one of the following tools:  nano ,  pico ,  vi  or  emacs    Example:\n      vi /home/islandora/.ssh/authorized_keys    Copy in the existing ssh key from the enduser's laptop /workstation. This will allow key based ssh access for the enduser.    cat /Users/endusername/.ssh/id_rsa.pub    Copy and paste this value exactly into the  /home/islandora/.ssh/authorized_keys  file.      Exit out of the session as the root user.   exit  su islandora", 
            "title": "Create islandora user (as root)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_remote_setup_ubuntu/#install-docker-compose-version-1171-as-of-11162017-as-islandora-user-on-ubuntu-1604-lts", 
            "text": "cd /home/islandora    sudo curl -L https://github.com/docker/compose/releases/download/1.17.1/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose    sudo chmod +x /usr/local/bin/docker-compose", 
            "title": "Install Docker-Compose (version 1.17.1 as of 11/16/2017) as islandora-user on Ubuntu 16.04 LTS"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_remote_setup_ubuntu/#clone-isle-repository", 
            "text": "Please note in some Linux Distributions, one might need to create the  /opt  directory (optional)      One can  ls -lha /  to see if an  /opt  directory exists      If missing,  sudo mkdir /opt       If not missing, proceed to next step.          cd /opt    sudo git clone https://github.com/Islandora-Collaboration-Group/ISLE.git    This process will take 1 - 3 minutes depending on internet bandwidth    sudo chown -Rv islandora:islandora ISLE    cd /opt/ISLE", 
            "title": "Clone ISLE repository"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/host_remote_setup_ubuntu/#next-steps", 
            "text": "Once this process has finished one chose to do one of the following:    Continue next steps with the  Test Site Guide - isle.localdomain    Continue next steps with  Migration Guide", 
            "title": "Next steps"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/dev_build_guide_linux/", 
            "text": "Alpha Manual Build\n\n\nPlease note this an alternative method of building the \nisle.localdomain\n Docker images and the slower of the two processes.\n\n\nPlease refer to the \nTest Site Guide - isle.localdomain\n for the \nfaster\n version.\n\n\nOr use the \nMigration Guide\n after completing this process, if the enduser is going to edit the Dockerfile to make changes prior to the build.\n\n\nAlpha Manual Build Pre-Requisites\n\n\n\n\n\n\nThe Host Server has already been setup and is running. If one has not setup the Host server please follow one of the following links below and then return to this document please.\n\n\n\n\n\n\nHost Server setup for \nCentOS 7\n\n\n\n\n\n\nHost Server setup for \nUbuntu 16.04 LTS\n\n\n\n\n\n\nHost Server setup for \nMac OS\n\n\n\n\n\n\nBy default the \nDocker-Compose.yml\n file is configured for Linux Host Servers.\n\n\n\n\nIf one is using a \nMac OS\n Host server, then edit the \ndocker-compose.yml\n file to ensure the following lines look like this:   \n\n\n\n\n\n\n\n\n    # - ./customize/apache/site/linux_settings.php:/var/www/html/sites/default/settings.php  \n      - ./customize/apache/site/macosx_settings.php:/var/www/html/sites/default/settings.php  \n\n\n\n\nManual Build process (same for Ubuntu 16.04 or CentOS 7)\n\n\nPlease note:\n \nThe first container (MySQL, isle-mysql, mysql) has to be built and running PRIOR to all others (including fedora \n apache) due to a race condition (fedora starts prior to mysql being ready to accept connections). This improper state will be fixed at a later point in the project.\n  \n\n\n\n\nDO NOT RUN\n \ndocker-compose up -d\n during the initial build process as this will build and run all containers at the same time which will trigger the above mentioned race condition and subsequent chain of service failures.\n\n\n\n\n1. MySQL image build \n container launch (10-15 mins)\n\n\n\n\ndocker-compose build mysql\n  \n\n\ndocker-compose up -d mysql\n  \n\n\n\n\n2. Fedora image build \n container launch (20 - 30 mins)\n\n\n\n\ndocker-compose build fedora\n  \n\n\ndocker-compose up -d fedora\n  \n\n\n\n\n3. Solr image build \n container launch (10 - 20 mins)\n\n\n\n\ndocker-compose build solr\n  \n\n\ndocker-compose up -d solr\n  \n\n\n\n\n4. Apache image build \n container launch (30 - 45 mins)\n\n\n\n\n\n\ndocker-compose build apache\n  \n\n\n\n\n\n\nEdit the \ndocker-compose.yml\n file to ensure the following lines look like this:   \n\n\n\n\n\n\n    - ./customize/apache/site/linux_settings.php:/var/www/html/sites/default/settings.php\n    # - ./customize/apache/site/macosx_settings.php:/var/www/html/sites/default/settings.php  \n\n\n\n\n\n\ndocker-compose up -d apache\n  \n\n\nPlease note:\n \nThis container on occasion has failed to start initially for as of yet unlogged and unknown reasons.\n\n\nOne can check if the container is running: \ndocker ps\n (shows only running containers)  \n\n\nOne can check if the container stopped running or \"exited\": \ndocker ps -a\n (shows all containers running or not)  \n\n\n\n\n\n\n\n\n\n\n\n\n5. Install script on Apache container (20 - 40 mins)\n\n\n\n\n\n\nRun the following shell scripts manually on the apache container  \n\n\n\n\ndocker exec -it isle-apache bash\n\n\ncd /tmp\n\n\nchmod 777 *.sh\n\n\n./make_site.sh\n\n\n./install_site.sh\n\n\n\n\n\n\n\n\nOnce finished \ncntrl-D\n or type \nexit\n to get out of the apache container \n QC the resulting setup\n\n\n\n\n\n\nPlease note:\n The cronjob setting in the \ninstall_site.sh\n script is commented out as this will need to be flowed into the Docker build process prior. Issue with default Docker root user vs using islandora user. Drupal cron can run properly manually.\n\n\nTotal build process takes 1.5 -2.5 hours (depending on system and internet speeds)\n\n\n\n\nFast Facts\n\n\nislandora\n user on host server uses \nisle2017\n as password\n\n\n1. MySQL container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\nmysql\n\n\nisle-mysql\n\n\nMySQL 5.6\n\n\n3306\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccount\n\n\nPassword\n\n\nDatabase\n\n\nPerms\n\n\n\n\n\n\n\n\n\n\nroot\n\n\nislemysqlrootpw2017\n\n\nALL\n\n\nALL\n\n\n\n\n\n\nfedora_admin\n\n\ndockerfeddb2017\n\n\nfedora3\n\n\nAll\n except \nGrant\n option\n\n\n\n\n\n\nislandora_user\n\n\nislandoradockerdb2017\n\n\nislandora_docker\n\n\nAll\n except \nGrant\n option\n\n\n\n\n\n\n\n\n\n\n2. Fedora container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\nfedora\n\n\nisle-fedora\n\n\nsee below\n\n\n8080, 80 (on container) mapped to 8777 (on host)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware\n\n\nVersion\n\n\n\n\n\n\n\n\n\n\nFedora\n\n\n3.8.1\n\n\n\n\n\n\nApache\n\n\n2.4.7\n\n\n\n\n\n\nDrupalfilter\n\n\n3.8.1\n\n\n\n\n\n\nGsearch (w/remote SOLR plugin)\n\n\n2.8+ (DG patched)\n\n\n\n\n\n\n(DG) GSearch Extensions\n\n\n0.13\n\n\n\n\n\n\n(DG) Islandora Transforms (XSLTs)\n\n\nas of 11/2017\n\n\n\n\n\n\nTomcat\n\n\n7.x\n\n\n\n\n\n\nOracle JDK\n\n\n8.x\n\n\n\n\n\n\nDjatoka\n\n\n1.1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccount\n\n\nPassword\n\n\nService\n\n\nURL\n\n\n\n\n\n\n\n\n\n\nfedoraAdmin\n\n\ndockerFEDadmin2017\n\n\nFedora\n\n\nhttp://127.0.0.1:8080/fedora/describe\n\n\n\n\n\n\nfedoraIntCallUser\n\n\ndockerfedoraIntCallUserpw2017\n\n\nFedora\n\n\nhttp://127.0.0.1:8080/fedora/objects\n\n\n\n\n\n\nanonymous\n\n\nanonymous\n\n\nFedora\n\n\n---\n\n\n\n\n\n\nfgsAdmin\n\n\ndockerfgsAdminpw2017\n\n\nGsearch\n\n\nhttp://127.0.0.1:8080/fedoragsearch/rest?operation=updateIndex\n\n\n\n\n\n\nadmin\n\n\ndockertcadminpw2017\n\n\nTomcat\n\n\nhttp://127.0.0.1:8080/manager/html\n\n\n\n\n\n\nmanager\n\n\ndockertcmanpw2017\n\n\nTomcat\n\n\nhttp://127.0.0.1:8080/manager/html\n\n\n\n\n\n\n--\n\n\n--\n\n\nDjatoka\n\n\nhttp://127.0.0.1:8080/adore-djatoka/\n\n\n\n\n\n\n--\n\n\n--\n\n\nApache\n\n\nhttp://127.0.0.1:8777\n\n\n\n\n\n\n\n\n\n\n3. Solr container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\nsolr\n\n\nisle-solr\n\n\nsee below\n\n\n8993, 8080 (on container) mapped to 8091 (on host)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware\n\n\nVersion\n\n\n\n\n\n\n\n\n\n\nSolr\n\n\n4.10.4\n\n\n\n\n\n\nTomcat\n\n\n7.x\n\n\n\n\n\n\nOracle JDK\n\n\n8.x\n\n\n\n\n\n\n(DG) Basic Solr Config\n\n\n4.10.x branch\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccount\n\n\nPassword\n\n\nService\n\n\nURL\n\n\n\n\n\n\n\n\n\n\nadmin\n\n\ndockertcadminpw2017\n\n\nTomcat\n\n\nhttp://127.0.0.1:8091/manager/html\n\n\n\n\n\n\nmanager\n\n\ndockertcmanpw2017\n\n\nTomcat\n\n\nhttp://127.0.0.1:8091/manager/html\n\n\n\n\n\n\n--\n\n\n--\n\n\nSolr\n\n\nhttp://127.0.0.1:8091/solr/\n\n\n\n\n\n\n\n\n\n\n4. Apache container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\napache\n\n\nisle-apache\n\n\nsee below\n\n\n80\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware\n\n\nVersion\n\n\n\n\n\n\n\n\n\n\nApache\n\n\n2.4.7\n\n\n\n\n\n\nOracle JDK\n\n\n8.x\n\n\n\n\n\n\nDjatoka\n\n\n1.1\n\n\n\n\n\n\nDrupal\n\n\n7.56\n\n\n\n\n\n\nPHP\n\n\n5.6\n\n\n\n\n\n\nIslandora\n\n\n7.x\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccount\n\n\nPassword\n\n\nService\n\n\nURL\n\n\n\n\n\n\n\n\n\n\nislandora_docker_admin\n\n\nislandoradockeradminpw2017\n\n\nDrupal site admin\n\n\nhttp://isle.localdomain", 
            "title": "1.4. -Testing - Dev Build Guide - Linux"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/dev_build_guide_linux/#alpha-manual-build", 
            "text": "Please note this an alternative method of building the  isle.localdomain  Docker images and the slower of the two processes.  Please refer to the  Test Site Guide - isle.localdomain  for the  faster  version.  Or use the  Migration Guide  after completing this process, if the enduser is going to edit the Dockerfile to make changes prior to the build.", 
            "title": "Alpha Manual Build"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/dev_build_guide_linux/#alpha-manual-build-pre-requisites", 
            "text": "The Host Server has already been setup and is running. If one has not setup the Host server please follow one of the following links below and then return to this document please.    Host Server setup for  CentOS 7    Host Server setup for  Ubuntu 16.04 LTS    Host Server setup for  Mac OS    By default the  Docker-Compose.yml  file is configured for Linux Host Servers.   If one is using a  Mac OS  Host server, then edit the  docker-compose.yml  file to ensure the following lines look like this:            # - ./customize/apache/site/linux_settings.php:/var/www/html/sites/default/settings.php  \n      - ./customize/apache/site/macosx_settings.php:/var/www/html/sites/default/settings.php", 
            "title": "Alpha Manual Build Pre-Requisites"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/dev_build_guide_linux/#manual-build-process-same-for-ubuntu-1604-or-centos-7", 
            "text": "Please note:   The first container (MySQL, isle-mysql, mysql) has to be built and running PRIOR to all others (including fedora   apache) due to a race condition (fedora starts prior to mysql being ready to accept connections). This improper state will be fixed at a later point in the project.      DO NOT RUN   docker-compose up -d  during the initial build process as this will build and run all containers at the same time which will trigger the above mentioned race condition and subsequent chain of service failures.", 
            "title": "Manual Build process (same for Ubuntu 16.04 or CentOS 7)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/dev_build_guide_linux/#1-mysql-image-build-container-launch-10-15-mins", 
            "text": "docker-compose build mysql     docker-compose up -d mysql", 
            "title": "1. MySQL image build &amp; container launch (10-15 mins)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/dev_build_guide_linux/#2-fedora-image-build-container-launch-20-30-mins", 
            "text": "docker-compose build fedora     docker-compose up -d fedora", 
            "title": "2. Fedora image build &amp; container launch (20 - 30 mins)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/dev_build_guide_linux/#3-solr-image-build-container-launch-10-20-mins", 
            "text": "docker-compose build solr     docker-compose up -d solr", 
            "title": "3. Solr image build &amp; container launch (10 - 20 mins)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/dev_build_guide_linux/#4-apache-image-build-container-launch-30-45-mins", 
            "text": "docker-compose build apache       Edit the  docker-compose.yml  file to ensure the following lines look like this:           - ./customize/apache/site/linux_settings.php:/var/www/html/sites/default/settings.php\n    # - ./customize/apache/site/macosx_settings.php:/var/www/html/sites/default/settings.php     docker-compose up -d apache     Please note:   This container on occasion has failed to start initially for as of yet unlogged and unknown reasons.  One can check if the container is running:  docker ps  (shows only running containers)    One can check if the container stopped running or \"exited\":  docker ps -a  (shows all containers running or not)", 
            "title": "4. Apache image build &amp; container launch (30 - 45 mins)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/dev_build_guide_linux/#5-install-script-on-apache-container-20-40-mins", 
            "text": "Run the following shell scripts manually on the apache container     docker exec -it isle-apache bash  cd /tmp  chmod 777 *.sh  ./make_site.sh  ./install_site.sh     Once finished  cntrl-D  or type  exit  to get out of the apache container   QC the resulting setup    Please note:  The cronjob setting in the  install_site.sh  script is commented out as this will need to be flowed into the Docker build process prior. Issue with default Docker root user vs using islandora user. Drupal cron can run properly manually.", 
            "title": "5. Install script on Apache container (20 - 40 mins)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/dev_build_guide_linux/#total-build-process-takes-15-25-hours-depending-on-system-and-internet-speeds", 
            "text": "", 
            "title": "Total build process takes 1.5 -2.5 hours (depending on system and internet speeds)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/dev_build_guide_linux/#fast-facts", 
            "text": "islandora  user on host server uses  isle2017  as password", 
            "title": "Fast Facts"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/dev_build_guide_linux/#1-mysql-container", 
            "text": "Compose Service Name  Container Name  Software  Ports      mysql  isle-mysql  MySQL 5.6  3306        Account  Password  Database  Perms      root  islemysqlrootpw2017  ALL  ALL    fedora_admin  dockerfeddb2017  fedora3  All  except  Grant  option    islandora_user  islandoradockerdb2017  islandora_docker  All  except  Grant  option", 
            "title": "1. MySQL container"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/dev_build_guide_linux/#2-fedora-container", 
            "text": "Compose Service Name  Container Name  Software  Ports      fedora  isle-fedora  see below  8080, 80 (on container) mapped to 8777 (on host)        Software  Version      Fedora  3.8.1    Apache  2.4.7    Drupalfilter  3.8.1    Gsearch (w/remote SOLR plugin)  2.8+ (DG patched)    (DG) GSearch Extensions  0.13    (DG) Islandora Transforms (XSLTs)  as of 11/2017    Tomcat  7.x    Oracle JDK  8.x    Djatoka  1.1        Account  Password  Service  URL      fedoraAdmin  dockerFEDadmin2017  Fedora  http://127.0.0.1:8080/fedora/describe    fedoraIntCallUser  dockerfedoraIntCallUserpw2017  Fedora  http://127.0.0.1:8080/fedora/objects    anonymous  anonymous  Fedora  ---    fgsAdmin  dockerfgsAdminpw2017  Gsearch  http://127.0.0.1:8080/fedoragsearch/rest?operation=updateIndex    admin  dockertcadminpw2017  Tomcat  http://127.0.0.1:8080/manager/html    manager  dockertcmanpw2017  Tomcat  http://127.0.0.1:8080/manager/html    --  --  Djatoka  http://127.0.0.1:8080/adore-djatoka/    --  --  Apache  http://127.0.0.1:8777", 
            "title": "2. Fedora container"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/dev_build_guide_linux/#3-solr-container", 
            "text": "Compose Service Name  Container Name  Software  Ports      solr  isle-solr  see below  8993, 8080 (on container) mapped to 8091 (on host)        Software  Version      Solr  4.10.4    Tomcat  7.x    Oracle JDK  8.x    (DG) Basic Solr Config  4.10.x branch        Account  Password  Service  URL      admin  dockertcadminpw2017  Tomcat  http://127.0.0.1:8091/manager/html    manager  dockertcmanpw2017  Tomcat  http://127.0.0.1:8091/manager/html    --  --  Solr  http://127.0.0.1:8091/solr/", 
            "title": "3. Solr container"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/dev_build_guide_linux/#4-apache-container", 
            "text": "Compose Service Name  Container Name  Software  Ports      apache  isle-apache  see below  80        Software  Version      Apache  2.4.7    Oracle JDK  8.x    Djatoka  1.1    Drupal  7.56    PHP  5.6    Islandora  7.x        Account  Password  Service  URL      islandora_docker_admin  islandoradockeradminpw2017  Drupal site admin  http://isle.localdomain", 
            "title": "4. Apache container"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/dev_build_guide_mac/", 
            "text": "Alpha Manual Build - MacOS\n\n\nPlease note this an alternative method of building the \nisle.localdomain\n Docker images and the slower of the two processes.\n\n\nPlease refer to the \nTest Site Guide - isle.localdomain\n for the \nfaster\n version.\n\n\nOr use the \nMigration Guide\n after completing this process, if the enduser is going to edit the Dockerfile to make changes prior to the build.\n\n\nAlpha Manual Build Pre-Requisites\n\n\n\n\n\n\nThe Host Server has already been setup and is running. If one has not setup the Host server please follow one of the following links below and then return to this document please.\n\n\n\n\n\n\nHost Server setup for \nCentOS 7\n\n\n\n\n\n\nHost Server setup for \nUbuntu 16.04 LTS\n\n\n\n\n\n\nHost Server setup for \nMac OS\n\n\n\n\n\n\n\n\n\n\nBy default the \nDocker-Compose.yml\n file is configured for Linux Host Servers.\n\n\n\n\nIf one is using a \nMac OS\n Host server, then edit the \ndocker-compose.yml\n file to ensure the following lines look like this:   \n\n\n\n\n\n\n\n\n    # - ./customize/apache/site/linux_settings.php:/var/www/html/sites/default/settings.php\n      - ./customize/apache/site/macosx_settings.php:/var/www/html/sites/default/settings.php  \n\n\n\n\n\n\nAlpha Manual Build MacOS\n\n\nPlease note:\n \nThe first container (MySQL, isle-mysql, mysql) has to be built and running PRIOR to all others (including fedora \n apache) due to a race condition (fedora starts prior to mysql being ready to accept connections). This improper state will be fixed at a later point in the project.\n  \n\n\n\n\nDO NOT RUN\n \ndocker-compose up -d\n during the initial build process as this will build and run all containers at the same time which will trigger the above mentioned race condition and subsequent chain of service failures.\n\n\n\n\n1. MySQL image build \n container launch (10-15 mins)\n\n\n\n\ndocker-compose build mysql\n  \n\n\ndocker-compose up -d mysql\n  \n\n\n\n\n2. Fedora image build \n container launch (30 - 45 mins)\n\n\n\n\ndocker-compose build fedora\n  \n\n\ndocker-compose up -d fedora\n  \n\n\n\n\n3. Solr image build \n container launch (20 - 40 mins)\n\n\n\n\ndocker-compose build solr\n  \n\n\ndocker-compose up -d solr\n  \n\n\n\n\n4. Apache image build \n container launch (45 - 60 mins)\n\n\n\n\n\n\ndocker-compose build apache\n\n\n\n\n\n\nEdit the \ndocker-compose.yml\n file to ensure the following lines look like this:   \n\n\n\n\n\n\n    # - ./customize/apache/site/linux_settings.php:/var/www/html/sites/default/settings.php\n    - ./customize/apache/site/macosx_settings.php:/var/www/html/sites/default/settings.php  \n\n\n\n\n\n\ndocker-compose up -d apache\n  \n\n\nPlease note:\n \nThis container on occasion has failed to start initially for as of yet unlogged and unknown reasons.\n\n\nOne can check if the container is running: \ndocker ps\n (shows only running containers)  \n\n\nOne can check if the container stopped running or \"exited\": \ndocker ps -a\n (shows all containers running or not)  \n\n\n\n\n\n\n\n\n\n\n\n\n5. Install script on Apache container (45 - 60 mins)\n\n\n\n\n\n\nRun the following shell scripts manually on the apache container  \n\n\n\n\ndocker exec -it isle-apache bash\n\n\ncd /tmp\n\n\nchmod 777 *.sh\n\n\n./make_site.sh\n\n\n./install_site.sh\n\n\n\n\n\n\n\n\nOnce finished \ncntrl-D\n or type \nexit\n to get out of the apache container \n QC the resulting setup\n\n\n\n\n\n\nPlease note:\n The cronjob setting in the \ninstall_site.sh\n script is commented out as this will need to be flowed into the Docker build process prior. Issue with default Docker root user vs using islandora user. Drupal cron can run properly manually.\n\n\nTotal build process takes 2.5 - 4 hours (depending on system and internet speeds)\n\n\n\n\nFast Facts\n\n\n1. MySQL container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\nmysql\n\n\nisle-mysql\n\n\nMySQL 5.6\n\n\n3306\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccount\n\n\nPassword\n\n\nDatabase\n\n\nPerms\n\n\n\n\n\n\n\n\n\n\nroot\n\n\nislemysqlrootpw2017\n\n\nALL\n\n\nALL\n\n\n\n\n\n\nfedora_admin\n\n\ndockerfeddb2017\n\n\nfedora3\n\n\nAll\n except \nGrant\n option\n\n\n\n\n\n\nislandora_user\n\n\nislandoradockerdb2017\n\n\nislandora_docker\n\n\nAll\n except \nGrant\n option\n\n\n\n\n\n\n\n\n\n\n2. Fedora container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\nfedora\n\n\nisle-fedora\n\n\nsee below\n\n\n8080, 80 (on container) mapped to 8777 (on host)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware\n\n\nVersion\n\n\n\n\n\n\n\n\n\n\nFedora\n\n\n3.8.1\n\n\n\n\n\n\nApache\n\n\n2.4.7\n\n\n\n\n\n\nDrupalfilter\n\n\n3.8.1\n\n\n\n\n\n\nGsearch (w/remote SOLR plugin)\n\n\n2.8+ (DG patched)\n\n\n\n\n\n\n(DG) GSearch Extensions\n\n\n0.13\n\n\n\n\n\n\n(DG) Islandora Transforms (XSLTs)\n\n\nas of 11/2017\n\n\n\n\n\n\nTomcat\n\n\n7.x\n\n\n\n\n\n\nOracle JDK\n\n\n8.x\n\n\n\n\n\n\nDjatoka\n\n\n1.1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccount\n\n\nPassword\n\n\nService\n\n\nURL\n\n\n\n\n\n\n\n\n\n\nfedoraAdmin\n\n\ndockerFEDadmin2017\n\n\nFedora\n\n\nhttp://127.0.0.1:8080/fedora/describe\n\n\n\n\n\n\nfedoraIntCallUser\n\n\ndockerfedoraIntCallUserpw2017\n\n\nFedora\n\n\nhttp://127.0.0.1:8080/fedora/objects\n\n\n\n\n\n\nanonymous\n\n\nanonymous\n\n\nFedora\n\n\n---\n\n\n\n\n\n\nfgsAdmin\n\n\ndockerfgsAdminpw2017\n\n\nGsearch\n\n\nhttp://127.0.0.1:8080/fedoragsearch/rest?operation=updateIndex\n\n\n\n\n\n\nadmin\n\n\ndockertcadminpw2017\n\n\nTomcat\n\n\nhttp://127.0.0.1:8080/manager/html\n\n\n\n\n\n\nmanager\n\n\ndockertcmanpw2017\n\n\nTomcat\n\n\nhttp://127.0.0.1:8080/manager/html\n\n\n\n\n\n\n--\n\n\n--\n\n\nDjatoka\n\n\nhttp://127.0.0.1:8080/adore-djatoka/\n\n\n\n\n\n\n--\n\n\n--\n\n\nApache\n\n\nhttp://127.0.0.1:8777\n\n\n\n\n\n\n\n\n\n\n3. Solr container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\nsolr\n\n\nisle-solr\n\n\nsee below\n\n\n8993, 8080 (on container) mapped to 8091 (on host)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware\n\n\nVersion\n\n\n\n\n\n\n\n\n\n\nSolr\n\n\n4.10.4\n\n\n\n\n\n\nTomcat\n\n\n7.x\n\n\n\n\n\n\nOracle JDK\n\n\n8.x\n\n\n\n\n\n\n(DG) Basic Solr Config\n\n\n4.10.x branch\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccount\n\n\nPassword\n\n\nService\n\n\nURL\n\n\n\n\n\n\n\n\n\n\nadmin\n\n\ndockertcadminpw2017\n\n\nTomcat\n\n\nhttp://127.0.0.1:8091/manager/html\n\n\n\n\n\n\nmanager\n\n\ndockertcmanpw2017\n\n\nTomcat\n\n\nhttp://127.0.0.1:8091/manager/html\n\n\n\n\n\n\n--\n\n\n--\n\n\nSolr\n\n\nhttp://127.0.0.1:8091/solr/\n\n\n\n\n\n\n\n\n\n\n4. Apache container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\napache\n\n\nisle-apache\n\n\nsee below\n\n\n80\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware\n\n\nVersion\n\n\n\n\n\n\n\n\n\n\nApache\n\n\n2.4.7\n\n\n\n\n\n\nOracle JDK\n\n\n8.x\n\n\n\n\n\n\nDjatoka\n\n\n1.1\n\n\n\n\n\n\nDrupal\n\n\n7.56\n\n\n\n\n\n\nPHP\n\n\n5.6\n\n\n\n\n\n\nIslandora\n\n\n7.x\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccount\n\n\nPassword\n\n\nService\n\n\nURL\n\n\n\n\n\n\n\n\n\n\nislandora_docker_admin\n\n\nislandoradockeradminpw2017\n\n\nDrupal site admin\n\n\nhttp://isle.localdomain", 
            "title": "1.4. -Testing - Dev Build Guide - Mac OSX"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/dev_build_guide_mac/#alpha-manual-build-macos", 
            "text": "Please note this an alternative method of building the  isle.localdomain  Docker images and the slower of the two processes.  Please refer to the  Test Site Guide - isle.localdomain  for the  faster  version.  Or use the  Migration Guide  after completing this process, if the enduser is going to edit the Dockerfile to make changes prior to the build.", 
            "title": "Alpha Manual Build - MacOS"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/dev_build_guide_mac/#alpha-manual-build-pre-requisites", 
            "text": "The Host Server has already been setup and is running. If one has not setup the Host server please follow one of the following links below and then return to this document please.    Host Server setup for  CentOS 7    Host Server setup for  Ubuntu 16.04 LTS    Host Server setup for  Mac OS      By default the  Docker-Compose.yml  file is configured for Linux Host Servers.   If one is using a  Mac OS  Host server, then edit the  docker-compose.yml  file to ensure the following lines look like this:            # - ./customize/apache/site/linux_settings.php:/var/www/html/sites/default/settings.php\n      - ./customize/apache/site/macosx_settings.php:/var/www/html/sites/default/settings.php", 
            "title": "Alpha Manual Build Pre-Requisites"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/dev_build_guide_mac/#alpha-manual-build-macos_1", 
            "text": "Please note:   The first container (MySQL, isle-mysql, mysql) has to be built and running PRIOR to all others (including fedora   apache) due to a race condition (fedora starts prior to mysql being ready to accept connections). This improper state will be fixed at a later point in the project.      DO NOT RUN   docker-compose up -d  during the initial build process as this will build and run all containers at the same time which will trigger the above mentioned race condition and subsequent chain of service failures.", 
            "title": "Alpha Manual Build MacOS"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/dev_build_guide_mac/#1-mysql-image-build-container-launch-10-15-mins", 
            "text": "docker-compose build mysql     docker-compose up -d mysql", 
            "title": "1. MySQL image build &amp; container launch (10-15 mins)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/dev_build_guide_mac/#2-fedora-image-build-container-launch-30-45-mins", 
            "text": "docker-compose build fedora     docker-compose up -d fedora", 
            "title": "2. Fedora image build &amp; container launch (30 - 45 mins)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/dev_build_guide_mac/#3-solr-image-build-container-launch-20-40-mins", 
            "text": "docker-compose build solr     docker-compose up -d solr", 
            "title": "3. Solr image build &amp; container launch (20 - 40 mins)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/dev_build_guide_mac/#4-apache-image-build-container-launch-45-60-mins", 
            "text": "docker-compose build apache    Edit the  docker-compose.yml  file to ensure the following lines look like this:           # - ./customize/apache/site/linux_settings.php:/var/www/html/sites/default/settings.php\n    - ./customize/apache/site/macosx_settings.php:/var/www/html/sites/default/settings.php     docker-compose up -d apache     Please note:   This container on occasion has failed to start initially for as of yet unlogged and unknown reasons.  One can check if the container is running:  docker ps  (shows only running containers)    One can check if the container stopped running or \"exited\":  docker ps -a  (shows all containers running or not)", 
            "title": "4. Apache image build &amp; container launch (45 - 60 mins)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/dev_build_guide_mac/#5-install-script-on-apache-container-45-60-mins", 
            "text": "Run the following shell scripts manually on the apache container     docker exec -it isle-apache bash  cd /tmp  chmod 777 *.sh  ./make_site.sh  ./install_site.sh     Once finished  cntrl-D  or type  exit  to get out of the apache container   QC the resulting setup    Please note:  The cronjob setting in the  install_site.sh  script is commented out as this will need to be flowed into the Docker build process prior. Issue with default Docker root user vs using islandora user. Drupal cron can run properly manually.", 
            "title": "5. Install script on Apache container (45 - 60 mins)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/dev_build_guide_mac/#total-build-process-takes-25-4-hours-depending-on-system-and-internet-speeds", 
            "text": "", 
            "title": "Total build process takes 2.5 - 4 hours (depending on system and internet speeds)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/dev_build_guide_mac/#fast-facts", 
            "text": "", 
            "title": "Fast Facts"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/dev_build_guide_mac/#1-mysql-container", 
            "text": "Compose Service Name  Container Name  Software  Ports      mysql  isle-mysql  MySQL 5.6  3306        Account  Password  Database  Perms      root  islemysqlrootpw2017  ALL  ALL    fedora_admin  dockerfeddb2017  fedora3  All  except  Grant  option    islandora_user  islandoradockerdb2017  islandora_docker  All  except  Grant  option", 
            "title": "1. MySQL container"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/dev_build_guide_mac/#2-fedora-container", 
            "text": "Compose Service Name  Container Name  Software  Ports      fedora  isle-fedora  see below  8080, 80 (on container) mapped to 8777 (on host)        Software  Version      Fedora  3.8.1    Apache  2.4.7    Drupalfilter  3.8.1    Gsearch (w/remote SOLR plugin)  2.8+ (DG patched)    (DG) GSearch Extensions  0.13    (DG) Islandora Transforms (XSLTs)  as of 11/2017    Tomcat  7.x    Oracle JDK  8.x    Djatoka  1.1        Account  Password  Service  URL      fedoraAdmin  dockerFEDadmin2017  Fedora  http://127.0.0.1:8080/fedora/describe    fedoraIntCallUser  dockerfedoraIntCallUserpw2017  Fedora  http://127.0.0.1:8080/fedora/objects    anonymous  anonymous  Fedora  ---    fgsAdmin  dockerfgsAdminpw2017  Gsearch  http://127.0.0.1:8080/fedoragsearch/rest?operation=updateIndex    admin  dockertcadminpw2017  Tomcat  http://127.0.0.1:8080/manager/html    manager  dockertcmanpw2017  Tomcat  http://127.0.0.1:8080/manager/html    --  --  Djatoka  http://127.0.0.1:8080/adore-djatoka/    --  --  Apache  http://127.0.0.1:8777", 
            "title": "2. Fedora container"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/dev_build_guide_mac/#3-solr-container", 
            "text": "Compose Service Name  Container Name  Software  Ports      solr  isle-solr  see below  8993, 8080 (on container) mapped to 8091 (on host)        Software  Version      Solr  4.10.4    Tomcat  7.x    Oracle JDK  8.x    (DG) Basic Solr Config  4.10.x branch        Account  Password  Service  URL      admin  dockertcadminpw2017  Tomcat  http://127.0.0.1:8091/manager/html    manager  dockertcmanpw2017  Tomcat  http://127.0.0.1:8091/manager/html    --  --  Solr  http://127.0.0.1:8091/solr/", 
            "title": "3. Solr container"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/dev_build_guide_mac/#4-apache-container", 
            "text": "Compose Service Name  Container Name  Software  Ports      apache  isle-apache  see below  80        Software  Version      Apache  2.4.7    Oracle JDK  8.x    Djatoka  1.1    Drupal  7.56    PHP  5.6    Islandora  7.x        Account  Password  Service  URL      islandora_docker_admin  islandoradockeradminpw2017  Drupal site admin  http://isle.localdomain", 
            "title": "4. Apache container"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/migration_guide/", 
            "text": "ISLE Migration Guide (draft 02.5.2018)\n\n\nThis Migration guide is the intended process for endusers to migrate their existing production Islandora environment to their respective ISLE Islandora containers and volumes.\n\n\nAssumptions / Prerequisites\n\n\n\n\n\n\nISLE Host server setup has been completed.\n\n\n\n\n\n\nIf one has not setup the ISLE host server please refer to the appropriate resource below:\n\n\n\n\n\n\nHost Remote Setup Guide - CentOS\n\n\n\n\n\n\nHost Remote Setup Guide - Ubuntu\n\n\n\n\n\n\nHost Remote Setup Guide - Ansible\n (setup for both Ubuntu \n Centos)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe fully qualified domain name of their ISLE host server that will run all of the containers has been created and resolves properly in DNS.\n\n\n\n\n\n\nThe enduser has the IP address of their ISLE host server documented\n\n\n\n\n\n\nThe enduser has the expected fully qualified domain name(s) (fqdn) of the Islandora / Drupal website(s) documented and assigned to the appropriate IP(s) in DNS.\n\n\n\n\n\n\nThe enduser has ssh access to ISLE host server\n\n\n\n\n\n\nThe enduser has the ability or access to create git repositories\n\n\n\n\n\n\nThe enduser (or an appropriate IT resource) can \nCOPY\n data, configuration files etc. safely from their Islandora Production server(s) to the new ISLE host server.\n\n\n\n\n\n\nProduction data, configuration files etc. have been \ncopied\n from the currently running Islandora production server to the new ISLE host server following the checklist below of required data, configuration files etc.\n\n\n\n\n\n\n\n\nMigration to ISLE Process Overview\n\n\nAs this is a large guide, here's a quick not very detailed overview of what's going to happen in the next steps:\n\n\n\n\nEnsure that the destination ISLE host server has the same (or more) amount of storage as the production server.\n\n\nCreate appropriate Islandora Production data storage structure on new ISLE host server\n\n\nCopy current production data and config files as directed by the \nexport checklist\n to an appropriate location on the new ISLE host Server.\n\n\nCreate the required new config directory by copying the template \n/opt/ISLE/config/isle-prod-project.institution\n to a renamed directory within \n/opt/ISLE/config\n\n\nCompare the template settings within the new renamed directory of \n/opt/ISLE/config/enduser-renamed-directory.institution\n to the current production config files. Merge or edit as necessary in the new isle config directory for use with ISLE.\n\n\nThere may be some additional work to compare and merge in previous enduser customizations of the Solr \nschema.xml\n to the new ISLE config.\n\n\nThere may be some additional work to compare and merge in previous enduser customizations of the Solr \nsolrconfig.xml\n to the new ISLE config.\n\n\nThere may be some additional work to compare and merge in previous enduser customizations of the Solr \nstopwords\n to the new ISLE config.\n\n\nThere may be some additional work to compare and merge in previous enduser customizations of the Islandora Transform (XSLTs) files to the new ISLE versions.        \n\n\nBased on new paths, edit the \ndocker-compose.yml\n file to\n\n\nPoint to the new associated \nislandora_production_data_storage\n structure.\n\n\nPoint to the new directories and config settings in \n/opt/ISLE/config/enduser-renamed-directory.institution\n\n\nSpin up new containers one at a time with the new config settings\n\n\nCheck that all services are running properly\n\n\nRepeat entire process (\nif necessary\n) for additional ISLE environments e.g. \nproduction, staging and development\n\n\n\n\n\n\nStep 1: Create appropriate Islandora Production data storage structure on new ISLE host server\n\n\nFriendly note to endusers: While the following process may seem overly cautious or redundant, it saves time and establishes a safer conditions for endusers to work with valuable data.\n\n\nIt is recommended that endusers use a large volume or network attached drive that can store a backup copy of the entire Islandora production storage, an merged copy of the ISLE production storage and associated config files as outlined in the \nMigration Export Checklist\n and additional datastores.\n\n\n\n\n\n\nIn an appropriate area / path on one's intended ISLE host server e.g. \n/opt/\n or \n/mnt/\n, create a directory e.g. \nislandora_production_data_storage\n with the following sub-directories:\n\n\n\n\n\n\nExample directory structure\n:\n\n\n\n\n\n\n    islandora_production_data_storage/   \n    \u251c\u2500\u2500 apache  \n    \u251c\u2500\u2500 fedora   \n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 apache  \n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 fedora  \n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 gsearch  \n    \u251c\u2500\u2500 mysql  \n    \u251c\u2500\u2500 solr  \n    \u2514\u2500\u2500 tomcat  \n\n\n\n\n\n\n\n\nIt is recommended that original copies of data be first copied here to allow for faster workflow as well as for endusers to easily sort through production data.\n\n\n\n\n\n\nThis directory will serve as the \"backup\" of all production data about to be migrated into ISLE\n\n\n\n\n\n\nOnce the migration process is confirmed as completed and successful, the enduser can decide if this data is still worth keeping or backed up.\n\n\n\n\n\n\n\n\nStep 2: Create appropriate ISLE Production data storage structure on new ISLE host server\n\n\nFriendly note to endusers: While the following process may seem overly cautious or redundant, it saves time and establishes a safer conditions for endusers to continue to work with valuable data.\n\n\nIn the previous step the \nislandora_production_data_storage\n directory was setup as a source of materials to continue to \nCOPY\n from i.e. \nIslandora Production Data\n.\n\n\nThis step is to now create the working directory for \nISLE Production Data\n.\n\n\nIt is recommended that endusers again use a large volume or network attached drive that can store the entire ISLE production storage (which is the merged copy of the Islandora production storage and associated config files as outlined in the \nMigration Export Checklist\n and additional datastores.)\n\n\n\n\n\n\nIn an appropriate area / path on one's intended ISLE host server e.g. \n/opt/\n or \n/mnt/\n, create a parent directory e.g. \nisle_production_data_storage\n with the appropriate institutional ISLE environment as a sub-directory. Create as many as required. For this guide only the production environment will be created e.g. \nenduser-renamed-directory-prod.institution\n\n\n\n\n\n\nExample guide directory structure\n:\n\n\n\n\n\n\n    /path_to/isle_production_data_storage/\n             \u2514\u2500\u2500 enduser-renamed-directory-prod.institution\n                 \u251c\u2500\u2500 apache  \n                 \u251c\u2500\u2500 fedora   \n                 \u251c\u2500\u2500 mysql  \n                 \u2514\u2500\u2500 solr  \n\n\n\n\n\n\nWhile the \n/path_to/isle_production_data_storage/\n directory will serve as the storage for all ISLE production data, it is highly important to further differentiate future ISLE production data by environment e.g. hence the use of \nenduser-renamed-directory-prod.institution\n.\n\n\n\n\nThis structure ensures no accidental data overwrites between ISLE environments and proper functioning.\n\n\n\n\nExample future directory structure\n:\n\n\n\n\n  /path_to/isle_production_data_storage/\n           |\n           \u251c\u2500\u2500enduser-renamed-directory-dev.institution\n           |  \u251c\u2500\u2500 apache  \n           |  \u251c\u2500\u2500 fedora   \n           |  \u251c\u2500\u2500 mysql  \n           |  \u2514\u2500\u2500 solr  \n           |\n           \u251c\u2500\u2500enduser-renamed-directory-prod.institution\n           |  \u251c\u2500\u2500 apache  \n           |  \u251c\u2500\u2500 fedora   \n           |  \u251c\u2500\u2500 mysql  \n           |  \u2514\u2500\u2500 solr  \n           |\n           \u251c\u2500\u2500enduser-renamed-directory-stage.institution\n           |  \u251c\u2500\u2500 apache  \n           |  \u251c\u2500\u2500 fedora   \n           |  \u251c\u2500\u2500 mysql  \n           |  \u2514\u2500\u2500 solr     \n           |\n\n\n\n\n\n\n\n\nLater steps outlined in this guide will have the enduser copy data to these directories.\n\n\n\n\n\n\nThe \ndocker-compose.yml\n file found within \n/opt/ISLE/config/enduser-renamed-directory-prod.institution\n is ready for editing to \"point\" to these data directories. This process will be explained in further detail in Step 6 of this guide.\n\n\n\n\n\n\nOnce the migration process is confirmed as completed and successful, the enduser will continue to backup up this data.\n\n\n\n\n\n\nStep 3: Copy Production Data to ISLE Host server\n\n\nPlease review and follow the \nMigration Export Checklist\n to ensure all production data detailed within has been \nCOPIED\n over to the ISLE Host Server \nPRIOR\n to proceeding further with this Migration guide.\n\n\nOnce all steps have been followed, continue on to Step 4.\n\n\n\n\nStep 4: Setup config directory within ISLE Git repo for institutional Docker configuration\n\n\nThis process is necessary for running multiple versions of ISLE e.g. production, staging and development / sandbox. The config folder is the location for creating multiple versions of ISLE environments such as the example provided below.\n\n\nThis example below displays, along with the baked in ISLE sample dev site, an institution running a development, staging and production environment all on one ISLE host server. This would be a recommended \"typical\" setup for long term usage.\n\n\nISLE/config/  \n\u251c\u2500\u2500enduser-renamed-directory-dev.institution      \n\u251c\u2500\u2500enduser-renamed-directory-prod.institution    (this guide uses this as an example only)\n\u251c\u2500\u2500enduser-renamed-directory-stage.institution\n\u251c\u2500\u2500isle_localdomain                              (ISLE sample site)   \n\u2514\u2500\u2500isle-prod-project.institution                 (only copy this template / never delete or modify)\n\n\n\n\nFor a more detailed explanation please refer to section \n2.7 Managing Multiple Environments.\n\n\nPlease note:\n While one over time can maintain and update profiles in the \nconfig\n directory manually, it is highly recommended that this new directory be kept in a private git repository for ease of use in making and preserving changes. For more information on how to use git in an ISLE multi environment setup, please refer to section \n2.7 Environments Git Structure\n\n\nSetup process\n  \n\n\n\n\nCreate a private Git repository on their associated Git server (\nprivate institutional Git repository\n) or git hosting service (\nGithub.com, Bitbucket.com, Gitlab.com\n)  \n\n\n\n\nThe enduser may need to add the \n/home/islandora/.ssh/id_rsa.pub\n to the appropriate git repository as a git ssh deploy key to be able to push pull from the server.\n\n\n\n\n\n\nNavigate to the ISLE directory `/opt/ISLE/config/``\n\n\n\n\n\n\nCreate a directory on the ISLE server directory e.g. \n/opt/ISLE/config/enduser-renamed-directory-prod.institution\n\n\n\n\n\n\nCopy the contents of the \n/opt/ISLE/config/isle-prod-project.institution\n to this new directory e.g. \n/opt/ISLE/config/enduser-renamed-directory-prod.institution\n\n\n\n\n\n\n\n\nStep 5: Edit, merge or copy in Islandora production files or data to the new ISLE Production config or data directories\n\n\n\n\nCompare the data and settings of the files found within \nislandora_production_data_storage\n, and then merge, edit or copy as necessary with the templated settings found within the newly renamed directory of \n/opt/ISLE/config/enduser-renamed-directory-prod.institution\n as guided in the \nMigration Merge Checklist\n.\n\n\n\n\n\n\nStep 6: Edit the \ndocker-compose.yml\n file\n\n\nEdit the \ndocker-compose.yml\n found within the \n/opt/ISLE/config/enduser-renamed-directory-prod.institution\n directory as suggested in the \nMigration Docker Compose Edit Guidelines\n.\n\n\n\n\nStep 7: Review or pull down ISLE Docker images\n\n\nPlease Note: You may have already done this in setting up the host server manually and / or with Ansible. However it is always a good idea to review and check using the first command below.\n\n\n\n\nCheck if all ISLE images have been downloaded\n\n\ndocker image ls\n\n\n\n\n  * **TO DO:**  show sample output here\n\n\n\n\n\n\n\n\nIf yes, then proceed to Step 7\n\n\n\n\n\n\nIf no, the perform the following:\n\n\n\n\ndocker pull islandoracollabgroup/isle-mysql:latest\n\n\ndocker pull islandoracollabgroup/isle-fedora:latest\n\n\ndocker pull islandoracollabgroup/isle-solr:latest\n\n\ndocker pull islandoracollabgroup/isle-apache:latest\n\n\n\n\n\n\n\n\n\n\nStep 8: Spin up mysql container and import production databases\n\n\n\n\ncd /opt/ISLE/config/enduser-renamed-directory-prod.institution\n\n\ndocker-compose up -d mysql\n\n\n\n\n**TO DO:**  steps and scripts for mysql cli import\n       use GUI and recommended clients e.g. Sequel pro, Navicat etc.\n       if encountering errors use _Alternative longer method_ from above\n\n       * _Alternative longer method_\n         * one can skip running the drush command on the production apache webserver\n         * export the databases as usual from the production mysql server\n         * import databases into the isle-mysql container (_with errors being ignored_)\n         * truncate all tables that start with `cache` on the isle-mysql container\n         * export this new database to the `mysql` directory on the isle host server\n         * delete all tables (_not the database itself_) on the isle-mysql container\n         * Reimport the new lighter database to the isle-mysql container\n\n\n\n\n\n\n\n\nStep 9: Spin up fedora container and run reindex processes\n\n\n**TO DO:**  refine this\n* Staying within `/opt/ISLE/config/enduser-renamed-directory-prod.institution`\n* `docker-compose up -d fedora`\n* check if fedora is running properly e.g. `http://isle-prod-project.institution:8080/manager/html`\n* `docker exec -it isle-fedora-institution bash`\n* turn off tomcat `service tomcat stop`\n* reindex Fedora RI `process steps here`\n* reindex SQL RI `process steps here`\n* confirm PID contents in SQL table `QC process here`\n\n\n\n\n\n\nStep 10: Spin up solr container and rerun index processes\n\n\n**TO DO:**  refine this\n* Staying within `/opt/ISLE/config/enduser-renamed-directory-prod.institution`\n* `docker-compose up -d solr`\n* check if solr is running properly e.g. `http://isle-prod-project.institution:8777/manager/html`\n* `docker exec -it isle-fedora-institution bash` NOTE FEDORA NOT SOLR\n* reindex SOLR `process steps here` Use screen\n* TAKES HOURS DEPENDING ON DATA SIZE\n\n\n\n\n\n\nStep 11: Spin up apache container and run provision script\n\n\n**TO DO:**  refine this\n* Staying within `/opt/ISLE/config/enduser-renamed-directory-prod.institution`\n* `docker-compose up -d apache`\n* check if apache is running properly e.g. `http://isle-prod-project.institution`\n* `docker exec -it isle-apache-institution bash`\n* cd /tmp location\n* `/tmp/isle-build-tools/apache-provision.sh` (check if this is appropriate)\n* Check site and outline QC process", 
            "title": "1.4. -Testing - Migration Guide"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/migration_guide/#isle-migration-guide-draft-0252018", 
            "text": "This Migration guide is the intended process for endusers to migrate their existing production Islandora environment to their respective ISLE Islandora containers and volumes.", 
            "title": "ISLE Migration Guide (draft 02.5.2018)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/migration_guide/#assumptions-prerequisites", 
            "text": "ISLE Host server setup has been completed.    If one has not setup the ISLE host server please refer to the appropriate resource below:    Host Remote Setup Guide - CentOS    Host Remote Setup Guide - Ubuntu    Host Remote Setup Guide - Ansible  (setup for both Ubuntu   Centos)        The fully qualified domain name of their ISLE host server that will run all of the containers has been created and resolves properly in DNS.    The enduser has the IP address of their ISLE host server documented    The enduser has the expected fully qualified domain name(s) (fqdn) of the Islandora / Drupal website(s) documented and assigned to the appropriate IP(s) in DNS.    The enduser has ssh access to ISLE host server    The enduser has the ability or access to create git repositories    The enduser (or an appropriate IT resource) can  COPY  data, configuration files etc. safely from their Islandora Production server(s) to the new ISLE host server.    Production data, configuration files etc. have been  copied  from the currently running Islandora production server to the new ISLE host server following the checklist below of required data, configuration files etc.", 
            "title": "Assumptions / Prerequisites"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/migration_guide/#migration-to-isle-process-overview", 
            "text": "As this is a large guide, here's a quick not very detailed overview of what's going to happen in the next steps:   Ensure that the destination ISLE host server has the same (or more) amount of storage as the production server.  Create appropriate Islandora Production data storage structure on new ISLE host server  Copy current production data and config files as directed by the  export checklist  to an appropriate location on the new ISLE host Server.  Create the required new config directory by copying the template  /opt/ISLE/config/isle-prod-project.institution  to a renamed directory within  /opt/ISLE/config  Compare the template settings within the new renamed directory of  /opt/ISLE/config/enduser-renamed-directory.institution  to the current production config files. Merge or edit as necessary in the new isle config directory for use with ISLE.  There may be some additional work to compare and merge in previous enduser customizations of the Solr  schema.xml  to the new ISLE config.  There may be some additional work to compare and merge in previous enduser customizations of the Solr  solrconfig.xml  to the new ISLE config.  There may be some additional work to compare and merge in previous enduser customizations of the Solr  stopwords  to the new ISLE config.  There may be some additional work to compare and merge in previous enduser customizations of the Islandora Transform (XSLTs) files to the new ISLE versions.          Based on new paths, edit the  docker-compose.yml  file to  Point to the new associated  islandora_production_data_storage  structure.  Point to the new directories and config settings in  /opt/ISLE/config/enduser-renamed-directory.institution  Spin up new containers one at a time with the new config settings  Check that all services are running properly  Repeat entire process ( if necessary ) for additional ISLE environments e.g.  production, staging and development", 
            "title": "Migration to ISLE Process Overview"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/migration_guide/#step-1-create-appropriate-islandora-production-data-storage-structure-on-new-isle-host-server", 
            "text": "Friendly note to endusers: While the following process may seem overly cautious or redundant, it saves time and establishes a safer conditions for endusers to work with valuable data.  It is recommended that endusers use a large volume or network attached drive that can store a backup copy of the entire Islandora production storage, an merged copy of the ISLE production storage and associated config files as outlined in the  Migration Export Checklist  and additional datastores.    In an appropriate area / path on one's intended ISLE host server e.g.  /opt/  or  /mnt/ , create a directory e.g.  islandora_production_data_storage  with the following sub-directories:    Example directory structure :        islandora_production_data_storage/   \n    \u251c\u2500\u2500 apache  \n    \u251c\u2500\u2500 fedora   \n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 apache  \n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 fedora  \n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 gsearch  \n    \u251c\u2500\u2500 mysql  \n    \u251c\u2500\u2500 solr  \n    \u2514\u2500\u2500 tomcat      It is recommended that original copies of data be first copied here to allow for faster workflow as well as for endusers to easily sort through production data.    This directory will serve as the \"backup\" of all production data about to be migrated into ISLE    Once the migration process is confirmed as completed and successful, the enduser can decide if this data is still worth keeping or backed up.", 
            "title": "Step 1: Create appropriate Islandora Production data storage structure on new ISLE host server"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/migration_guide/#step-2-create-appropriate-isle-production-data-storage-structure-on-new-isle-host-server", 
            "text": "Friendly note to endusers: While the following process may seem overly cautious or redundant, it saves time and establishes a safer conditions for endusers to continue to work with valuable data.  In the previous step the  islandora_production_data_storage  directory was setup as a source of materials to continue to  COPY  from i.e.  Islandora Production Data .  This step is to now create the working directory for  ISLE Production Data .  It is recommended that endusers again use a large volume or network attached drive that can store the entire ISLE production storage (which is the merged copy of the Islandora production storage and associated config files as outlined in the  Migration Export Checklist  and additional datastores.)    In an appropriate area / path on one's intended ISLE host server e.g.  /opt/  or  /mnt/ , create a parent directory e.g.  isle_production_data_storage  with the appropriate institutional ISLE environment as a sub-directory. Create as many as required. For this guide only the production environment will be created e.g.  enduser-renamed-directory-prod.institution    Example guide directory structure :        /path_to/isle_production_data_storage/\n             \u2514\u2500\u2500 enduser-renamed-directory-prod.institution\n                 \u251c\u2500\u2500 apache  \n                 \u251c\u2500\u2500 fedora   \n                 \u251c\u2500\u2500 mysql  \n                 \u2514\u2500\u2500 solr     While the  /path_to/isle_production_data_storage/  directory will serve as the storage for all ISLE production data, it is highly important to further differentiate future ISLE production data by environment e.g. hence the use of  enduser-renamed-directory-prod.institution .   This structure ensures no accidental data overwrites between ISLE environments and proper functioning.   Example future directory structure :     /path_to/isle_production_data_storage/\n           |\n           \u251c\u2500\u2500enduser-renamed-directory-dev.institution\n           |  \u251c\u2500\u2500 apache  \n           |  \u251c\u2500\u2500 fedora   \n           |  \u251c\u2500\u2500 mysql  \n           |  \u2514\u2500\u2500 solr  \n           |\n           \u251c\u2500\u2500enduser-renamed-directory-prod.institution\n           |  \u251c\u2500\u2500 apache  \n           |  \u251c\u2500\u2500 fedora   \n           |  \u251c\u2500\u2500 mysql  \n           |  \u2514\u2500\u2500 solr  \n           |\n           \u251c\u2500\u2500enduser-renamed-directory-stage.institution\n           |  \u251c\u2500\u2500 apache  \n           |  \u251c\u2500\u2500 fedora   \n           |  \u251c\u2500\u2500 mysql  \n           |  \u2514\u2500\u2500 solr     \n           |    Later steps outlined in this guide will have the enduser copy data to these directories.    The  docker-compose.yml  file found within  /opt/ISLE/config/enduser-renamed-directory-prod.institution  is ready for editing to \"point\" to these data directories. This process will be explained in further detail in Step 6 of this guide.    Once the migration process is confirmed as completed and successful, the enduser will continue to backup up this data.", 
            "title": "Step 2: Create appropriate ISLE Production data storage structure on new ISLE host server"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/migration_guide/#step-3-copy-production-data-to-isle-host-server", 
            "text": "Please review and follow the  Migration Export Checklist  to ensure all production data detailed within has been  COPIED  over to the ISLE Host Server  PRIOR  to proceeding further with this Migration guide.  Once all steps have been followed, continue on to Step 4.", 
            "title": "Step 3: Copy Production Data to ISLE Host server"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/migration_guide/#step-4-setup-config-directory-within-isle-git-repo-for-institutional-docker-configuration", 
            "text": "This process is necessary for running multiple versions of ISLE e.g. production, staging and development / sandbox. The config folder is the location for creating multiple versions of ISLE environments such as the example provided below.  This example below displays, along with the baked in ISLE sample dev site, an institution running a development, staging and production environment all on one ISLE host server. This would be a recommended \"typical\" setup for long term usage.  ISLE/config/  \n\u251c\u2500\u2500enduser-renamed-directory-dev.institution      \n\u251c\u2500\u2500enduser-renamed-directory-prod.institution    (this guide uses this as an example only)\n\u251c\u2500\u2500enduser-renamed-directory-stage.institution\n\u251c\u2500\u2500isle_localdomain                              (ISLE sample site)   \n\u2514\u2500\u2500isle-prod-project.institution                 (only copy this template / never delete or modify)  For a more detailed explanation please refer to section  2.7 Managing Multiple Environments.  Please note:  While one over time can maintain and update profiles in the  config  directory manually, it is highly recommended that this new directory be kept in a private git repository for ease of use in making and preserving changes. For more information on how to use git in an ISLE multi environment setup, please refer to section  2.7 Environments Git Structure  Setup process      Create a private Git repository on their associated Git server ( private institutional Git repository ) or git hosting service ( Github.com, Bitbucket.com, Gitlab.com )     The enduser may need to add the  /home/islandora/.ssh/id_rsa.pub  to the appropriate git repository as a git ssh deploy key to be able to push pull from the server.    Navigate to the ISLE directory `/opt/ISLE/config/``    Create a directory on the ISLE server directory e.g.  /opt/ISLE/config/enduser-renamed-directory-prod.institution    Copy the contents of the  /opt/ISLE/config/isle-prod-project.institution  to this new directory e.g.  /opt/ISLE/config/enduser-renamed-directory-prod.institution", 
            "title": "Step 4: Setup config directory within ISLE Git repo for institutional Docker configuration"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/migration_guide/#step-5-edit-merge-or-copy-in-islandora-production-files-or-data-to-the-new-isle-production-config-or-data-directories", 
            "text": "Compare the data and settings of the files found within  islandora_production_data_storage , and then merge, edit or copy as necessary with the templated settings found within the newly renamed directory of  /opt/ISLE/config/enduser-renamed-directory-prod.institution  as guided in the  Migration Merge Checklist .", 
            "title": "Step 5: Edit, merge or copy in Islandora production files or data to the new ISLE Production config or data directories"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/migration_guide/#step-6-edit-the-docker-composeyml-file", 
            "text": "Edit the  docker-compose.yml  found within the  /opt/ISLE/config/enduser-renamed-directory-prod.institution  directory as suggested in the  Migration Docker Compose Edit Guidelines .", 
            "title": "Step 6: Edit the docker-compose.yml file"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/migration_guide/#step-7-review-or-pull-down-isle-docker-images", 
            "text": "Please Note: You may have already done this in setting up the host server manually and / or with Ansible. However it is always a good idea to review and check using the first command below.   Check if all ISLE images have been downloaded  docker image ls     * **TO DO:**  show sample output here    If yes, then proceed to Step 7    If no, the perform the following:   docker pull islandoracollabgroup/isle-mysql:latest  docker pull islandoracollabgroup/isle-fedora:latest  docker pull islandoracollabgroup/isle-solr:latest  docker pull islandoracollabgroup/isle-apache:latest", 
            "title": "Step 7: Review or pull down ISLE Docker images"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/migration_guide/#step-8-spin-up-mysql-container-and-import-production-databases", 
            "text": "cd /opt/ISLE/config/enduser-renamed-directory-prod.institution  docker-compose up -d mysql   **TO DO:**  steps and scripts for mysql cli import\n       use GUI and recommended clients e.g. Sequel pro, Navicat etc.\n       if encountering errors use _Alternative longer method_ from above\n\n       * _Alternative longer method_\n         * one can skip running the drush command on the production apache webserver\n         * export the databases as usual from the production mysql server\n         * import databases into the isle-mysql container (_with errors being ignored_)\n         * truncate all tables that start with `cache` on the isle-mysql container\n         * export this new database to the `mysql` directory on the isle host server\n         * delete all tables (_not the database itself_) on the isle-mysql container\n         * Reimport the new lighter database to the isle-mysql container", 
            "title": "Step 8: Spin up mysql container and import production databases"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/migration_guide/#step-9-spin-up-fedora-container-and-run-reindex-processes", 
            "text": "**TO DO:**  refine this\n* Staying within `/opt/ISLE/config/enduser-renamed-directory-prod.institution`\n* `docker-compose up -d fedora`\n* check if fedora is running properly e.g. `http://isle-prod-project.institution:8080/manager/html`\n* `docker exec -it isle-fedora-institution bash`\n* turn off tomcat `service tomcat stop`\n* reindex Fedora RI `process steps here`\n* reindex SQL RI `process steps here`\n* confirm PID contents in SQL table `QC process here`", 
            "title": "Step 9: Spin up fedora container and run reindex processes"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/migration_guide/#step-10-spin-up-solr-container-and-rerun-index-processes", 
            "text": "**TO DO:**  refine this\n* Staying within `/opt/ISLE/config/enduser-renamed-directory-prod.institution`\n* `docker-compose up -d solr`\n* check if solr is running properly e.g. `http://isle-prod-project.institution:8777/manager/html`\n* `docker exec -it isle-fedora-institution bash` NOTE FEDORA NOT SOLR\n* reindex SOLR `process steps here` Use screen\n* TAKES HOURS DEPENDING ON DATA SIZE", 
            "title": "Step 10: Spin up solr container and rerun index processes"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/migration_guide/#step-11-spin-up-apache-container-and-run-provision-script", 
            "text": "**TO DO:**  refine this\n* Staying within `/opt/ISLE/config/enduser-renamed-directory-prod.institution`\n* `docker-compose up -d apache`\n* check if apache is running properly e.g. `http://isle-prod-project.institution`\n* `docker exec -it isle-apache-institution bash`\n* cd /tmp location\n* `/tmp/isle-build-tools/apache-provision.sh` (check if this is appropriate)\n* Check site and outline QC process", 
            "title": "Step 11: Spin up apache container and run provision script"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/migration_export_checklist/", 
            "text": "Migration Export Checklist\n\n\nThis section is a checklist of materials to \nCOPY\n from the current running institutional Islandora Production server(s) to the appropriate storage location / directory on the new ISLE Host Server.\n\n\nPlease Note:\n \nUbuntu / Debian style paths are used for all examples file locations below, endusers might have different locations for these files HOWEVER the file and directory names etc should be roughly the same.\n\n\nCaution\n: While the ISLE Project recommends use of export methods or tools such as rsync, scp etc., it assumes that endusers are familiar with them and are aware of possible dangers of improperly exporting or copying production data.\nEnsure adequate backups of any production system(s) are made prior to any attempts. If you are not familiar or are uncomfortable with these processes, it is highly advisable to work with an appropriate IT resource.\n\n\nISLE assumes no responsibility or liability in this matter.\n\n\nAssumptions / Prerequisites\n\n\n\n\nThe enduser has completed Steps 1 \n 2 of the \nMigration Guide\n.\n\n\nThe enduser is currently on Step 3 of the \nMigration Guide\n\n\n\n\n\n\nApache\n\n\nCopy the following below from the Islandora Production Server(s) to the suggested directory \n/path_to/islandora_production_data_storage/apache/\n on the ISLE Host server.\n\n\nThis data will be used in conjunction with an Apache container.\n\n\n\n\n\n\n\n\nData\n\n\nDescription\n\n\nPossible Location\n\n\nSuggested ISLE Path Destination\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nhtml\n\n\nIslandora/Drupal Website\n\n\n/var/www/\n\n\n/islandora_production_data_storage/apache/\n\n\nsee below\n\n\n\n\n\n\nsettings.php\n\n\nDrupal settings.php file\n\n\n/var/www/html/sites/default/\n\n\n/islandora_production_data_storage/apache/\n\n\nsee below\n\n\n\n\n\n\nphp.ini\n\n\nPHP configuration file\n\n\n/etc/\n\n\n/islandora_production_data_storage/apache/\n\n\n--\n\n\n\n\n\n\nyoursite.conf\n\n\nApache webserver vhost file\n\n\n/etc/apache2/sites-available/\n\n\n/islandora_production_data_storage/apache/\n\n\nsee below\n\n\n\n\n\n\n\n\nApache Notes\n:\n\n\n\n\n\n\n/var/www/\nhtml\n\n\n\n\n\n\nEntire contents unless size prohibits\n\n\n\n\n\n\nIf \nhtml\n is not used, then substitute with the appropriate directory for the Islandora / Drupal site\n\n\n\n\n\n\n\n\n\n\nsettings.php\n\n\n\n\nIf running multi-sites separate or rename appropriately e.g. multisite2_name_settings.php, multisite3_name_settings.php and so on...\n\n\n\n\n\n\n\n\nyoursite.conf\n\n\n\n\n\n\nFile will have different name\n\n\n\n\n\n\n\n\nFedora\n\n\nCopy the following below from the Islandora Production Server(s) to the suggested directory \n/path_to/islandora_production_data_storage/fedora/\n on the ISLE Host server.\n\n\nThis data will be used in conjunction with a Fedora container.  \n\n\n\n\n\n\n\n\nData\n\n\nDescription\n\n\nPossible Location\n\n\nSuggested ISLE Path Destination\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nyoursite.conf\n\n\nApache webserver vhost file\n\n\n/etc/apache2/sites-available/\n\n\n/islandora_production_data_storage/fedora/\n\n\nsee below\n\n\n\n\n\n\ndata\n\n\nEntire Fedora data directory\n\n\n/usr/local/fedora/\n\n\n/islandora_production_data_storage/fedora/\n\n\n--\n\n\n\n\n\n\nfedora.fcfg\n\n\nFedora repository config file\n\n\n/usr/local/fedora/server/config/\n\n\n/islandora_production_data_storage/fedora/\n\n\n--\n\n\n\n\n\n\nfedora-users.xml\n\n\nFedora users config file\n\n\n/usr/local/fedora/server/config/\n\n\n/islandora_production_data_storage/fedora/\n\n\n--\n\n\n\n\n\n\nfilter-drupal.xml\n\n\nFedora Drupal filter file\n\n\n/usr/local/fedora/server/config/\n\n\n/islandora_production_data_storage/fedora/\n\n\n--\n\n\n\n\n\n\n\n\nFedora Notes\n:\n\n\n\n\nyoursite.conf\n (\nif you use Adore-Djatoka with a reverse proxy otherwise it is possible this file is not necessary\n)\n\n\n\n\n\n\nGsearch\n\n\nCopy the following below from the Islandora Production Server(s) to the suggested directory \n/path_to/islandora_production_data_storage/gsearch/\n on the ISLE Host server.\n\n\nThis data will be used in conjunction with a Fedora container.\n\n\n\n\n\n\n\n\nData\n\n\nDescription\n\n\nPossible Location\n\n\nSuggested ISLE Path Destination\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nfedoragsearch.properties\n\n\nGsearch config file\n\n\n/var/lib/tomcat/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/\n\n\n/islandora_production_data_storage/gsearch/\n\n\n--\n\n\n\n\n\n\nfgsconfig-basic-configForIslandora.properties\n\n\nGsearch config file\n\n\n/var/lib/tomcat7/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/\n\n\n/islandora_production_data_storage/gsearch/\n\n\n--\n\n\n\n\n\n\nfgsconfigObjects.properties\n\n\nGsearch config file\n\n\n/var/lib/tomcat7/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/\n\n\n/islandora_production_data_storage/gsearch/\n\n\n--\n\n\n\n\n\n\nrepository.properties\n\n\nGsearch config file\n\n\n/var/lib/tomcat7/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/repository/FgsRepos/\n\n\n/islandora_production_data_storage/gsearch/\n\n\n--\n\n\n\n\n\n\nislandora_transforms\n\n\nTransformation XSLTs directory\n\n\n/var/lib/tomcat7/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/index/FgsIndex/\n\n\n/islandora_production_data_storage/gsearch/\n\n\n--\n\n\n\n\n\n\nfoxmlToSolr.xslt\n\n\n\"top-level\" transformational XSLT\n\n\n/var/lib/tomcat7/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/index/FgsIndex/\n\n\n/islandora_production_data_storage/gsearch/\n\n\n--\n\n\n\n\n\n\n\n\nMySQL\n\n\nCopy the following below from the Islandora Production Server(s) to the suggested directory \n/path_to/islandora_production_data_storage/mysql/\n on the ISLE Host server.\n\n\nThis data will be used in conjunction with a MySQL container.\n\n\n\n\n\n\n\n\nData\n\n\nDescription\n\n\nPossible Location\n\n\nSuggested COPY Method\n\n\nSuggested ISLE Path Destination\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nDatabases\n\n\nDrupal website databases\n\n\n/var/lib/mysql\n\n\nCLI, MySQL Workbench or Sequel Pro etc.\n\n\n/islandora_production_data_storage/mysql/\n\n\nsee below\n\n\n\n\n\n\nmy.cnf\n\n\nMySQL server config file\n\n\n/etc/mysql/my.cnf\n\n\nrsync / scp\n\n\n/islandora_production_data_storage/mysql/\n\n\n--\n\n\n\n\n\n\n\n\nMySQL Notes\n:\n\n\n\n\n\n\nDrupal website databases can have a multitude of names and conventions. Confer with the appropriate IT resources for your institution's database naming conventions.\n\n\n\n\n\n\nCLI == Command line\n\n\n\n\n\n\nRecommended that the production databases be exported using the \n.sql\n and \n.gz\n file formats e.g. \ndrupal_site_2018.sql.gz\n for better compression and minimal storage footprint.\n\n\n\n\n\n\nIf the enduser is running multi-sites, there will be additional databases to export.\n\n\n\n\n\n\nDo not export the \nfedora3\n database as it will be recreated by the SQL index in later steps of the Migration Guide\n\n\n\n\n\n\nIf possible, on the production Apache webserver, run \ndrush cc all\n from the command line on the production server in the appropriate sites directory PRIOR to db export(s)\n\n\n\n\nOtherwise issues can occur on import due to all cache tables being larger than \ninnodb_log_file_size\n allows\n\n\n\n\nMySQL Tools for Export\n\n\n\n\nOfficial MySQL documentation\n\n\nDigital Ocean quick start for cli export\n\n\nOfficial MySQL GUI app - Workbench\n \nFor Linux, MacOS and Windows\n\n\nSequel Pro\n \nMacOS only\n\n\n\n\nTomcat\n\n\nCopy the following below from the Islandora Production Server(s) to the suggested directory to the ISLE Host server \n/pathto/islandora_production_data_storage/tomcat\n\n\nThis data will be used in conjunction with the Tomcat service found on a Fedora or SOLR container.\n\n\n\n\n\n\n\n\nData\n\n\nDescription\n\n\nPossible Location\n\n\nSuggested ISLE Path Destination\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nserver.xml\n\n\nTomcat server config file\n\n\n/var/lib/tomcat7/conf/server.xml\n\n\n/islandora_production_data_storage/tomcat/\n\n\n--\n\n\n\n\n\n\ntomcat-users.xml\n\n\nTomcat server config file\n\n\n/var/lib/tomcat7/conf/tomcat-users.xml\n\n\n/islandora_production_data_storage/tomcat/\n\n\n--\n\n\n\n\n\n\n\n\nSolr\n\n\nCopy the following below from the Islandora Production Server(s) to the suggested directory to the ISLE Host server \n/pathto/islandora_production_data_storage/solr\n\n\nThis data will be used in conjunction with a SOLR container.\n\n\n\n\n\n\n\n\nData\n\n\nDescription\n\n\nPossible Location\n\n\nSuggested ISLE Path Destination\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nschema.xml\n\n\nSolr schema file\n\n\n/var/lib/tomcat7/webapps/solr/collection1/conf/schema.xml\n\n\n/islandora_production_data_storage/solr\n\n\nsee below\n\n\n\n\n\n\nsolrconfig.xml\n\n\nSolr config file\n\n\n/var/lib/tomcat7/webapps/solr/collection1/conf/solrconfig.xml\n\n\n/islandora_production_data_storage/solr\n\n\nsee below\n\n\n\n\n\n\nstopwords.txt\n\n\nSolr file for filtering out common words\n\n\n/var/lib/tomcat7/webapps/solr/collection1/conf/stopwords.txt\n\n\n/islandora_production_data_storage/solr\n\n\nsee below", 
            "title": "1.4. -Testing - Migration Export Checklist"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/migration_export_checklist/#migration-export-checklist", 
            "text": "This section is a checklist of materials to  COPY  from the current running institutional Islandora Production server(s) to the appropriate storage location / directory on the new ISLE Host Server.  Please Note:   Ubuntu / Debian style paths are used for all examples file locations below, endusers might have different locations for these files HOWEVER the file and directory names etc should be roughly the same.  Caution : While the ISLE Project recommends use of export methods or tools such as rsync, scp etc., it assumes that endusers are familiar with them and are aware of possible dangers of improperly exporting or copying production data.\nEnsure adequate backups of any production system(s) are made prior to any attempts. If you are not familiar or are uncomfortable with these processes, it is highly advisable to work with an appropriate IT resource.  ISLE assumes no responsibility or liability in this matter.", 
            "title": "Migration Export Checklist"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/migration_export_checklist/#assumptions-prerequisites", 
            "text": "The enduser has completed Steps 1   2 of the  Migration Guide .  The enduser is currently on Step 3 of the  Migration Guide", 
            "title": "Assumptions / Prerequisites"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/migration_export_checklist/#apache", 
            "text": "Copy the following below from the Islandora Production Server(s) to the suggested directory  /path_to/islandora_production_data_storage/apache/  on the ISLE Host server.  This data will be used in conjunction with an Apache container.     Data  Description  Possible Location  Suggested ISLE Path Destination  Notes      html  Islandora/Drupal Website  /var/www/  /islandora_production_data_storage/apache/  see below    settings.php  Drupal settings.php file  /var/www/html/sites/default/  /islandora_production_data_storage/apache/  see below    php.ini  PHP configuration file  /etc/  /islandora_production_data_storage/apache/  --    yoursite.conf  Apache webserver vhost file  /etc/apache2/sites-available/  /islandora_production_data_storage/apache/  see below     Apache Notes :    /var/www/ html    Entire contents unless size prohibits    If  html  is not used, then substitute with the appropriate directory for the Islandora / Drupal site      settings.php   If running multi-sites separate or rename appropriately e.g. multisite2_name_settings.php, multisite3_name_settings.php and so on...     yoursite.conf    File will have different name", 
            "title": "Apache"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/migration_export_checklist/#fedora", 
            "text": "Copy the following below from the Islandora Production Server(s) to the suggested directory  /path_to/islandora_production_data_storage/fedora/  on the ISLE Host server.  This data will be used in conjunction with a Fedora container.       Data  Description  Possible Location  Suggested ISLE Path Destination  Notes      yoursite.conf  Apache webserver vhost file  /etc/apache2/sites-available/  /islandora_production_data_storage/fedora/  see below    data  Entire Fedora data directory  /usr/local/fedora/  /islandora_production_data_storage/fedora/  --    fedora.fcfg  Fedora repository config file  /usr/local/fedora/server/config/  /islandora_production_data_storage/fedora/  --    fedora-users.xml  Fedora users config file  /usr/local/fedora/server/config/  /islandora_production_data_storage/fedora/  --    filter-drupal.xml  Fedora Drupal filter file  /usr/local/fedora/server/config/  /islandora_production_data_storage/fedora/  --     Fedora Notes :   yoursite.conf  ( if you use Adore-Djatoka with a reverse proxy otherwise it is possible this file is not necessary )", 
            "title": "Fedora"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/migration_export_checklist/#gsearch", 
            "text": "Copy the following below from the Islandora Production Server(s) to the suggested directory  /path_to/islandora_production_data_storage/gsearch/  on the ISLE Host server.  This data will be used in conjunction with a Fedora container.     Data  Description  Possible Location  Suggested ISLE Path Destination  Notes      fedoragsearch.properties  Gsearch config file  /var/lib/tomcat/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/  /islandora_production_data_storage/gsearch/  --    fgsconfig-basic-configForIslandora.properties  Gsearch config file  /var/lib/tomcat7/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/  /islandora_production_data_storage/gsearch/  --    fgsconfigObjects.properties  Gsearch config file  /var/lib/tomcat7/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/  /islandora_production_data_storage/gsearch/  --    repository.properties  Gsearch config file  /var/lib/tomcat7/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/repository/FgsRepos/  /islandora_production_data_storage/gsearch/  --    islandora_transforms  Transformation XSLTs directory  /var/lib/tomcat7/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/index/FgsIndex/  /islandora_production_data_storage/gsearch/  --    foxmlToSolr.xslt  \"top-level\" transformational XSLT  /var/lib/tomcat7/webapps/fedoragsearch/WEB-INF/classes/fgsconfigFinal/index/FgsIndex/  /islandora_production_data_storage/gsearch/  --", 
            "title": "Gsearch"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/migration_export_checklist/#mysql", 
            "text": "Copy the following below from the Islandora Production Server(s) to the suggested directory  /path_to/islandora_production_data_storage/mysql/  on the ISLE Host server.  This data will be used in conjunction with a MySQL container.     Data  Description  Possible Location  Suggested COPY Method  Suggested ISLE Path Destination  Notes      Databases  Drupal website databases  /var/lib/mysql  CLI, MySQL Workbench or Sequel Pro etc.  /islandora_production_data_storage/mysql/  see below    my.cnf  MySQL server config file  /etc/mysql/my.cnf  rsync / scp  /islandora_production_data_storage/mysql/  --     MySQL Notes :    Drupal website databases can have a multitude of names and conventions. Confer with the appropriate IT resources for your institution's database naming conventions.    CLI == Command line    Recommended that the production databases be exported using the  .sql  and  .gz  file formats e.g.  drupal_site_2018.sql.gz  for better compression and minimal storage footprint.    If the enduser is running multi-sites, there will be additional databases to export.    Do not export the  fedora3  database as it will be recreated by the SQL index in later steps of the Migration Guide    If possible, on the production Apache webserver, run  drush cc all  from the command line on the production server in the appropriate sites directory PRIOR to db export(s)   Otherwise issues can occur on import due to all cache tables being larger than  innodb_log_file_size  allows   MySQL Tools for Export   Official MySQL documentation  Digital Ocean quick start for cli export  Official MySQL GUI app - Workbench   For Linux, MacOS and Windows  Sequel Pro   MacOS only   Tomcat  Copy the following below from the Islandora Production Server(s) to the suggested directory to the ISLE Host server  /pathto/islandora_production_data_storage/tomcat  This data will be used in conjunction with the Tomcat service found on a Fedora or SOLR container.     Data  Description  Possible Location  Suggested ISLE Path Destination  Notes      server.xml  Tomcat server config file  /var/lib/tomcat7/conf/server.xml  /islandora_production_data_storage/tomcat/  --    tomcat-users.xml  Tomcat server config file  /var/lib/tomcat7/conf/tomcat-users.xml  /islandora_production_data_storage/tomcat/  --     Solr  Copy the following below from the Islandora Production Server(s) to the suggested directory to the ISLE Host server  /pathto/islandora_production_data_storage/solr  This data will be used in conjunction with a SOLR container.     Data  Description  Possible Location  Suggested ISLE Path Destination  Notes      schema.xml  Solr schema file  /var/lib/tomcat7/webapps/solr/collection1/conf/schema.xml  /islandora_production_data_storage/solr  see below    solrconfig.xml  Solr config file  /var/lib/tomcat7/webapps/solr/collection1/conf/solrconfig.xml  /islandora_production_data_storage/solr  see below    stopwords.txt  Solr file for filtering out common words  /var/lib/tomcat7/webapps/solr/collection1/conf/stopwords.txt  /islandora_production_data_storage/solr  see below", 
            "title": "MySQL"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/migration_merge_checklist/", 
            "text": "Migration Merge Checklist\n\n\nThis section is to serve as a new checklist for the editing or merging of the copied Islandora Production server(s) data and config files to the appropriate config directory on the new ISLE Host Server.\n\n\nThe suggested workflow is for endusers to review the Production file(s) first, make note of any settings and then make appropriate edits within \n/config/enduser-renamed-directory.institution/\n to change values, add passwords or usernames etc unless otherwise directed e.g. Apache \nhtml\n and Fedora \ndata\n.\n\n\nWhile this checklist will attempt to point out most of the merge challenges or pitfalls, ISLE assumes no responsibility or liability in this matter should an enduser have customizations beyond what this guide outlines.\n\n\nPlease note:\n\n\n\n\n\n\nIn most cases, many of the configuration files (copied from \nisle-prod-project.institution\n to \nenduser-renamed-directory.institution\n) will have comments (#) in them to help guide endusers to make the appropriate edits e.g. (# enduser edit here)\n\n\n\n\n\n\nIn most cases, many of the configuration files (copied from \nisle-prod-project.institution\n to \nenduser-renamed-directory.institution\n) will have fake or empty settings in them. Please remove, edit or enter new values as advised.\n\n\n\n\n\n\nAssumptions / Prerequisites\n\n\n\n\n\n\nThe enduser has completed Steps 1 -4 of the \nMigration Guide\n.\n\n\n\n\nIncludes the steps outlined within the \nMigration Export Checklist\n to copy over production data and configuration files.\n\n\n\n\n\n\n\n\nThe enduser is currently on Step 5 of the \nMigration Guide\n\n\n\n\n\n\n\n\nApache\n\n\nCompare, edit, merge or copy the following from the suggested directory \n/path_to/islandora_production_data_storage/apache/\n on the ISLE Host server to either:\n\n\n\n\n\n\n/opt/isle/config/enduser-renamed-directory-prod.institution/apache/\n\n\n\n\n\n\n/path_to/isle_production_data_storage/enduser-renamed-directory-dev.institution\n\n\n\n\n\n\nThis data will be used in conjunction with an Apache container.\n\n\n\n\n\n\n\n\nData\n\n\nDescription\n\n\nProduction Data Copy Location on ISLE Host Server\n\n\nMerge, Copy or Edit Location / Destination\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nhtml\n\n\nIslandora/Drupal Website\n\n\n/path_to/islandora_production_data_storage/apache/\n\n\n/path_to/isle_production_data_storage/enduser-renamed-directory-dev.institution/apache/\n\n\nsee below\n\n\n\n\n\n\nsettings.php\n\n\nDrupal settings.php file\n\n\n/path_to/islandora_production_data_storage/apache/\n\n\n/config/enduser-renamed-directory.institution/apache/\n\n\nsee below\n\n\n\n\n\n\nsite.conf\n\n\nApache webserver vhost file\n\n\n/path_to/islandora_production_data_storage/apache/\n\n\n/config/enduser-renamed-directory.institution/apache/\n\n\nsee below\n\n\n\n\n\n\n\n\n\n\n\n\nhtml\n - endusers will \nCOPY\n this entire directory \ninstead\n to \n/path_to/isle_production_data_storage/enduser-renamed-directory-dev.institution/apache/html\n\n\n\n\n\n\nsettings.php\n - endusers will want to edit database and user names for Drupal sites to connect properly.\n\n\n\n\n\n\nLines 251 -253: Change the appropriate settings for the Drupal website database, associate database user name and password. Do not change the \nhost\n settings.  \n\n\n\n\n\n\nLine 288: \nRecommend adding a Drupal hash value here of 25+ alpha-numeric characters\n\n\n\n\n\n\nLine 312: \n$base_url\n should be the URL of the ISLE production Drupal website e.g. \nhttps://site.institution.extension\n\n\n\n\n\n\n\n\n\n\nsite.conf\n - endusers will edit this file as required to setup the Apache webserver on the Apache container.\n\n\n\n\n\n\nThe filename can stay the same or can be changed. Please note that Line 85 of the associated \ndocker-compose.yml\n will need to be updated if the file is renamed\n\n\n\n\n\n\nLines 2, 3, 6, 7, 34 - 37, 39, 40, 44 \n 45:  endusers will edit this file as directed in the (# enduser please edit this and then remove this comment) instructions.\n\n\n\n\n\n\nDo remove (# enduser please edit this and then remove this comment) after editing or adding the appropriate values.\n\n\n\n\n\n\n\n\n\n\nApache Optional Edits\n\n\n\n\n\n\n\n\nData\n\n\nDescription\n\n\nProduction Data Copy Location on ISLE Host Server\n\n\nMerge, Copy or Edit Location / Destination\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\nphp.ini\n\n\nPHP configuration file\n\n\n/path_to/islandora_production_data_storage/apache/\n\n\n/config/enduser-renamed-directory.institution/apache/\n\n\nsee below\n\n\n\n\n\n\n\n\n\n\n\n\nphp.ini\n - endusers can make appropriate edits within \n/config/enduser-renamed-directory.institution/apache/php.ini\n to increase the upload settings, memory etc. as needed. Otherwise leaving the default values should work.\n\n\n\n\n\n\nPlease note:\n an additional line will have to be added to the associated \ndocker-compose.yml\n in the Apache \nvolumes:\n section for this edit to work e.g. \n- ./apache/php.ini:/etc/php.ini\n\n\n\n\n\n\n\n\n\n\n\n\nData\n\n\nDescription\n\n\nProduction Data Copy Location on ISLE Host Server\n\n\nMerge, Copy or Edit Location / Destination\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\ntmpreaper\n\n\nCronjob for tmpreaper\n\n\n/path_to/islandora_production_data_storage/apache/\n\n\n/config/enduser-renamed-directory.institution/apache/\n\n\nsee below\n\n\n\n\n\n\n\n\n\n\n\n\ntmpreaper\n - (optional) endusers may want to edit this tmpreaper cron job for different locations and/or times. The \ndocker-compose.yml\n file will need an associated bind-mount for this change.\n\n\n\n\n\n\nPlease note:\n an additional line will have to be added to the associated \ndocker-compose.yml\n in the Apache \nvolumes:\n section for this edit to work e.g. \n- ./apache/tmpreaper/cron:/etc/cron.d/tmpreaper-cron\n\n\n\n\n\n\nFedora\n\n\nCompare, edit, merge or copy the following from the suggested directory \n/path_to/islandora_production_data_storage/fedora/\n on the ISLE Host server to either:\n\n\n\n\n\n\n/opt/isle/config/enduser-renamed-directory-prod.institution/fedora/\n\n\n\n\n\n\n/path_to/isle_production_data_storage/enduser-renamed-directory-dev.institution/fedora/\n\n\n\n\n\n\n\n\n\n\n\n\nData\n\n\nDescription\n\n\nPossible Location\n\n\nSuggested Destination\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\ndata\n\n\nEntire Fedora data directory\n\n\n/usr/local/fedora/\n\n\n/path_to/isle_production_data_storage/enduser-renamed-directory-dev.institution/fedora/\n\n\nsee below\n\n\n\n\n\n\nfedora.fcfg\n\n\nFedora repository config file\n\n\n/usr/local/fedora/server/config/\n\n\n/islandora_production_data_storage/fedora/\n\n\nsee below\n\n\n\n\n\n\nfedora-users.xml\n\n\nFedora users config file\n\n\n/usr/local/fedora/server/config/\n\n\n/islandora_production_data_storage/fedora/\n\n\nsee below\n\n\n\n\n\n\nfilter-drupal.xml\n\n\nFedora Drupal filter file\n\n\n/usr/local/fedora/server/config/\n\n\n/islandora_production_data_storage/fedora/\n\n\nsee below\n\n\n\n\n\n\nrepository-policies\n\n\nFedora Drupal filter file\n\n\n/usr/local/fedora/server/config/\n\n\n/islandora_production_data_storage/fedora/\n\n\nsee below\n\n\n\n\n\n\nsite.conf\n\n\nApache webserver vhost file\n\n\n/etc/apache2/sites-available/\n\n\n/islandora_production_data_storage/fedora/\n\n\nsee below\n\n\n\n\n\n\n\n\nFedora Notes\n:\n\n\n\n\n\n\ndata\n - endusers will \nCOPY\n this entire directory \ninstead\n to \n/path_to/isle_production_data_storage/enduser-renamed-directory-dev.institution/fedora/data\n\n\n\n\n\n\nfedora.fcfg\n - endusers will want to edit the following:\n\n\n\n\n\n\nLine: 562 (optional) to change the \nfedora_admin\n username for the \nfedora3\n database\n\n\n\n\n\n\nLine: 598 (necessary) to enter the \nfedora_admin\n user password for the \nfedora3\n database\n\n\n\n\n\n\n\n\n\n\nfedora-users.xml\n - endusers will want to edit the following:\n\n\n\n\nLines 3, 8, 14 and 19: Add the appropriate passwords or users as needed.  \n\n\n\n\n\n\n\n\nfilter-drupal.xml\n - endusers will want to edit\n\n\n\n\n\n\nLine 3: Add the appropriate Drupal site database name, Drupal site database user and Drupal site database user password in between all \n\"\"\n\n\n\n\n\n\nPlease note:\n For endusers using Drupal multi-sites, please add additional sites as guided in the example below\n\n\n\n\n\n\nExample\n\n\n\n\n\n\n?xml version=\n1.0\n encoding=\nUTF-8\n?\n\n\nFilterDrupal_Connection\n\n\n    \nconnection server=\nmysql\n port=\n3306\n dbname=\ndrupalsite1\n user=\ndrupalsite1_user\n password=\ndrupalsite1_user_pw\n\n    \nsql\n\n       SELECT DISTINCT u.uid AS userid, u.name AS Name, u.pass AS Pass,r.name AS Role FROM (users u LEFT JOIN users_roles ON u.uid=users_roles.uid) LEFT JOIN role r ON r.rid=users_roles.rid WHERE u.name=? AND u.pass=?;\n    \n/sql\n\n    \n/connection\n\n\n    \nconnection server=\nmysql\n port=\n3306\n dbname=\ndrupalsite2\n user=\ndrupalsite2_user\n password=\ndrupalsite2_user_pw\n\n    \nsql\n\n       SELECT DISTINCT u.uid AS userid, u.name AS Name, u.pass AS Pass,r.name AS Role FROM (users u LEFT JOIN users_roles ON u.uid=users_roles.uid) LEFT JOIN role r ON r.rid=users_roles.rid WHERE u.name=? AND u.pass=?;\n    \n/sql\n\n    \n/connection\n\n\n\n/FilterDrupal_Connection\n\n\n\n\n\n\n\n\n\nfedora/repository-policies\n - endusers can edit the files contained within for more granular or customized Fedora user permissions or repository access.\n\n\n\n\n\n\nsite.conf\n - endusers will want to edit this Apache vhost for the fedora proxy site name (if using Djatoka)\n\n\n\n\n\n\nThe filename can stay the same or can be changed. Please note that Line 37 of the associated \ndocker-compose.yml\n will need to be updated if the file is renamed\n\n\n\n\n\n\nLines 2, 3, 6, 7, 34 - 37, 39, 40, 44 \n 45:  endusers will edit this file as directed in the (# enduser please edit this and then remove this comment) instructions.\n\n\n\n\n\n\nDo remove (# enduser please edit this and then remove this comment) after editing or adding the appropriate values.\n\n\n\n\n\n\n\n\n\n\nSolr\n\n\n   Copy the following below from the Islandora Production Server(s) to the suggested directory `/path_to/islandora_production_data_storage/solr/` on the ISLE Host server.\n   This data will be used in conjunction with an Solr container.\n   | Data           | Description               | Possible Location        | Suggested ISLE Path Destination          | Notes         |\n   | -------------  | -------------             | -------------            | -------------                            | ------------- |\n   | schema.xml     | Solr index config file    | ../solr/collection1/conf | /islandora_production_data_storage/solr/ | _see below_   |\n   | solrconfig.xml | Solr config file          | ../solr/collection1/conf | /islandora_production_data_storage/solr/ | _see below_   |\n   | solr.xml       | Solr config file file     | /opt/solr/               | /islandora_production_data_storage/solr/ | _see below_   |\n   | stopwords.txt  | solr webserver vhost file | ../solr/collection1/conf | /islandora_production_data_storage/solr/ | _see below_   |\n\n\n\nSolr Notes\n:\n\n\n\n\nschema.xml\n\n\nUsually the first file one configures when setting up a new Solr installation\n\n\nThe schema declares\n\n\nwhat kinds of fields there are\n\n\nwhich field should be used as the unique/primary key\n\n\nwhich fields are required\n\n\nhow to index and search each field\n\n\n\n\n\n\nsolrconfig.xml\n\n\nThe solrconfig.xml file is the configuration file with the most parameters affecting Solr itself.\n\n\nIn solrconfig.xml, one can configure the following:\n\n\nrequest handlers, which process requests to Solr, e.g. requests to add documents to the index or requests to return results for a query\n\n\nprocesses that \"listen\" for particular query-related events; listeners can be used to trigger the execution of special code\n\n\nthe Request Dispatcher for managing HTTP communications\n\n\nthe Admin Web interface\n\n\nparameters related to replication and duplication\n\n\n\n\n\n\nsolr.xml\n\n\nThe solr.xml file defines global configuration options that apply to all or many cores.\n\n\nstopwords.txt\n\n\n_Using the stopwords.txt file, one can avoid the common words of a language, which do not add a significant value to any search.\n\n\n\n\nFor example, a, an, the, you, I, am, and so on. One can specify words to be removed from the Solr search in this file line-by-line.\n\n\n\n\n\n\nAdditional Locations:\n\n\n\n\n/opt/solr\n\n\n/usr/local/solr\n\n\n/var/lib/tomcat7/webapps/solr\n\n\n/usr/share/tomcat/webapps/solr", 
            "title": "1.4. -Testing - Migration Merge Checklist"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/migration_merge_checklist/#migration-merge-checklist", 
            "text": "This section is to serve as a new checklist for the editing or merging of the copied Islandora Production server(s) data and config files to the appropriate config directory on the new ISLE Host Server.  The suggested workflow is for endusers to review the Production file(s) first, make note of any settings and then make appropriate edits within  /config/enduser-renamed-directory.institution/  to change values, add passwords or usernames etc unless otherwise directed e.g. Apache  html  and Fedora  data .  While this checklist will attempt to point out most of the merge challenges or pitfalls, ISLE assumes no responsibility or liability in this matter should an enduser have customizations beyond what this guide outlines.  Please note:    In most cases, many of the configuration files (copied from  isle-prod-project.institution  to  enduser-renamed-directory.institution ) will have comments (#) in them to help guide endusers to make the appropriate edits e.g. (# enduser edit here)    In most cases, many of the configuration files (copied from  isle-prod-project.institution  to  enduser-renamed-directory.institution ) will have fake or empty settings in them. Please remove, edit or enter new values as advised.", 
            "title": "Migration Merge Checklist"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/migration_merge_checklist/#assumptions-prerequisites", 
            "text": "The enduser has completed Steps 1 -4 of the  Migration Guide .   Includes the steps outlined within the  Migration Export Checklist  to copy over production data and configuration files.     The enduser is currently on Step 5 of the  Migration Guide", 
            "title": "Assumptions / Prerequisites"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/migration_merge_checklist/#apache", 
            "text": "Compare, edit, merge or copy the following from the suggested directory  /path_to/islandora_production_data_storage/apache/  on the ISLE Host server to either:    /opt/isle/config/enduser-renamed-directory-prod.institution/apache/    /path_to/isle_production_data_storage/enduser-renamed-directory-dev.institution    This data will be used in conjunction with an Apache container.     Data  Description  Production Data Copy Location on ISLE Host Server  Merge, Copy or Edit Location / Destination  Notes      html  Islandora/Drupal Website  /path_to/islandora_production_data_storage/apache/  /path_to/isle_production_data_storage/enduser-renamed-directory-dev.institution/apache/  see below    settings.php  Drupal settings.php file  /path_to/islandora_production_data_storage/apache/  /config/enduser-renamed-directory.institution/apache/  see below    site.conf  Apache webserver vhost file  /path_to/islandora_production_data_storage/apache/  /config/enduser-renamed-directory.institution/apache/  see below       html  - endusers will  COPY  this entire directory  instead  to  /path_to/isle_production_data_storage/enduser-renamed-directory-dev.institution/apache/html    settings.php  - endusers will want to edit database and user names for Drupal sites to connect properly.    Lines 251 -253: Change the appropriate settings for the Drupal website database, associate database user name and password. Do not change the  host  settings.      Line 288:  Recommend adding a Drupal hash value here of 25+ alpha-numeric characters    Line 312:  $base_url  should be the URL of the ISLE production Drupal website e.g.  https://site.institution.extension      site.conf  - endusers will edit this file as required to setup the Apache webserver on the Apache container.    The filename can stay the same or can be changed. Please note that Line 85 of the associated  docker-compose.yml  will need to be updated if the file is renamed    Lines 2, 3, 6, 7, 34 - 37, 39, 40, 44   45:  endusers will edit this file as directed in the (# enduser please edit this and then remove this comment) instructions.    Do remove (# enduser please edit this and then remove this comment) after editing or adding the appropriate values.", 
            "title": "Apache"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/migration_merge_checklist/#apache-optional-edits", 
            "text": "Data  Description  Production Data Copy Location on ISLE Host Server  Merge, Copy or Edit Location / Destination  Notes      php.ini  PHP configuration file  /path_to/islandora_production_data_storage/apache/  /config/enduser-renamed-directory.institution/apache/  see below       php.ini  - endusers can make appropriate edits within  /config/enduser-renamed-directory.institution/apache/php.ini  to increase the upload settings, memory etc. as needed. Otherwise leaving the default values should work.    Please note:  an additional line will have to be added to the associated  docker-compose.yml  in the Apache  volumes:  section for this edit to work e.g.  - ./apache/php.ini:/etc/php.ini       Data  Description  Production Data Copy Location on ISLE Host Server  Merge, Copy or Edit Location / Destination  Notes      tmpreaper  Cronjob for tmpreaper  /path_to/islandora_production_data_storage/apache/  /config/enduser-renamed-directory.institution/apache/  see below       tmpreaper  - (optional) endusers may want to edit this tmpreaper cron job for different locations and/or times. The  docker-compose.yml  file will need an associated bind-mount for this change.    Please note:  an additional line will have to be added to the associated  docker-compose.yml  in the Apache  volumes:  section for this edit to work e.g.  - ./apache/tmpreaper/cron:/etc/cron.d/tmpreaper-cron", 
            "title": "Apache Optional Edits"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/migration_merge_checklist/#fedora", 
            "text": "Compare, edit, merge or copy the following from the suggested directory  /path_to/islandora_production_data_storage/fedora/  on the ISLE Host server to either:    /opt/isle/config/enduser-renamed-directory-prod.institution/fedora/    /path_to/isle_production_data_storage/enduser-renamed-directory-dev.institution/fedora/       Data  Description  Possible Location  Suggested Destination  Notes      data  Entire Fedora data directory  /usr/local/fedora/  /path_to/isle_production_data_storage/enduser-renamed-directory-dev.institution/fedora/  see below    fedora.fcfg  Fedora repository config file  /usr/local/fedora/server/config/  /islandora_production_data_storage/fedora/  see below    fedora-users.xml  Fedora users config file  /usr/local/fedora/server/config/  /islandora_production_data_storage/fedora/  see below    filter-drupal.xml  Fedora Drupal filter file  /usr/local/fedora/server/config/  /islandora_production_data_storage/fedora/  see below    repository-policies  Fedora Drupal filter file  /usr/local/fedora/server/config/  /islandora_production_data_storage/fedora/  see below    site.conf  Apache webserver vhost file  /etc/apache2/sites-available/  /islandora_production_data_storage/fedora/  see below     Fedora Notes :    data  - endusers will  COPY  this entire directory  instead  to  /path_to/isle_production_data_storage/enduser-renamed-directory-dev.institution/fedora/data    fedora.fcfg  - endusers will want to edit the following:    Line: 562 (optional) to change the  fedora_admin  username for the  fedora3  database    Line: 598 (necessary) to enter the  fedora_admin  user password for the  fedora3  database      fedora-users.xml  - endusers will want to edit the following:   Lines 3, 8, 14 and 19: Add the appropriate passwords or users as needed.       filter-drupal.xml  - endusers will want to edit    Line 3: Add the appropriate Drupal site database name, Drupal site database user and Drupal site database user password in between all  \"\"    Please note:  For endusers using Drupal multi-sites, please add additional sites as guided in the example below    Example    ?xml version= 1.0  encoding= UTF-8 ?  FilterDrupal_Connection \n\n     connection server= mysql  port= 3306  dbname= drupalsite1  user= drupalsite1_user  password= drupalsite1_user_pw \n     sql \n       SELECT DISTINCT u.uid AS userid, u.name AS Name, u.pass AS Pass,r.name AS Role FROM (users u LEFT JOIN users_roles ON u.uid=users_roles.uid) LEFT JOIN role r ON r.rid=users_roles.rid WHERE u.name=? AND u.pass=?;\n     /sql \n     /connection \n\n     connection server= mysql  port= 3306  dbname= drupalsite2  user= drupalsite2_user  password= drupalsite2_user_pw \n     sql \n       SELECT DISTINCT u.uid AS userid, u.name AS Name, u.pass AS Pass,r.name AS Role FROM (users u LEFT JOIN users_roles ON u.uid=users_roles.uid) LEFT JOIN role r ON r.rid=users_roles.rid WHERE u.name=? AND u.pass=?;\n     /sql \n     /connection  /FilterDrupal_Connection     fedora/repository-policies  - endusers can edit the files contained within for more granular or customized Fedora user permissions or repository access.    site.conf  - endusers will want to edit this Apache vhost for the fedora proxy site name (if using Djatoka)    The filename can stay the same or can be changed. Please note that Line 37 of the associated  docker-compose.yml  will need to be updated if the file is renamed    Lines 2, 3, 6, 7, 34 - 37, 39, 40, 44   45:  endusers will edit this file as directed in the (# enduser please edit this and then remove this comment) instructions.    Do remove (# enduser please edit this and then remove this comment) after editing or adding the appropriate values.", 
            "title": "Fedora"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/migration_merge_checklist/#solr", 
            "text": "Copy the following below from the Islandora Production Server(s) to the suggested directory `/path_to/islandora_production_data_storage/solr/` on the ISLE Host server.\n   This data will be used in conjunction with an Solr container.\n   | Data           | Description               | Possible Location        | Suggested ISLE Path Destination          | Notes         |\n   | -------------  | -------------             | -------------            | -------------                            | ------------- |\n   | schema.xml     | Solr index config file    | ../solr/collection1/conf | /islandora_production_data_storage/solr/ | _see below_   |\n   | solrconfig.xml | Solr config file          | ../solr/collection1/conf | /islandora_production_data_storage/solr/ | _see below_   |\n   | solr.xml       | Solr config file file     | /opt/solr/               | /islandora_production_data_storage/solr/ | _see below_   |\n   | stopwords.txt  | solr webserver vhost file | ../solr/collection1/conf | /islandora_production_data_storage/solr/ | _see below_   |  Solr Notes :   schema.xml  Usually the first file one configures when setting up a new Solr installation  The schema declares  what kinds of fields there are  which field should be used as the unique/primary key  which fields are required  how to index and search each field    solrconfig.xml  The solrconfig.xml file is the configuration file with the most parameters affecting Solr itself.  In solrconfig.xml, one can configure the following:  request handlers, which process requests to Solr, e.g. requests to add documents to the index or requests to return results for a query  processes that \"listen\" for particular query-related events; listeners can be used to trigger the execution of special code  the Request Dispatcher for managing HTTP communications  the Admin Web interface  parameters related to replication and duplication    solr.xml  The solr.xml file defines global configuration options that apply to all or many cores.  stopwords.txt  _Using the stopwords.txt file, one can avoid the common words of a language, which do not add a significant value to any search.   For example, a, an, the, you, I, am, and so on. One can specify words to be removed from the Solr search in this file line-by-line.    Additional Locations:   /opt/solr  /usr/local/solr  /var/lib/tomcat7/webapps/solr  /usr/share/tomcat/webapps/solr", 
            "title": "Solr"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/migration_docker_compose/", 
            "text": "Alpha Migration Docker Compose Edit Guidelines\n\n\nMysql Service section\n\n\nservices:\n  mysql:\n\n\n\n\n\n\n\n\nIn the \nimage:\n section, change to appropriate image name if needed otherwise leave as \nlatest\n.\n\n\n\n\n\n\nIn the \nenvironment:\n section, change the MYSQL_ROOT_PASSWORD\n\n\n\n\n\n\nIn the \nvolumes:\n section, change the following:\n\n\n\n\n/pathto/isle_production_data_storage/data/mysql:/var/lib/mysql\n\n\n\n\n/pathto/isle_production_data_storage/data/mysql/log:/var/log/mysql\n\n\n\n\n\n\nPlease Note:\n \nThe docker bind-mount process will automatically create the \n/data/mysql\n directories\n\n\n\n\n\n\n\n\n\n\nIn the \ncontainer_name:\n section, change to \nisle-mysql-institution\n or \nisle-mysql-v1\n\n\n\n\n\n\nIn the \nextra_hosts:\n section, change: (\nthis is NOT to be literally copied, example only\n)\n\n\n\n\n\"isle.institution.edu:isle_host_server_IP\"  to \"yourislesite.institution.edu:10.10.10.10\"\n\n\n\n\n\n\n\n\nFedora Service section\n\n\nfedora:\n\n\n\n\n**TO DO:**  remaining edits for fedora\n\n**TO DO:**  solr service edits\n\nTO DO : apache service edits\n\n**TO DO:**  git commit changes \n push to repo\n\n**TO DO:**  git clone from the institutional git repo e.g. `ISLE-config` to the /opt/ISLE/config/ (on ISLE host server using terminal)", 
            "title": "1.4. -Testing - Migration Docker Compose Checklist"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/migration_docker_compose/#alpha-migration-docker-compose-edit-guidelines", 
            "text": "Mysql Service section  services:\n  mysql:    In the  image:  section, change to appropriate image name if needed otherwise leave as  latest .    In the  environment:  section, change the MYSQL_ROOT_PASSWORD    In the  volumes:  section, change the following:   /pathto/isle_production_data_storage/data/mysql:/var/lib/mysql   /pathto/isle_production_data_storage/data/mysql/log:/var/log/mysql    Please Note:   The docker bind-mount process will automatically create the  /data/mysql  directories      In the  container_name:  section, change to  isle-mysql-institution  or  isle-mysql-v1    In the  extra_hosts:  section, change: ( this is NOT to be literally copied, example only )   \"isle.institution.edu:isle_host_server_IP\"  to \"yourislesite.institution.edu:10.10.10.10\"     Fedora Service section  fedora:  **TO DO:**  remaining edits for fedora\n\n**TO DO:**  solr service edits\n\nTO DO : apache service edits\n\n**TO DO:**  git commit changes   push to repo\n\n**TO DO:**  git clone from the institutional git repo e.g. `ISLE-config` to the /opt/ISLE/config/ (on ISLE host server using terminal)", 
            "title": "Alpha Migration Docker Compose Edit Guidelines"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/newsite_guide/", 
            "text": "New Site Guide\n\n\nThis guide enables an enduser to spin up a new ISLE / Islandora environment for use in production or development.\n\n\nTo DO\n\nFinish this guide based on edits from Migration and Test Site Guides", 
            "title": "1.4. -Testing - New site Guide"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/newsite_guide/#new-site-guide", 
            "text": "This guide enables an enduser to spin up a new ISLE / Islandora environment for use in production or development.  To DO\n\nFinish this guide based on edits from Migration and Test Site Guides", 
            "title": "New Site Guide"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/testsite_guide/", 
            "text": "Test Site Guide - isle.localdomain\n\n\nThis guide enables an enduser to spin up and install the \"baked in\" sample ISLE / Islandora environment, \nisle-localdomain\n for review and testing.\n\n\nThis test ISLE / Islandora environment (\nisle.localdomain\n) includes an un-themed Drupal website and empty Fedora repository for endusers to develop code, test ingests, test metadata, update fields in SOLR indexing and otherwise \"kick the tires\" on ISLE prior for further usages e.g. creating a new ISLE production site or migrating a current Islandora production site to ISLE.\n\n\nWhile this checklist will attempt to point out most of the usage challenges or pitfalls, ISLE assumes no responsibility or liability in this matter should an enduser have customizations beyond what this guide outlines.\n\n\nNotes\n\n\n\n\n\n\nThe first container (MySQL, isle-mysql, mysql) \nhas to be running PRIOR\n to all others (including fedora \n apache) due to a race condition (fedora starts prior to mysql being ready to accept connections). This improper state will be fixed at a later point in the project.  \n\n\n\n\n\n\nDO NOT RUN\n \ndocker-compose up -d\n during the initial build process as this will build and run all containers at the same time which will trigger the above mentioned race condition and subsequent chain of service failures.\n\n\n\n\n\n\nAssumptions / Prerequisites\n\n\n\n\n\n\nEnduser has a local laptop / workstation that conforms to the specifications outlined in the \nISLE MVP Host Specifications Guide\n\n\n\n\n\n\nThis testsite guide is designed for a local laptop / workstation running one of the following:\n\n\n\n\nusing the supplied Vagrant setup found in the \nvagrant\n directory at the root of the ISLE project (\nVagrant with Virtualbox\n)\n\n\n\n\na manually setup CentOS Virtualbox VM (\nno Vagrant\n)\n\n\n\n\n\n\nEnduser has Docker installed and running on the CentOS VM as directed by one of the following guides:\n\n\n\n\n\n\nHost Local - Ansible Setup Guide\n\n\n\n\nHost Local - CentOS Setup Guide\n\n\nHost Local -  MacOS Setup Guide\n\n\n\n\nHost Local - Ubuntu Setup Guide\n\n\n\n\n\n\nThe four ISLE images that already been \"built\" and are stored in a cloud repository (Dockerhub) which save the enduser hours of build time are currently tagged with \nlatest\n.\n\n\n\n\n\n\nisle-apache \nhttps://hub.docker.com/r/islandoracollabgroup/isle-apache/\n  \n\n\n\n\n\n\nisle-fedora \nhttps://hub.docker.com/r/islandoracollabgroup/isle-fedora/\n  \n\n\n\n\n\n\nisle-mysql \nhttps://hub.docker.com/r/islandoracollabgroup/isle-mysql/\n  \n\n\n\n\n\n\nisle-solr  \nhttps://hub.docker.com/r/islandoracollabgroup/isle-solr/\n  \n\n\n\n\n\n\nThe enduser has sshed (shelled in) to their local Host VM or server using a terminal on their laptop or workstation.\n\n\n\n\n\n\n\n\n0. docker-compose.yml file edits\n\n\nIf the enduser is using Vagrant on their laptop move on to \nEdit 2\n in this section as this process is handled automatically.\n\n\nIf and only if the enduser is \nNOT using Vagrant\n on their local laptop and is setting up Virtualbox manually, then please do the following below first on the local laptop.\n\n\nPlease note:\n By default the example tool given below of \nnano\n is not installed on CentOS. If the enduser hasn't installed it before on the CentOS VM, then please run \nsudo yum install nano\n.\n\n\nEdit 1 (conditional)\n\n\nIf the enduser is not using Vagrant to create their CentOS VM, then during the manual process of installing CentOS (not given as a guide in ISLE documentation) they will need to figure out what the IP is of the VM in order to do the following:\n\n\n\n\n\n\nAdd the values of \nCentosVM IP here\n isle.localdomain apache solr mysql fedora\n to the laptop / workstation's \n/etc/hosts\n file.   \n\n\n\n\n\n\nOpen a terminal on the local laptop\n\n\n\n\n\n\nEnter: \nsudo nano /etc/hosts\n\n\n\n\nFor endusers familiar with editing files on the command line, vim or alternative tools can be used in lieu of nano\n\n\n\n\n\n\n\n\nEnter the laptop enduser password\n\n\n\n\n\n\nAdd the values below the \n127.0.0.1\n entry in the \n/etc/hosts\n file.\n\n\n\n\nCentosVM IP here\n isle.localdomain apache solr mysql fedora\n with a space in between the entries.  \n\n\n\n\n\n\n\n\nExample\n (\nPlease do not literally use the IP given below, it may be different after the manual CentOS VM creation\n)\n\n\n127.0.0.1 localhost\n192.168.10.10 isle.localdomain apache solr mysql fedora`\n\n\n\n\n\n\n\n\nEnter \nCntrl\n and the letter \no\n together to write the changes to the file.\n\n\n\n\n\n\nEnter \nCntrl\n and the letter \nx\n together to exit the file.\n\n\n\n\n\n\n\n\nEdit 2\n  \n\n\nThis edit should be made regardless of using Vagrant etc. (same for all operating systems)\n\n\n\n\n\n\nOpen up a terminal and ssh into the running ISLE Host VM\n\n\n\n\n\n\ncd /opt/ISLE\n \nor wherever the enduser cloned the ISLE Project to on the ISLE Host VM\n\n\n\n\n\n\nEnter: \nsudo nano /opt/ISLE/docker-compose.yml\n\n\n\n\nFor endusers familiar with editing files on the command line, vim or alternative tools can be used in lieu of nano\n\n\n\n\n\n\n\n\nAdd the ISLE Host VM IP to the \nextra_hosts\n sections on Lines 39 \n 68 in the \ndocker-compose.yml\n file at the root of the ISLE project directory.\n\n\n\n\n\n\nLines 39 \n 68 both require the same value of the Host server IP address for the \nextra_hosts\n setting after the \nisle.localdomain:\n and before the double quotes.\n\n\n\n\n\n\nExample for Vagrant users:\n\n\n   extra_hosts:\n     - \nisle.localdomain:10.10.10.130\n\n\n\n\n\nExample for Non-Vagrant users:\n\n\n   extra_hosts:\n     - \nisle.localdomain:\nCentosVM IP here\n\n\n\n\n\n\n\nTest site install process (same for all operating systems)\n\n\nThe steps below are for both Vagrant and non Vagrant users alike.\n\n\n\n\n\n\nPlease note:\n \nThe first container (MySQL, isle-mysql, mysql) has to be running PRIOR to all others (including fedora \n apache) due to a race condition (fedora starts prior to mysql being ready to accept connections). This improper state will be fixed at a later point in the project.\n  \n\n\n\n\n\n\nDO NOT RUN\n \ndocker-compose up -d\n during the initial install process as this will download all images and then run all containers at the same time which will trigger this race condition and subsequent chain of service failures.\n\n\n\n\n\n\nDuring the initial install process\n do the following steps to individually download each image and run each container.\n\n\n\n\n\n\nThe install times stated below for each container are highly dependent on the enduser's available Internet bandwidth and could take more or less time accordingly.\n\n\n\n\n\n\nThe steps below assume the enduser is still shelled in (sshed) into the ISLE Host VM via a terminal on their local laptop.\n\n\n\n\n\n\n1. MySQL image pull \n container launch (10 - 20 mins)\n\n\n\n\ndocker pull islandoracollabgroup/isle-mysql:latest\n  \n\n\ndocker-compose up -d mysql\n  \n\n\n\n\n2. Fedora image pull \n container launch (10 - 30 mins)\n\n\n\n\ndocker pull islandoracollabgroup/isle-fedora:latest\n  \n\n\n\n\ndocker-compose up -d fedora\n  \n\n\n\n\n\n\n(Optional but recommended)\n\n\n\n\n\n\nPlease note the Tomcat service requires about 1 -3 minutes to startup and as such if the enduser rushes to the URL supplied below, the service page maytime out or be reported as unreachable. Give it a little time.\n\n\n\n\nAfter spinning up fedora container, check if the Fedora service is running prior to advancing.\n\n\nNavigate to http://fedora:8080/manager/html a popup login prompt should appear.\n\n\nEnter the user name of \nadmin\n and the password of \nild_tc_adm_2018\n\n\nAlso found at the bottom of this page in the \nFast Facts\n section, see \n2. Fedora container - service Tomcat\n\n\n\n\n\n\nUpon login a large display of running Tomcat applications should display, scroll down to \nfedora\n\n\nThe application state / status should be \ntrue\n\n\nIf \nfalse\n appears instead, attempt to restart the fedora service manually.\n\n\nSelect the \nrestart\n button to the right of the status area.\n\n\n\n\n\n\nIf it still fails, review the mounted fedora logs. The \ndocker-compose.yml\n file will indicate where the logs are located.\n\n\nUsing terminal and then entering a command like \ntail -n 300 - \npath to ISLE project/data/fedora/log/tomcat:/usr/local/tomcat/logs/fedora.log\n should display enough information to troubleshoot or restart the entire startup process.\n\n\n\n\n\n\n\n\n3. Solr image pull \n container launch (10 - 20 mins)\n\n\n\n\n\n\ndocker pull islandoracollabgroup/isle-solr:latest\n  \n\n\n\n\n\n\ndocker-compose up -d solr\n  \n\n\n\n\n\n\n4. Apache image pull \n container launch (10 - 30 mins)\n\n\n\n\n\n\ndocker pull islandoracollabgroup/isle-apache:latest\n  \n\n\n\n\n\n\ndocker-compose up -d apache\n  \n\n\n\n\n\n\nPlease note:\n \nThis container on occasion during project testing has failed to start initially for as of yet obvious and fully repeatable reasons.\n  \n\n\n\n\nOne can check if the container is running: \ndocker ps\n (shows only running containers)  \n\n\nOne can check if the container stopped running or \"exited\": \ndocker ps -a\n (shows all containers running or not)  \n\n\n\n\n\n\n\n\n5. Install script on Apache container (10 - 20 mins)\n\n\n\n\n\n\nRun the following shell scripts manually on the apache container  \n\n\n\n\ndocker exec -it isle-apache bash\n\n\ncd /tmp/isle_drupal_build_tools/\n\n\nchmod 777 *.sh\n\n\n./apache_provision.sh\n\n\n\n\n\n\n\n\nOnce finished press the \nCntrl\n and \nd\n keys or type \nexit\n to get out of the apache container\n\n\n\n\nTest (QC) the resulting setup by opening a web browser to the \nisle.localdomain\n URL of the new ISLE sample site (i.e. http://isle.localdomain)\n\n\n\n\nPlease note:\n The cronjob setting in the \napache_provision.sh\n script is still commented out as this will need to be flowed into the Docker build process prior. Issue with default Docker root user vs using islandora user. Drupal cron can run properly.\n\n\nTotal build process\n takes 50 - 120 minutes (\ndepending on system and internet speeds\n)\n\n\n\n\nFast Facts and Passwords\n\n\nislandora\n user on the ISLE host server uses \nislandora\n as the password.\n\n\nPlease note:\n\n\nWhenever the value \nhttp://hostip\n used for accessing other ISLE services (not the main Islandora site) appears below, the enduser can replace \nhostip\n with one of the following:\n\n\nWhen in doubt use the first!\n\n\n\n\n\n\nisle.localdomain\n e.g \nhttp://isle.localdomain.\n\n\n\n\n\n\nthe IP of the Vagrant Host VM (CentOS) e.g. \nhttp://10.10.10.130\n\n\n\n\n\n\nthe IP of the Non-Vagrant Host VM (CentOS) e.g. \nhttp://\nCentosVM IP here\n\n\n\n\n\n\n\n\n1. MySQL container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\nmysql\n\n\nisle-mysql\n\n\nMySQL 5.6\n\n\n3306\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccount\n\n\nPassword\n\n\nDatabase\n\n\nPerms\n\n\n\n\n\n\n\n\n\n\nroot\n\n\nild_mysqlrt_2018\n\n\nALL\n\n\nALL\n\n\n\n\n\n\nfedora_admin\n\n\nild_feddb_2018\n\n\nfedora3\n\n\nAll\n except \nGrant\n option\n\n\n\n\n\n\nisle_ld_user\n\n\nisle_ld_db2018\n\n\nisle_ld\n\n\nAll\n except \nGrant\n option\n\n\n\n\n\n\n\n\n\n\n2. Fedora container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\nfedora\n\n\nisle-fedora\n\n\nsee below\n\n\n8080, 80 (on container) mapped to 8777 (on host)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware\n\n\nVersion\n\n\n\n\n\n\n\n\n\n\nFedora\n\n\n3.8.1\n\n\n\n\n\n\nApache\n\n\n2.4.7\n\n\n\n\n\n\nDrupalfilter\n\n\n3.8.1\n\n\n\n\n\n\nGsearch (w/remote SOLR plugin)\n\n\n2.8+ (DG patched)\n\n\n\n\n\n\n(DG) GSearch Extensions\n\n\n0.13\n\n\n\n\n\n\n(DG) Islandora Transforms (XSLTs)\n\n\nas of 1/2018\n\n\n\n\n\n\nTomcat\n\n\n7.x\n\n\n\n\n\n\nOracle JDK\n\n\n8.x\n\n\n\n\n\n\nDjatoka\n\n\n1.1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccount\n\n\nPassword\n\n\nService\n\n\nURL\n\n\n\n\n\n\n\n\n\n\nfedoraAdmin\n\n\nild_fed_admin_2018\n\n\nFedora\n\n\nhttp://hostip:8080/fedora/describe\n\n\n\n\n\n\nfedoraIntCallUser\n\n\nild_fed_IntCallUser_2018\n\n\nFedora\n\n\nhttp://hostip:8080/fedora/objects\n\n\n\n\n\n\nanonymous\n\n\nanonymous\n\n\nFedora\n\n\n---\n\n\n\n\n\n\nfgsAdmin\n\n\nild_fgs_admin_2018\n\n\nGsearch\n\n\nhttp://hostip:8080/fedoragsearch/rest?operation=updateIndex\n\n\n\n\n\n\nadmin\n\n\nild_tc_adm_2018\n\n\nTomcat\n\n\nhttp://hostip:8080/manager/html\n\n\n\n\n\n\nmanager\n\n\nild_tc_man_2018\n\n\nTomcat\n\n\nhttp://hostip:8080/manager/html\n\n\n\n\n\n\n--\n\n\n--\n\n\nDjatoka\n\n\nhttp://hostip:8080/adore-djatoka/\n\n\n\n\n\n\n--\n\n\n--\n\n\nApache\n\n\nhttp://hostip:8777\n\n\n\n\n\n\n\n\n\n\n3. Solr container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\nsolr\n\n\nisle-solr\n\n\nsee below\n\n\n8993, 8080 (on container) mapped to 8091 (on host)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware\n\n\nVersion\n\n\n\n\n\n\n\n\n\n\nSolr\n\n\n4.10.4\n\n\n\n\n\n\nTomcat\n\n\n7.x\n\n\n\n\n\n\nOracle JDK\n\n\n8.x\n\n\n\n\n\n\n(DG) Basic Solr Config\n\n\n4.10.x branch\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccount\n\n\nPassword\n\n\nService\n\n\nURL\n\n\n\n\n\n\n\n\n\n\nadmin\n\n\nild_tc_adm_2018\n\n\nTomcat\n\n\nhttp://hostip:8091/manager/html\n\n\n\n\n\n\nmanager\n\n\nild_tc_man_2018\n\n\nTomcat\n\n\nhttp://hostip:8091/manager/html\n\n\n\n\n\n\n--\n\n\n--\n\n\nSolr\n\n\nhttp://hostip:8091/solr/\n\n\n\n\n\n\n\n\n\n\n4. Apache container\n\n\n\n\n\n\n\n\nCompose Service Name\n\n\nContainer Name\n\n\nSoftware\n\n\nPorts\n\n\n\n\n\n\n\n\n\n\napache\n\n\nisle-apache\n\n\nsee below\n\n\n80\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoftware\n\n\nVersion\n\n\n\n\n\n\n\n\n\n\nApache\n\n\n2.4.7\n\n\n\n\n\n\nOracle JDK\n\n\n8.x\n\n\n\n\n\n\nDjatoka\n\n\n1.1\n\n\n\n\n\n\nDrupal\n\n\n7.56\n\n\n\n\n\n\nPHP\n\n\n5.6\n\n\n\n\n\n\nIslandora\n\n\n7.x\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAccount\n\n\nPassword\n\n\nService\n\n\nURL\n\n\n\n\n\n\n\n\n\n\nisle_localdomain_admin\n\n\nisle_localdomain_adminpw2018\n\n\nDrupal site admin\n\n\nhttp://isle.localdomain", 
            "title": "1.4. -Testing - Test site Guide"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/testsite_guide/#test-site-guide-islelocaldomain", 
            "text": "This guide enables an enduser to spin up and install the \"baked in\" sample ISLE / Islandora environment,  isle-localdomain  for review and testing.  This test ISLE / Islandora environment ( isle.localdomain ) includes an un-themed Drupal website and empty Fedora repository for endusers to develop code, test ingests, test metadata, update fields in SOLR indexing and otherwise \"kick the tires\" on ISLE prior for further usages e.g. creating a new ISLE production site or migrating a current Islandora production site to ISLE.  While this checklist will attempt to point out most of the usage challenges or pitfalls, ISLE assumes no responsibility or liability in this matter should an enduser have customizations beyond what this guide outlines.  Notes    The first container (MySQL, isle-mysql, mysql)  has to be running PRIOR  to all others (including fedora   apache) due to a race condition (fedora starts prior to mysql being ready to accept connections). This improper state will be fixed at a later point in the project.      DO NOT RUN   docker-compose up -d  during the initial build process as this will build and run all containers at the same time which will trigger the above mentioned race condition and subsequent chain of service failures.", 
            "title": "Test Site Guide - isle.localdomain"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/testsite_guide/#assumptions-prerequisites", 
            "text": "Enduser has a local laptop / workstation that conforms to the specifications outlined in the  ISLE MVP Host Specifications Guide    This testsite guide is designed for a local laptop / workstation running one of the following:   using the supplied Vagrant setup found in the  vagrant  directory at the root of the ISLE project ( Vagrant with Virtualbox )   a manually setup CentOS Virtualbox VM ( no Vagrant )    Enduser has Docker installed and running on the CentOS VM as directed by one of the following guides:    Host Local - Ansible Setup Guide   Host Local - CentOS Setup Guide  Host Local -  MacOS Setup Guide   Host Local - Ubuntu Setup Guide    The four ISLE images that already been \"built\" and are stored in a cloud repository (Dockerhub) which save the enduser hours of build time are currently tagged with  latest .    isle-apache  https://hub.docker.com/r/islandoracollabgroup/isle-apache/       isle-fedora  https://hub.docker.com/r/islandoracollabgroup/isle-fedora/       isle-mysql  https://hub.docker.com/r/islandoracollabgroup/isle-mysql/       isle-solr   https://hub.docker.com/r/islandoracollabgroup/isle-solr/       The enduser has sshed (shelled in) to their local Host VM or server using a terminal on their laptop or workstation.", 
            "title": "Assumptions / Prerequisites"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/testsite_guide/#0-docker-composeyml-file-edits", 
            "text": "If the enduser is using Vagrant on their laptop move on to  Edit 2  in this section as this process is handled automatically.  If and only if the enduser is  NOT using Vagrant  on their local laptop and is setting up Virtualbox manually, then please do the following below first on the local laptop.  Please note:  By default the example tool given below of  nano  is not installed on CentOS. If the enduser hasn't installed it before on the CentOS VM, then please run  sudo yum install nano .  Edit 1 (conditional)  If the enduser is not using Vagrant to create their CentOS VM, then during the manual process of installing CentOS (not given as a guide in ISLE documentation) they will need to figure out what the IP is of the VM in order to do the following:    Add the values of  CentosVM IP here  isle.localdomain apache solr mysql fedora  to the laptop / workstation's  /etc/hosts  file.       Open a terminal on the local laptop    Enter:  sudo nano /etc/hosts   For endusers familiar with editing files on the command line, vim or alternative tools can be used in lieu of nano     Enter the laptop enduser password    Add the values below the  127.0.0.1  entry in the  /etc/hosts  file.   CentosVM IP here  isle.localdomain apache solr mysql fedora  with a space in between the entries.       Example  ( Please do not literally use the IP given below, it may be different after the manual CentOS VM creation )  127.0.0.1 localhost\n192.168.10.10 isle.localdomain apache solr mysql fedora`    Enter  Cntrl  and the letter  o  together to write the changes to the file.    Enter  Cntrl  and the letter  x  together to exit the file.     Edit 2     This edit should be made regardless of using Vagrant etc. (same for all operating systems)    Open up a terminal and ssh into the running ISLE Host VM    cd /opt/ISLE   or wherever the enduser cloned the ISLE Project to on the ISLE Host VM    Enter:  sudo nano /opt/ISLE/docker-compose.yml   For endusers familiar with editing files on the command line, vim or alternative tools can be used in lieu of nano     Add the ISLE Host VM IP to the  extra_hosts  sections on Lines 39   68 in the  docker-compose.yml  file at the root of the ISLE project directory.    Lines 39   68 both require the same value of the Host server IP address for the  extra_hosts  setting after the  isle.localdomain:  and before the double quotes.    Example for Vagrant users:     extra_hosts:\n     -  isle.localdomain:10.10.10.130   Example for Non-Vagrant users:     extra_hosts:\n     -  isle.localdomain: CentosVM IP here", 
            "title": "0. docker-compose.yml file edits"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/testsite_guide/#test-site-install-process-same-for-all-operating-systems", 
            "text": "The steps below are for both Vagrant and non Vagrant users alike.    Please note:   The first container (MySQL, isle-mysql, mysql) has to be running PRIOR to all others (including fedora   apache) due to a race condition (fedora starts prior to mysql being ready to accept connections). This improper state will be fixed at a later point in the project.       DO NOT RUN   docker-compose up -d  during the initial install process as this will download all images and then run all containers at the same time which will trigger this race condition and subsequent chain of service failures.    During the initial install process  do the following steps to individually download each image and run each container.    The install times stated below for each container are highly dependent on the enduser's available Internet bandwidth and could take more or less time accordingly.    The steps below assume the enduser is still shelled in (sshed) into the ISLE Host VM via a terminal on their local laptop.", 
            "title": "Test site install process (same for all operating systems)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/testsite_guide/#1-mysql-image-pull-container-launch-10-20-mins", 
            "text": "docker pull islandoracollabgroup/isle-mysql:latest     docker-compose up -d mysql", 
            "title": "1. MySQL image pull &amp; container launch (10 - 20 mins)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/testsite_guide/#2-fedora-image-pull-container-launch-10-30-mins", 
            "text": "docker pull islandoracollabgroup/isle-fedora:latest      docker-compose up -d fedora       (Optional but recommended)    Please note the Tomcat service requires about 1 -3 minutes to startup and as such if the enduser rushes to the URL supplied below, the service page maytime out or be reported as unreachable. Give it a little time.   After spinning up fedora container, check if the Fedora service is running prior to advancing.  Navigate to http://fedora:8080/manager/html a popup login prompt should appear.  Enter the user name of  admin  and the password of  ild_tc_adm_2018  Also found at the bottom of this page in the  Fast Facts  section, see  2. Fedora container - service Tomcat    Upon login a large display of running Tomcat applications should display, scroll down to  fedora  The application state / status should be  true  If  false  appears instead, attempt to restart the fedora service manually.  Select the  restart  button to the right of the status area.    If it still fails, review the mounted fedora logs. The  docker-compose.yml  file will indicate where the logs are located.  Using terminal and then entering a command like  tail -n 300 -  path to ISLE project/data/fedora/log/tomcat:/usr/local/tomcat/logs/fedora.log  should display enough information to troubleshoot or restart the entire startup process.", 
            "title": "2. Fedora image pull &amp; container launch (10 - 30 mins)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/testsite_guide/#3-solr-image-pull-container-launch-10-20-mins", 
            "text": "docker pull islandoracollabgroup/isle-solr:latest       docker-compose up -d solr", 
            "title": "3. Solr image pull &amp; container launch (10 - 20 mins)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/testsite_guide/#4-apache-image-pull-container-launch-10-30-mins", 
            "text": "docker pull islandoracollabgroup/isle-apache:latest       docker-compose up -d apache       Please note:   This container on occasion during project testing has failed to start initially for as of yet obvious and fully repeatable reasons.      One can check if the container is running:  docker ps  (shows only running containers)    One can check if the container stopped running or \"exited\":  docker ps -a  (shows all containers running or not)", 
            "title": "4. Apache image pull &amp; container launch (10 - 30 mins)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/testsite_guide/#5-install-script-on-apache-container-10-20-mins", 
            "text": "Run the following shell scripts manually on the apache container     docker exec -it isle-apache bash  cd /tmp/isle_drupal_build_tools/  chmod 777 *.sh  ./apache_provision.sh     Once finished press the  Cntrl  and  d  keys or type  exit  to get out of the apache container   Test (QC) the resulting setup by opening a web browser to the  isle.localdomain  URL of the new ISLE sample site (i.e. http://isle.localdomain)   Please note:  The cronjob setting in the  apache_provision.sh  script is still commented out as this will need to be flowed into the Docker build process prior. Issue with default Docker root user vs using islandora user. Drupal cron can run properly.  Total build process  takes 50 - 120 minutes ( depending on system and internet speeds )", 
            "title": "5. Install script on Apache container (10 - 20 mins)"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/testsite_guide/#fast-facts-and-passwords", 
            "text": "islandora  user on the ISLE host server uses  islandora  as the password.  Please note:  Whenever the value  http://hostip  used for accessing other ISLE services (not the main Islandora site) appears below, the enduser can replace  hostip  with one of the following:  When in doubt use the first!    isle.localdomain  e.g  http://isle.localdomain.    the IP of the Vagrant Host VM (CentOS) e.g.  http://10.10.10.130    the IP of the Non-Vagrant Host VM (CentOS) e.g.  http:// CentosVM IP here", 
            "title": "Fast Facts and Passwords"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/testsite_guide/#1-mysql-container", 
            "text": "Compose Service Name  Container Name  Software  Ports      mysql  isle-mysql  MySQL 5.6  3306        Account  Password  Database  Perms      root  ild_mysqlrt_2018  ALL  ALL    fedora_admin  ild_feddb_2018  fedora3  All  except  Grant  option    isle_ld_user  isle_ld_db2018  isle_ld  All  except  Grant  option", 
            "title": "1. MySQL container"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/testsite_guide/#2-fedora-container", 
            "text": "Compose Service Name  Container Name  Software  Ports      fedora  isle-fedora  see below  8080, 80 (on container) mapped to 8777 (on host)        Software  Version      Fedora  3.8.1    Apache  2.4.7    Drupalfilter  3.8.1    Gsearch (w/remote SOLR plugin)  2.8+ (DG patched)    (DG) GSearch Extensions  0.13    (DG) Islandora Transforms (XSLTs)  as of 1/2018    Tomcat  7.x    Oracle JDK  8.x    Djatoka  1.1        Account  Password  Service  URL      fedoraAdmin  ild_fed_admin_2018  Fedora  http://hostip:8080/fedora/describe    fedoraIntCallUser  ild_fed_IntCallUser_2018  Fedora  http://hostip:8080/fedora/objects    anonymous  anonymous  Fedora  ---    fgsAdmin  ild_fgs_admin_2018  Gsearch  http://hostip:8080/fedoragsearch/rest?operation=updateIndex    admin  ild_tc_adm_2018  Tomcat  http://hostip:8080/manager/html    manager  ild_tc_man_2018  Tomcat  http://hostip:8080/manager/html    --  --  Djatoka  http://hostip:8080/adore-djatoka/    --  --  Apache  http://hostip:8777", 
            "title": "2. Fedora container"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/testsite_guide/#3-solr-container", 
            "text": "Compose Service Name  Container Name  Software  Ports      solr  isle-solr  see below  8993, 8080 (on container) mapped to 8091 (on host)        Software  Version      Solr  4.10.4    Tomcat  7.x    Oracle JDK  8.x    (DG) Basic Solr Config  4.10.x branch        Account  Password  Service  URL      admin  ild_tc_adm_2018  Tomcat  http://hostip:8091/manager/html    manager  ild_tc_man_2018  Tomcat  http://hostip:8091/manager/html    --  --  Solr  http://hostip:8091/solr/", 
            "title": "3. Solr container"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/testsite_guide/#4-apache-container", 
            "text": "Compose Service Name  Container Name  Software  Ports      apache  isle-apache  see below  80        Software  Version      Apache  2.4.7    Oracle JDK  8.x    Djatoka  1.1    Drupal  7.56    PHP  5.6    Islandora  7.x        Account  Password  Service  URL      isle_localdomain_admin  isle_localdomain_adminpw2018  Drupal site admin  http://isle.localdomain", 
            "title": "4. Apache container"
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/sampledata/", 
            "text": "", 
            "title": "1.4 - Testing - \"Sample Data\""
        }, 
        {
            "location": "/1_system_process_overview/1_4_testing/travis-ci/", 
            "text": "", 
            "title": "1.4 - Testing - Travis CI"
        }, 
        {
            "location": "/1_system_process_overview/alphas/", 
            "text": "Following is a preliminary list of institutions who have volunteered for the Alpha testing phase:\n\n\nManaged by Born-Digital\n\n\n\n\nWilliams\n\n\nRPI\n\n\nGrinnell\n\n\n\n\nCommunity Alphas\n\n\n\n\nHamilton\n\n\nU. of Pittsburgh\n\n\n?", 
            "title": "1.5 - Alphas"
        }, 
        {
            "location": "/1_system_process_overview/alphas/#managed-by-born-digital", 
            "text": "Williams  RPI  Grinnell", 
            "title": "Managed by Born-Digital"
        }, 
        {
            "location": "/1_system_process_overview/alphas/#community-alphas", 
            "text": "Hamilton  U. of Pittsburgh  ?", 
            "title": "Community Alphas"
        }, 
        {
            "location": "/2_enduser_guide/2_1_host_requirements/reqs-basic/", 
            "text": "", 
            "title": "2.1 - Basic Host Requirements"
        }, 
        {
            "location": "/2_enduser_guide/2_1_host_requirements/host-storage-requirements/", 
            "text": "", 
            "title": "2.1 - Storage Requirements"
        }, 
        {
            "location": "/2_enduser_guide/2_1_host_requirements/reqs-laptops/", 
            "text": "", 
            "title": "2.1 - Local Laptop Requirements"
        }, 
        {
            "location": "/2_enduser_guide/2_1_host_requirements/reqs-cloud/", 
            "text": "", 
            "title": "2.1 - Cloud (AWS) Hosting Requirements"
        }, 
        {
            "location": "/2_enduser_guide/2_1_host_requirements/reqs-onsite/", 
            "text": "", 
            "title": "2.1 - Onsite - Institutional datacenter Requirements"
        }, 
        {
            "location": "/2_enduser_guide/2_1_host_requirements/reqs-multi-environments/", 
            "text": "", 
            "title": "2.1 - Multi-Environment Requirements"
        }, 
        {
            "location": "/2_enduser_guide/usage-guide/", 
            "text": "", 
            "title": "2.2 - Overview"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-install-ansible/", 
            "text": "", 
            "title": "2.2 - Ansible Installation"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-ansible-isle-playbooks/", 
            "text": "", 
            "title": "2.2 - Ansible Playbooks"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-ansible-usage/", 
            "text": "", 
            "title": "2.2 - Ansible Usage"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-ansible-quick-start/", 
            "text": "[STUB]\n\n\n\n\n\n\nDeploy Host Server (Linux, Cloud etc)\n\n\n\n\n\n\nDeploy Docker and Docker Compose", 
            "title": "2.2 - Ansible Quick Start Guide"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-ansible-quick-start/#stub", 
            "text": "Deploy Host Server (Linux, Cloud etc)    Deploy Docker and Docker Compose", 
            "title": "[STUB]"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-laptop-setup/", 
            "text": "", 
            "title": "2.2 - Laptop Setup"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-cloud-setup/", 
            "text": "", 
            "title": "2.2 - Cloud (AWS) Setup"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-onsite-setup/", 
            "text": "", 
            "title": "2.2 - Onsite - Institutional datacenter setup"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-multi-environments-setup/", 
            "text": "", 
            "title": "2.2 - Multi-Environment setup"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-security/", 
            "text": "[STUB]\n\n\n\n\nHow to configure fail2ban\n\n\nProcesses ports etc", 
            "title": "2.2 - Basic Security"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-security/#stub", 
            "text": "How to configure fail2ban  Processes ports etc", 
            "title": "[STUB]"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-coms-ports/", 
            "text": "", 
            "title": "2.2 - Communication and Ports"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/host-environmental-vars/", 
            "text": "", 
            "title": "2.2 - Host Environmental Variables"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-firewall/", 
            "text": "[STUB]\n\n\n\n\nHow to configure csf / iptables", 
            "title": "2.2 - Basic Firewall Setup"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-firewall/#stub", 
            "text": "How to configure csf / iptables", 
            "title": "[STUB]"
        }, 
        {
            "location": "/2_enduser_guide/2_2_usage_guide/usage-hosts-packages/", 
            "text": "", 
            "title": "2.2 - Packages"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/docker-commands/", 
            "text": "Docker image commands\n\n\nHow to list Docker images\n\n\nTo list Docker images: \ndocker image ls\n\n\nHow to remove Docker images\n\n\nTo remove a Docker container: \ndocker image rm -f \nimage name\n\n\n\n\nDocker container commands\n\n\nHow to list Docker containers\n\n\nTo check if containers are running in Docker:\n\n\n\n\nOpen up a command line terminal on the host machine and enter: \ndocker ps -a\n\n\n\n\nOutput should display like:\n\n\nExample:\n  \n\n\n(use screenshot?)\n\n\nHow to start or stop Docker containers using Docker-Compose\n\n\nTo execute the next two commands, you'll need to \ncd\n into the root of project directory where the \ndocker-compose.yml\n file is within a command line terminal.\n\n\n\n\n\n\nTo stop all containers at once: \ndocker-compose stop\n\n\n\n\n\n\nTo start all containers at once: (once built) \ndocker-compose up\n\n\n\n\n\n\n\n\nHow to access running Docker containers\n\n\nTo shell into a container properly without shutting it down:\n\n\nExample:\n\n\ndocker exec -it isle-apache bash\n\n\nIn some cases, one may need to use \nCntrl-D\n to exit the container without shutting it down.\n\n\n\n\nHow to remove Docker containers\n\n\nTo remove a Docker container: \ndocker rm -f \ncontainer name", 
            "title": "2.3 - Docker Commands"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/docker-commands/#docker-image-commands", 
            "text": "", 
            "title": "Docker image commands"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/docker-commands/#how-to-list-docker-images", 
            "text": "To list Docker images:  docker image ls", 
            "title": "How to list Docker images"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/docker-commands/#how-to-remove-docker-images", 
            "text": "To remove a Docker container:  docker image rm -f  image name", 
            "title": "How to remove Docker images"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/docker-commands/#docker-container-commands", 
            "text": "", 
            "title": "Docker container commands"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/docker-commands/#how-to-list-docker-containers", 
            "text": "To check if containers are running in Docker:   Open up a command line terminal on the host machine and enter:  docker ps -a   Output should display like:  Example:     (use screenshot?)", 
            "title": "How to list Docker containers"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/docker-commands/#how-to-start-or-stop-docker-containers-using-docker-compose", 
            "text": "To execute the next two commands, you'll need to  cd  into the root of project directory where the  docker-compose.yml  file is within a command line terminal.    To stop all containers at once:  docker-compose stop    To start all containers at once: (once built)  docker-compose up", 
            "title": "How to start or stop Docker containers using Docker-Compose"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/docker-commands/#how-to-access-running-docker-containers", 
            "text": "To shell into a container properly without shutting it down:  Example:  docker exec -it isle-apache bash  In some cases, one may need to use  Cntrl-D  to exit the container without shutting it down.", 
            "title": "How to access running Docker containers"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/docker-commands/#how-to-remove-docker-containers", 
            "text": "To remove a Docker container:  docker rm -f  container name", 
            "title": "How to remove Docker containers"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/docker-compose-commands/", 
            "text": "", 
            "title": "2.3 - Docker Compose Commands"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-inventory/", 
            "text": "[STUB] Container Inventory\n\n\n\n\ninclude environmental variables specific to containers\n\n\n\n\ninclude accounts and passwords specific to containers.\n\n\n\n\n\n\nMySQL\n\n    a. has the Drupal site (tbd name) database\n\n    b. has the fedora3 database  \n\n\n\n\nApache\n\n    a. capable of running multi-sites  \n\n\nFedora\n\n    a. single repository\n\n    b. has Djatoka dependency\n\n    c. Runs Tomcat service  \n\n\nGsearch\n\n    a. Discovery Garden \"patched version\"\n\n    b. Runs Tomcat service\n\n    c. Uses Discovery Garden Islandora Transforms (XSLTs)\n\n    d. Uses Discovery Garden Search Extensions  \n\n\nSolr\n\n    a. Uses Discovery Garden basic-solr-config\n\n    b. Runs Tomcat service  \n\n\nCertbot\n\n    a. Runs Let's Encrypt", 
            "title": "2.3 - Container Inventory"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-inventory/#stub-container-inventory", 
            "text": "include environmental variables specific to containers   include accounts and passwords specific to containers.    MySQL \n    a. has the Drupal site (tbd name) database \n    b. has the fedora3 database     Apache \n    a. capable of running multi-sites    Fedora \n    a. single repository \n    b. has Djatoka dependency \n    c. Runs Tomcat service    Gsearch \n    a. Discovery Garden \"patched version\" \n    b. Runs Tomcat service \n    c. Uses Discovery Garden Islandora Transforms (XSLTs) \n    d. Uses Discovery Garden Search Extensions    Solr \n    a. Uses Discovery Garden basic-solr-config \n    b. Runs Tomcat service    Certbot \n    a. Runs Let's Encrypt", 
            "title": "[STUB] Container Inventory"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-apache/", 
            "text": "", 
            "title": "2.3 - Container - Apache"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-mysql/", 
            "text": "The MySQL container will be using the following versions:\n\n\n\n\nLatest (5.6) - Dockerhub\n\n\n\n\nLatest (5.6) - Github Repository\n\n\n\n\n\n\nLegacy (5.5) - Dockerhub\n\n\n\n\nLegacy (5.5) - Github Repository\n\n\n\n\n\n\nDocker Compose service description\n\n\nThis container will only create an empty MySQL \nfedora3\n database (upon launch) using the Docker \nenvironment\n setting (displayed above). The Drupal site and/or multi-site databases will need to be created post launch.\n\n\n Please note: This container must be created and launched first, prior to all other containers.\n\n\nWithin the docker-compose.yml file, found at the root of the ISLE project Github repository, this container is described / controlled as follows:\n\n\n\n\nmysql:\n  build: ./mysql\n  image: isle-mysql:latest\n  environment:\n    - MYSQL_ROOT_PASSWORD=islemysqlrootpw2017\n    - MYSQL_DATABASE=fedora3\n    - MYSQL_USER=fedora_admin\n    - MYSQL_PASSWORD=islefeddb2017\n  ports:\n    - \"3306:3306\"\n  volumes:\n    - ./data/mysql:/var/lib/mysql\n    - ./mysql/initscripts:/docker-entrypoint-initdb.d\n  container_name: isle-mysql\n\n\n\n\nMethod 1: Docker Compose commands for standard use of pulling Dockerhub image and running containers via Docker Compose\n\n\nMethod 2: Docker Compose commands for building image and running containers manually\n\n\n\n\nTo build only this container (no others): \ndocker-compose build mysql\n  \n\n\nTo create only this container (no others): \ndocker-compose create mysql\n\n\nTo start only this container (no others): \ndocker-compose up -d mysql\n  \n\n\n\n\nImage Name\n\n\n\n\nLatest \nmysql:5.6\n\n\nhttps://hub.docker.com/r/islandoracollabgroup/isle-mysql/\n\n\n\n\nContainer name(s)\n\n\nisle-mysql\n\n\nDatabases\n\n\n\n\nfedora3\n Fedora database created by build process (empty)\n\n\nislandora_docker\n Drupal site database created by build process (empty, default)\n\n\n\n\nPer the guidelines of the official MySQl Docker image \nREADME\n, section \nInitializing a fresh instance\n:\n\n\n\n\n\"When a container is started for the first time, a new database with the specified name will be created and initialized with the provided configuration variables. Furthermore, it will execute files with extensions .sh, .sql and .sql.gz that are found in /docker-entrypoint-initdb.d. Files will be executed in alphabetical order. You can easily populate your mysql services by mounting a SQL dump into that directory and provide custom images with contributed data. SQL files will be imported by default to the database specified by the MYSQL_DATABASE variable.\"\n\"\n\n\n\n\nBy default, the \ndocker-compose.yml\n script creates the \nfedora3\n database by setting environmental variables in the \nenvironment\n section of the \nmysql\n service.\n\n\nThe second database \nislandora_docker\n is created when the mount process \n./mysql/initscripts:/docker-entrypoint-initdb.d\n occurs upon container launch.\n\n\nWithin this project directory, there is a directory \ninitscripts\n which contains a SQL script \nsiteinit.sql\n\n\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 apache\n\u251c\u2500\u2500 customize\n\u251c\u2500\u2500 data\n\u251c\u2500\u2500 docker-compose.yml\n\u251c\u2500\u2500 docs\n\u251c\u2500\u2500 fedora\n\u251c\u2500\u2500 mkdocs.yml\n\u251c\u2500\u2500 mysql\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Dockerfile\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 initscripts\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 siteinit.sql\n\u251c\u2500\u2500 site\n\u2514\u2500\u2500 solr\n\n\n\n\nThe default contents of this script are:\n\n\nExample\n\n\nCREATE DATABASE isle_site CHARACTER SET utf8 COLLATE utf8_general_ci;\n\n\nCREATE USER islandora_user@'127.0.0.1' IDENTIFIED BY 'islandoraisledb2017';\n\n\nGRANT SELECT, INSERT, UPDATE ON islandora_docker.* TO 'islandora_user'@'127.0.0.1'\";\n  \n\n\nThis script can be modified to create more databases upon container launch.\n\n\n\n\n\n\n\n\n\n\nUser\n\n\nPassword\n\n\nDatabase\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nroot\n\n\nislemysqlrootpw2017\n\n\nALL\n\n\nhas access to all databases with all privileges\n\n\n\n\n\n\nfedora_admin\n\n\nislefeddb2017\n\n\nfedora3\n\n\nhas access to only the \nfedora3\n Fedora database. No grant privileges.\n\n\n\n\n\n\nislandora_user\n\n\nislandoraisledb2017\n\n\nislandora_docker\n\n\nhas access to only the \nislandora_docker\n Drupal site database. No grant privileges.\n\n\n\n\n\n\n\n\nPorts\n\n\nPort 3306 on the MySQL container is mapped to 3306 on Host\n\n\nVolumes\n\n\n\n\n./data/mysql:/var/lib/mysql\n\n\n\n\nThis volume is created to allow MySQL databases to persist. All MySQL data is stored here. The container can be turned off, destroyed or upgraded and this data will remain.\n\n\n\n\n./mysql/initscripts:/docker-entrypoint-initdb.d\n\n\n\n\nThis volume is created to allow for the creation of additional databases beyond the initial \nfedora3\n creation. A default empty Drupal site database is also supplied using a SQL script file called \nsiteinit.sql\n found within the \ninitscripts\n directory. By mounting this directory directly into the container's \ndocker-entrypoint-initdb.d\n directory, the MySQL service is able to run the SQL script automatically upon container launch.", 
            "title": "2.3 - Container - MySQL"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-mysql/#docker-compose-service-description", 
            "text": "This container will only create an empty MySQL  fedora3  database (upon launch) using the Docker  environment  setting (displayed above). The Drupal site and/or multi-site databases will need to be created post launch.   Please note: This container must be created and launched first, prior to all other containers.  Within the docker-compose.yml file, found at the root of the ISLE project Github repository, this container is described / controlled as follows:   mysql:\n  build: ./mysql\n  image: isle-mysql:latest\n  environment:\n    - MYSQL_ROOT_PASSWORD=islemysqlrootpw2017\n    - MYSQL_DATABASE=fedora3\n    - MYSQL_USER=fedora_admin\n    - MYSQL_PASSWORD=islefeddb2017\n  ports:\n    - \"3306:3306\"\n  volumes:\n    - ./data/mysql:/var/lib/mysql\n    - ./mysql/initscripts:/docker-entrypoint-initdb.d\n  container_name: isle-mysql", 
            "title": "Docker Compose service description"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-mysql/#method-1-docker-compose-commands-for-standard-use-of-pulling-dockerhub-image-and-running-containers-via-docker-compose", 
            "text": "", 
            "title": "Method 1: Docker Compose commands for standard use of pulling Dockerhub image and running containers via Docker Compose"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-mysql/#method-2-docker-compose-commands-for-building-image-and-running-containers-manually", 
            "text": "To build only this container (no others):  docker-compose build mysql     To create only this container (no others):  docker-compose create mysql  To start only this container (no others):  docker-compose up -d mysql", 
            "title": "Method 2: Docker Compose commands for building image and running containers manually"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-mysql/#image-name", 
            "text": "Latest  mysql:5.6  https://hub.docker.com/r/islandoracollabgroup/isle-mysql/", 
            "title": "Image Name"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-mysql/#container-names", 
            "text": "isle-mysql", 
            "title": "Container name(s)"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-mysql/#databases", 
            "text": "fedora3  Fedora database created by build process (empty)  islandora_docker  Drupal site database created by build process (empty, default)   Per the guidelines of the official MySQl Docker image  README , section  Initializing a fresh instance :   \"When a container is started for the first time, a new database with the specified name will be created and initialized with the provided configuration variables. Furthermore, it will execute files with extensions .sh, .sql and .sql.gz that are found in /docker-entrypoint-initdb.d. Files will be executed in alphabetical order. You can easily populate your mysql services by mounting a SQL dump into that directory and provide custom images with contributed data. SQL files will be imported by default to the database specified by the MYSQL_DATABASE variable.\" \"   By default, the  docker-compose.yml  script creates the  fedora3  database by setting environmental variables in the  environment  section of the  mysql  service.  The second database  islandora_docker  is created when the mount process  ./mysql/initscripts:/docker-entrypoint-initdb.d  occurs upon container launch.  Within this project directory, there is a directory  initscripts  which contains a SQL script  siteinit.sql  \u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 apache\n\u251c\u2500\u2500 customize\n\u251c\u2500\u2500 data\n\u251c\u2500\u2500 docker-compose.yml\n\u251c\u2500\u2500 docs\n\u251c\u2500\u2500 fedora\n\u251c\u2500\u2500 mkdocs.yml\n\u251c\u2500\u2500 mysql\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Dockerfile\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 initscripts\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 siteinit.sql\n\u251c\u2500\u2500 site\n\u2514\u2500\u2500 solr  The default contents of this script are:  Example  CREATE DATABASE isle_site CHARACTER SET utf8 COLLATE utf8_general_ci;  CREATE USER islandora_user@'127.0.0.1' IDENTIFIED BY 'islandoraisledb2017';  GRANT SELECT, INSERT, UPDATE ON islandora_docker.* TO 'islandora_user'@'127.0.0.1'\";     This script can be modified to create more databases upon container launch.      User  Password  Database  Description      root  islemysqlrootpw2017  ALL  has access to all databases with all privileges    fedora_admin  islefeddb2017  fedora3  has access to only the  fedora3  Fedora database. No grant privileges.    islandora_user  islandoraisledb2017  islandora_docker  has access to only the  islandora_docker  Drupal site database. No grant privileges.", 
            "title": "Databases"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-mysql/#ports", 
            "text": "Port 3306 on the MySQL container is mapped to 3306 on Host", 
            "title": "Ports"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-mysql/#volumes", 
            "text": "./data/mysql:/var/lib/mysql   This volume is created to allow MySQL databases to persist. All MySQL data is stored here. The container can be turned off, destroyed or upgraded and this data will remain.   ./mysql/initscripts:/docker-entrypoint-initdb.d   This volume is created to allow for the creation of additional databases beyond the initial  fedora3  creation. A default empty Drupal site database is also supplied using a SQL script file called  siteinit.sql  found within the  initscripts  directory. By mounting this directory directly into the container's  docker-entrypoint-initdb.d  directory, the MySQL service is able to run the SQL script automatically upon container launch.", 
            "title": "Volumes"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-fedora/", 
            "text": "", 
            "title": "2.3 - Container - Fedora"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-gsearch/", 
            "text": "", 
            "title": "2.3 - Container - Gsearch"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-solr/", 
            "text": "", 
            "title": "2.3 - Container - Solr"
        }, 
        {
            "location": "/2_enduser_guide/2_3_containers/containers-certbot/", 
            "text": "", 
            "title": "2.3 - Container - Certbot"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-points/", 
            "text": "", 
            "title": "2.4 - ISLE Customization Overview"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-accounts/", 
            "text": "", 
            "title": "2.4 - Default accounts and passwords"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-directories/", 
            "text": "", 
            "title": "2.4 - Directories"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-yaml-files/", 
            "text": "", 
            "title": "2.4 - YAML files"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-drupal-applications/", 
            "text": "", 
            "title": "2.4 - Drupal Application"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-xacml-policies/", 
            "text": "", 
            "title": "2.4 - XACML policies"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-xslts/", 
            "text": "", 
            "title": "2.4 - XSLTs"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-drupal-modules/", 
            "text": "", 
            "title": "2.4 - Drupal Modules"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-compile-processes/", 
            "text": "", 
            "title": "2.4 - Compile Processes"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-repositories/", 
            "text": "", 
            "title": "2.4 - Repositories"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-config-tools/", 
            "text": "", 
            "title": "2.4 - Configuration tools and commands"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-logs/", 
            "text": "", 
            "title": "2.4 - Logs - How to configure logs"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-ssl-apache-manual/", 
            "text": "", 
            "title": "2.4 - SSL - Apache - How to manually configure SSL certificates"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-ssl-apache-certbot/", 
            "text": "", 
            "title": "2.4 - SSL - Apache - How to configure SSL certificates using Certbot and Lets Encrypt"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-ssl-tomcat-manual/", 
            "text": "", 
            "title": "2.4 - SSL - Tomcat - How to manually configure SSL certificates"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-ssl-tomcat-certbot/", 
            "text": "", 
            "title": "2.4 - SSL - Tomcat - How to configure SSL certificates using Certbot and Lets Encrypt"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-pre-existing/", 
            "text": "", 
            "title": "2.4 - How to migrate Customized settings, configurations and data from pre-existing sytems"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-download-files/", 
            "text": "", 
            "title": "2.4 - Configuration files overview"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-apache-files/", 
            "text": "", 
            "title": "2.4 - Apache"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-djatoka-files/", 
            "text": "", 
            "title": "2.4 - Djatoka"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-fedora-files/", 
            "text": "", 
            "title": "2.4 - Fedora"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-gsearch-files/", 
            "text": "", 
            "title": "2.4 - Gsearch"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-logrotate-files/", 
            "text": "", 
            "title": "2.4 - Logrotate"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-mysql-files/", 
            "text": "", 
            "title": "2.4 - MySQL"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-php-files/", 
            "text": "", 
            "title": "2.4 - PHP"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-solr-files/", 
            "text": "", 
            "title": "2.4 - Solr"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-topmcat-files/", 
            "text": "", 
            "title": "2.4 - Tomcat"
        }, 
        {
            "location": "/2_enduser_guide/2_4_customize/customization-security/", 
            "text": "", 
            "title": "2.4 - Security modifications"
        }, 
        {
            "location": "/2_enduser_guide/2_5_container_selection/container-selection/", 
            "text": "", 
            "title": "2.5 - ISLE Container Selection + Docker Compose Usage"
        }, 
        {
            "location": "/2_enduser_guide/2_6_data_management/mountpoints/", 
            "text": "", 
            "title": "2.6 - Mount Points"
        }, 
        {
            "location": "/2_enduser_guide/2_6_data_management/pre-existing-datastores/", 
            "text": "", 
            "title": "2.6 - How to attach pre-existing datastores to new containers"
        }, 
        {
            "location": "/2_enduser_guide/2_6_data_management/config-paths/", 
            "text": "", 
            "title": "2.6 - Configuration files paths"
        }, 
        {
            "location": "/2_enduser_guide/2_6_data_management/paths-logs/", 
            "text": "", 
            "title": "2.6 - Log files paths"
        }, 
        {
            "location": "/2_enduser_guide/2_6_data_management/paths-indicies/", 
            "text": "", 
            "title": "2.6 - Indices paths"
        }, 
        {
            "location": "/2_enduser_guide/2_6_data_management/paths-databases/", 
            "text": "", 
            "title": "2.6 - Databases paths"
        }, 
        {
            "location": "/2_enduser_guide/2_6_data_management/paths-triplestores/", 
            "text": "", 
            "title": "2.6 - Triplestores paths"
        }, 
        {
            "location": "/2_enduser_guide/2_6_data_management/data-migration/", 
            "text": "", 
            "title": "2.6 - How to migrate data from existing systems"
        }, 
        {
            "location": "/2_enduser_guide/2_6_data_management/migration-tools-scripts/", 
            "text": "", 
            "title": "2.6 - Migration Tools and scripts"
        }, 
        {
            "location": "/2_enduser_guide/2_6_data_management/upgrations/", 
            "text": "", 
            "title": "2.6 - Upgrations"
        }, 
        {
            "location": "/2_enduser_guide/2_7_managing_multiple_environments/env-sandbox/", 
            "text": "", 
            "title": "2.7 - Sandbox"
        }, 
        {
            "location": "/2_enduser_guide/2_7_managing_multiple_environments/env-staging/", 
            "text": "", 
            "title": "2.7 - Staging"
        }, 
        {
            "location": "/2_enduser_guide/2_7_managing_multiple_environments/env-production/", 
            "text": "", 
            "title": "2.7 - Production"
        }, 
        {
            "location": "/2_enduser_guide/2_7_managing_multiple_environments/env-workflow/", 
            "text": "", 
            "title": "2.7 - Workflow process across environments"
        }, 
        {
            "location": "/2_enduser_guide/2_7_managing_multiple_environments/env-git-structure/", 
            "text": "Using Git to manage ISLE multi environment setups\n\n\nGit reference\n\n\nIf the enduser is not familiar with Git, please use the following below to get started. However, it is recommended that the enduser also collaborate with any available institutional IT or developmental resource/team to aid in this process.\n\n\n\n\n\n\nGit documentation\n\n\n\n\n\n\nGit workflow tutorial\n\n\n\n\n\n\nhttps://help.github.com/articles/set-up-git/\n\n\n\n\n\n\nhttps://help.github.com/articles/create-a-repo/", 
            "title": "2.7 - Recommended Git structure"
        }, 
        {
            "location": "/2_enduser_guide/2_7_managing_multiple_environments/env-git-structure/#using-git-to-manage-isle-multi-environment-setups", 
            "text": "", 
            "title": "Using Git to manage ISLE multi environment setups"
        }, 
        {
            "location": "/2_enduser_guide/2_7_managing_multiple_environments/env-git-structure/#git-reference", 
            "text": "If the enduser is not familiar with Git, please use the following below to get started. However, it is recommended that the enduser also collaborate with any available institutional IT or developmental resource/team to aid in this process.    Git documentation    Git workflow tutorial    https://help.github.com/articles/set-up-git/    https://help.github.com/articles/create-a-repo/", 
            "title": "Git reference"
        }, 
        {
            "location": "/2_enduser_guide/2_7_managing_multiple_environments/env-data-replications/", 
            "text": "", 
            "title": "2.7 - Data Replications and Movement"
        }, 
        {
            "location": "/2_enduser_guide/2_7_managing_multiple_environments/env-container-movement/", 
            "text": "", 
            "title": "2.7 - Container Movement"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-contributing-to-docs/", 
            "text": "How to edit ISLE Documentation\n\n\nThanks in advance for contributions to the ISLE Documentation.\n\n\nThe Islandora Community, the ISLE Team and its stakeholders greatly appreciates all contributor's time and efforts in creating, editing, revising and growing this collected documentation.\n\n\nThe ISLE Team asks that all potential contributors please familiarize themselves with the \nDocumentation and Style Guide\n and its requirements \nPRIOR\n to committing documentation changes.\n\n\nThere are two different ways one can edit or create documentation for the ISLE project.\n\n\nPlease note:\n One will need to have signed up for a Github.com account \nhere\n prior to attempting either of these two methods.\n\n\nMethod 1: Edit page on Github.com\n\n\n\n\nOpen a web browser and navigate to the ISLE project \nrepository\n on Github.com\n\n\nClick on the \ndocs\n directory\n\n\nNavigate to and click on the desired \n.md\n file (documentation page) for editing\n\n\nLocate and click on the \npencil\n icon on the right hand side of the page. (To the right of Raw | Blame | History etc)\n\n\nThe page should now be ready for editing and the \nEdit file\n tab should display at the top. Make changes as needed.\n\n\nTo save changes for review by the ISLE project team, simply scroll down to the bottom of the page to the \nCommit Changes\n section.\n\n\nWithin the first empty field, enter a comment like \nEdited filename.md with changes to ...\n (The key is one sentence with a very minimal description)\n\n\nWithin the second empty field, if needed enter a more verbose list of comments with changes.\n\n\nClick the second radio button \nCreate a new branch for this commit and start a pull request.\n \nDO NOT CLICK THE 1ST BUTTON PLEASE!\n\n\nUpon clicking the second radio button, there should be a new field created with an entry e.g. \ngithubusername-patch-1\n\n\nClick the green \nPropose file change\n button\n\n\nA new page opens with the title \nOpen a pull request\n. The previous information from the new branch process should now populate the new fields\n\n\nClick the green \nCreate pull request\n and now the documentation changes have been submitted for review.\n\n\nAssigned ISLE  project members will review, approve or comment on the pull request as time allows.\n\n\n\n\n\n\nMethod 2: Edit page via local Mkdocs workflow\n\n\n\n\nPlease follow the \nDocumentation Requirements\n page to install Mkdocs and the appropriate \nmaterial\n theme\n\n\nOpen up a terminal and navigate to the ISLE project directory e.g. \ncd ~/ISLE\n\n\nTo start Mkdocs: \nmkdocs serve\n\n\nOne can view the static pages by opening a browser and navigating to \nhttp://127.0.0.1:8000\n\n\nCheckout a new branch in git e.g. \ngit checkout -b new_branch\n\n\nEdit the appropriate Markdown (.md) file within the \ndocs\n directory and save the edited file. Changes are almost immediate, the page should refresh. Should errors occur and the page does not display check the terminal output for issues.\n\n\nOnce ready to push changes to the ISLE repository:  \ngit add edited-documentation-page.md\n  \n\n\ngit commit -m \"Your description of changes, why and affected files if possible\"\n  \n\n\ngit push origin new_branch\n  \n\n\nManually create a pull request on the Github page for the ISLE \nrepository\n  \n\n\nAssigned ISLE  project members will review, approve or comment on the pull request as time allows.", 
            "title": "3.1 - Contributing to Docs"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-contributing-to-docs/#how-to-edit-isle-documentation", 
            "text": "Thanks in advance for contributions to the ISLE Documentation.  The Islandora Community, the ISLE Team and its stakeholders greatly appreciates all contributor's time and efforts in creating, editing, revising and growing this collected documentation.  The ISLE Team asks that all potential contributors please familiarize themselves with the  Documentation and Style Guide  and its requirements  PRIOR  to committing documentation changes.  There are two different ways one can edit or create documentation for the ISLE project.  Please note:  One will need to have signed up for a Github.com account  here  prior to attempting either of these two methods.", 
            "title": "How to edit ISLE Documentation"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-contributing-to-docs/#method-1-edit-page-on-githubcom", 
            "text": "Open a web browser and navigate to the ISLE project  repository  on Github.com  Click on the  docs  directory  Navigate to and click on the desired  .md  file (documentation page) for editing  Locate and click on the  pencil  icon on the right hand side of the page. (To the right of Raw | Blame | History etc)  The page should now be ready for editing and the  Edit file  tab should display at the top. Make changes as needed.  To save changes for review by the ISLE project team, simply scroll down to the bottom of the page to the  Commit Changes  section.  Within the first empty field, enter a comment like  Edited filename.md with changes to ...  (The key is one sentence with a very minimal description)  Within the second empty field, if needed enter a more verbose list of comments with changes.  Click the second radio button  Create a new branch for this commit and start a pull request.   DO NOT CLICK THE 1ST BUTTON PLEASE!  Upon clicking the second radio button, there should be a new field created with an entry e.g.  githubusername-patch-1  Click the green  Propose file change  button  A new page opens with the title  Open a pull request . The previous information from the new branch process should now populate the new fields  Click the green  Create pull request  and now the documentation changes have been submitted for review.  Assigned ISLE  project members will review, approve or comment on the pull request as time allows.", 
            "title": "Method 1: Edit page on Github.com"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-contributing-to-docs/#method-2-edit-page-via-local-mkdocs-workflow", 
            "text": "Please follow the  Documentation Requirements  page to install Mkdocs and the appropriate  material  theme  Open up a terminal and navigate to the ISLE project directory e.g.  cd ~/ISLE  To start Mkdocs:  mkdocs serve  One can view the static pages by opening a browser and navigating to  http://127.0.0.1:8000  Checkout a new branch in git e.g.  git checkout -b new_branch  Edit the appropriate Markdown (.md) file within the  docs  directory and save the edited file. Changes are almost immediate, the page should refresh. Should errors occur and the page does not display check the terminal output for issues.  Once ready to push changes to the ISLE repository:   git add edited-documentation-page.md     git commit -m \"Your description of changes, why and affected files if possible\"     git push origin new_branch     Manually create a pull request on the Github page for the ISLE  repository     Assigned ISLE  project members will review, approve or comment on the pull request as time allows.", 
            "title": "Method 2: Edit page via local Mkdocs workflow"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-docs-styleguide/", 
            "text": "ISLE Documentation Style Guide and Requirements\n\n\nThe ISLE Team asks that all potential contributors please familiarize themselves with this guide and its requirements \nPRIOR\n to committing documentation changes.\n\n\nThis document and project has been created to provide the ISLE project team and larger Islandora community with:\n\n\n\n\n\n\nMarkdown resources, on-boarding material and tools\n\n\n\n\n\n\nHow Markdown can be used for Documentation of ISLE Projects and additional efforts\n\n\n\n\n\n\nHow \nMkdocs\n is used for the creation of static Documentation pages from Markdown files.\n\n\n\n\n\n\nDocumentation Requirements\n\n\n\n\n\n\nAll documentation will be kept within the \ndocs\n directory within the Github.com hosted git repository.\n\n\n\n\n\n\nMarkdown (.md) files are to be used for all documentation.\n\n\n\n\n\n\nAny other type of submitted file type e.g. \n.txt,.pdf,.doc,.rtf\n will not be accepted.\n\n\n\n\n\n\nMkdocs\n is to be used for the generation of static documentation pages to be hosted on Github pages or locally.\n\n\n\n\n\n\nDocumentation Style\n\n\n\n\nHow-to(s) should be written for technical and non-technical audiences alike with clear fully tested steps, explanations and outcomes.\n\n\nAssumptions of prior technical knowledge should be avoided. If additional explanations potentially exceed an appropriate file length or context, the ISLE team recommends creating a \nReferences\n section with topical URLs providing additional documentation for further reading by endusers.\n\n\nAvoid gender specific references e.g. \nhe, she, her, him\n, personification or casual first person perspective e.g. \nyou\n. Use gender-neutral terms like \"\nenduser, one, they, a person\n\" etc.\n\n\nPlease follow the \nFile Layout\n \nsection\n of the \nMkdocs\n documentation when creating new documentation sections.\n\n\n\n\nWhat is Markdown?\n\n\n\n\n\n\nMarkdown is a text to HTML conversion tool.\n\n\n\n\n\n\nThe ISLE team prefers to use the \"\nGitHub Flavored Markdown\n\" syntax.\n\n\n\n\n\n\nMarkdown was created by John Gruber of \nDaring Fireball\n fame\n\n\n\n\n\n\nWhat is Markdown?\n\n\n\n\n\n\nMarkdown Requirements\n\n\n\n\nA text editor like \nAtom\n, Textedit or Notepad.\n\n\nSaving files with the \n.md\n extension\n\n\n\n\nMarkdown Syntax\n\n\n\n\n\n\nMastering Markdown offical Github guide\n\n\n\n\n\n\nMarkdown Syntax (official Github cheat sheet)\n\n\n\n\n\n\nMarkdown cheat sheet\n\n\n\n\n\n\nMarkdown Style\n\n\n\n\n\n\nA great starter \nTemplate\n\n\n\n\n\n\nGood example of \u201chow to\u201d use a README.md. (Not all sections germane. \nExample\n\n\n\n\n\n\nMore elaborate though clean example from \nNetflix", 
            "title": "3.1 - Documentation Style Guide"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-docs-styleguide/#isle-documentation-style-guide-and-requirements", 
            "text": "The ISLE Team asks that all potential contributors please familiarize themselves with this guide and its requirements  PRIOR  to committing documentation changes.  This document and project has been created to provide the ISLE project team and larger Islandora community with:    Markdown resources, on-boarding material and tools    How Markdown can be used for Documentation of ISLE Projects and additional efforts    How  Mkdocs  is used for the creation of static Documentation pages from Markdown files.", 
            "title": "ISLE Documentation Style Guide and Requirements"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-docs-styleguide/#documentation-requirements", 
            "text": "All documentation will be kept within the  docs  directory within the Github.com hosted git repository.    Markdown (.md) files are to be used for all documentation.    Any other type of submitted file type e.g.  .txt,.pdf,.doc,.rtf  will not be accepted.    Mkdocs  is to be used for the generation of static documentation pages to be hosted on Github pages or locally.", 
            "title": "Documentation Requirements"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-docs-styleguide/#documentation-style", 
            "text": "How-to(s) should be written for technical and non-technical audiences alike with clear fully tested steps, explanations and outcomes.  Assumptions of prior technical knowledge should be avoided. If additional explanations potentially exceed an appropriate file length or context, the ISLE team recommends creating a  References  section with topical URLs providing additional documentation for further reading by endusers.  Avoid gender specific references e.g.  he, she, her, him , personification or casual first person perspective e.g.  you . Use gender-neutral terms like \" enduser, one, they, a person \" etc.  Please follow the  File Layout   section  of the  Mkdocs  documentation when creating new documentation sections.", 
            "title": "Documentation Style"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-docs-styleguide/#what-is-markdown", 
            "text": "Markdown is a text to HTML conversion tool.    The ISLE team prefers to use the \" GitHub Flavored Markdown \" syntax.    Markdown was created by John Gruber of  Daring Fireball  fame    What is Markdown?", 
            "title": "What is Markdown?"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-docs-styleguide/#markdown-requirements", 
            "text": "A text editor like  Atom , Textedit or Notepad.  Saving files with the  .md  extension", 
            "title": "Markdown Requirements"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-docs-styleguide/#markdown-syntax", 
            "text": "Mastering Markdown offical Github guide    Markdown Syntax (official Github cheat sheet)    Markdown cheat sheet", 
            "title": "Markdown Syntax"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-docs-styleguide/#markdown-style", 
            "text": "A great starter  Template    Good example of \u201chow to\u201d use a README.md. (Not all sections germane.  Example    More elaborate though clean example from  Netflix", 
            "title": "Markdown Style"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-mkdocs-requirements/", 
            "text": "Documentation Requirements\n\n\nThis project uses \nMkdocs\n for its documentation.\n\n\n\n\n\"MkDocs is a fast, simple and downright gorgeous static site generator that's geared towards building project documentation. Documentation source files are written in Markdown, and configured with a single YAML configuration file.\"\n \n- Mkdocs\n\n\n\n\nTo install Mkdocs:\n\n\n\n\nPlease follow their \nguide\n for the appropriate operating system\n\n\n\n\nThis projects uses the \nmaterial\n theme.\n\n\nTo install the \nmaterial\n theme.\n\n\n\n\nPlease follow this \nguide\n - or -\n\n\n\n\nInstall the latest version of Material with pip:\n\n\npip install mkdocs-material", 
            "title": "3.1 - Mkdocs Requirements"
        }, 
        {
            "location": "/3_dev_guide/3_1_docs/dev-mkdocs-requirements/#documentation-requirements", 
            "text": "This project uses  Mkdocs  for its documentation.   \"MkDocs is a fast, simple and downright gorgeous static site generator that's geared towards building project documentation. Documentation source files are written in Markdown, and configured with a single YAML configuration file.\"   - Mkdocs   To install Mkdocs:   Please follow their  guide  for the appropriate operating system   This projects uses the  material  theme.  To install the  material  theme.   Please follow this  guide  - or -   Install the latest version of Material with pip:  pip install mkdocs-material", 
            "title": "Documentation Requirements"
        }, 
        {
            "location": "/3_dev_guide/3_2_ansible/dev-modify-ansible-scripts/", 
            "text": "", 
            "title": "3.2 - Considerations for future modification of ansible scripts"
        }, 
        {
            "location": "/3_dev_guide/3_2_ansible/dev-ansible-scripts-customize/", 
            "text": "", 
            "title": "3.2 - How to customize the Ansible scripts"
        }, 
        {
            "location": "/3_dev_guide/3_2_ansible/dev-ansible-resources/", 
            "text": "", 
            "title": "3.2 - Ansible Resources"
        }, 
        {
            "location": "/3_dev_guide/3_3_docker_compose/dev-overview-docker/", 
            "text": "", 
            "title": "3.3 - Overview of Docker and Docker Compose"
        }, 
        {
            "location": "/3_dev_guide/3_3_docker_compose/dev-inventory/", 
            "text": "", 
            "title": "3.3 - Inventory and description of customization elements"
        }, 
        {
            "location": "/3_dev_guide/3_3_docker_compose/dev-docker-compose/", 
            "text": "", 
            "title": "3.3 - How to customize Docker Compose files"
        }, 
        {
            "location": "/3_dev_guide/3_3_docker_compose/dev-docker-dockerfile/", 
            "text": "", 
            "title": "3.3 - How to customize Dockerfiles"
        }, 
        {
            "location": "/3_dev_guide/3_3_docker_compose/dev-docker-resources/", 
            "text": "What is Docker?\n\n\n\n\n\"Docker is a tool designed to make it easier to create, deploy, and run applications by using containers. Containers allow a developer to package up an application with all of the parts it needs, such as libraries and other dependencies, and ship it all out as one package.\"\n\n\n- Opensource.com\n\n\n\n\nReference:\n\n\n\n\nhttps://www.docker.com/\n\n\nhttps://www.docker.com/what-docker\n\n\nhttps://www.docker.com/technologies/overview#/software_infrastructure\n\n\nhttps://docs.docker.com/engine/docker-overview/\n\n\n\n\nWhat are Docker Containers?\n\n\n\n\n\"A container image is a lightweight, stand-alone, executable package of a piece of software that includes everything needed to run it: code, runtime, system tools, system libraries, settings. A container is a runtime instance of a docker image.\"\n  \n\n\n\"The concept is borrowed from Shipping Containers, which define a standard to ship goods globally. Docker defines a standard to ship software.\"\n\n \n- Docker.com\n\n\n\n\nA Docker container consists of:\n\n\n\n\na Docker image\n\n\nAn execution environment\n\n\nA standard set of instructions\n\n\n\n\nReference:\n\n\n\n\nhttps://opensource.com/resources/what-are-linux-containers?intcmp=7016000000127cYAAQ\n\n\nhttps://docs.docker.com/engine/userguide/storagedriver/imagesandcontainers/\n\n\n\n\nWhat are Docker Images?\n\n\n\n\n\"An image is an inert, immutable, file that's essentially a snapshot of a container. Images are created with the build command, and they'll produce a container when started with run. Images are stored in a Docker registry such as registry.hub.docker.com\"\n\n\n- stackoverflow\n\n\n\n\n\n\nhttps://docs.docker.com/engine/userguide/storagedriver/imagesandcontainers/\n\n\nhttps://docs.docker.com/engine/reference/commandline/images/\n\n\n\n\nWhat is Docker Compose?\n\n\n\n\nFor this project, Docker Compose is used as an \norchestration\n tool to run and manage all containers.\n\n\n\n\n\n\n\"Orchestration is the automated arrangement, coordination, and management of computer systems, middleware, and services.\"\n\n\n- Wikipedia\n\n\n\"Compose is a tool for defining and running multi-container Docker applications. With Compose, you use a Compose file to configure your application's services. Then, using a single command, you create and start all the services from your configuration.\"\n\n\n- Docker Compose\n\n\n\n\nReference:\n\n\n\n\nhttps://docs.docker.com/compose/overview/\n\n\nhttps://docs.docker.com/compose/\n\n\nhttps://docs.docker.com/compose/environment-variables/\n\n\n\n\nWhat is Docker Hub\n\n\n\n\n\"Docker Hub is a cloud-based registry service which allows you to link to code repositories, build your images and test them, stores manually pushed images, and links to Docker Cloud so you can deploy images to your hosts. Provides a centralized resource for container image discovery, distribution and change management, user and team collaboration, and workflow automation throughout the development pipeline.\"\n\n\n- Docker Hub\n\n\n\n\n\n\nhttps://docs.docker.com/docker-hub/\n\n\nhttps://hub.docker.com/\n\n\n\n\nDocker Documentation\n\n\n\n\nhttps://docs.docker.com/\n\n\nDocker MySQL Documentation \nhttps://github.com/docker-library/docs/tree/master/mysql#mysql_database", 
            "title": "3.3 - Docker Resources"
        }, 
        {
            "location": "/3_dev_guide/3_3_docker_compose/dev-docker-resources/#what-is-docker", 
            "text": "\"Docker is a tool designed to make it easier to create, deploy, and run applications by using containers. Containers allow a developer to package up an application with all of the parts it needs, such as libraries and other dependencies, and ship it all out as one package.\"  - Opensource.com   Reference:   https://www.docker.com/  https://www.docker.com/what-docker  https://www.docker.com/technologies/overview#/software_infrastructure  https://docs.docker.com/engine/docker-overview/", 
            "title": "What is Docker?"
        }, 
        {
            "location": "/3_dev_guide/3_3_docker_compose/dev-docker-resources/#what-are-docker-containers", 
            "text": "\"A container image is a lightweight, stand-alone, executable package of a piece of software that includes everything needed to run it: code, runtime, system tools, system libraries, settings. A container is a runtime instance of a docker image.\"     \"The concept is borrowed from Shipping Containers, which define a standard to ship goods globally. Docker defines a standard to ship software.\" \n  - Docker.com   A Docker container consists of:   a Docker image  An execution environment  A standard set of instructions   Reference:   https://opensource.com/resources/what-are-linux-containers?intcmp=7016000000127cYAAQ  https://docs.docker.com/engine/userguide/storagedriver/imagesandcontainers/", 
            "title": "What are Docker Containers?"
        }, 
        {
            "location": "/3_dev_guide/3_3_docker_compose/dev-docker-resources/#what-are-docker-images", 
            "text": "\"An image is an inert, immutable, file that's essentially a snapshot of a container. Images are created with the build command, and they'll produce a container when started with run. Images are stored in a Docker registry such as registry.hub.docker.com\"  - stackoverflow    https://docs.docker.com/engine/userguide/storagedriver/imagesandcontainers/  https://docs.docker.com/engine/reference/commandline/images/", 
            "title": "What are Docker Images?"
        }, 
        {
            "location": "/3_dev_guide/3_3_docker_compose/dev-docker-resources/#what-is-docker-compose", 
            "text": "For this project, Docker Compose is used as an  orchestration  tool to run and manage all containers.    \"Orchestration is the automated arrangement, coordination, and management of computer systems, middleware, and services.\"  - Wikipedia  \"Compose is a tool for defining and running multi-container Docker applications. With Compose, you use a Compose file to configure your application's services. Then, using a single command, you create and start all the services from your configuration.\"  - Docker Compose   Reference:   https://docs.docker.com/compose/overview/  https://docs.docker.com/compose/  https://docs.docker.com/compose/environment-variables/", 
            "title": "What is Docker Compose?"
        }, 
        {
            "location": "/3_dev_guide/3_3_docker_compose/dev-docker-resources/#what-is-docker-hub", 
            "text": "\"Docker Hub is a cloud-based registry service which allows you to link to code repositories, build your images and test them, stores manually pushed images, and links to Docker Cloud so you can deploy images to your hosts. Provides a centralized resource for container image discovery, distribution and change management, user and team collaboration, and workflow automation throughout the development pipeline.\"  - Docker Hub    https://docs.docker.com/docker-hub/  https://hub.docker.com/", 
            "title": "What is Docker Hub"
        }, 
        {
            "location": "/3_dev_guide/3_3_docker_compose/dev-docker-resources/#docker-documentation", 
            "text": "https://docs.docker.com/  Docker MySQL Documentation  https://github.com/docker-library/docs/tree/master/mysql#mysql_database", 
            "title": "Docker Documentation"
        }, 
        {
            "location": "/3_dev_guide/3_4_docker_images/dev-docker-hub/", 
            "text": "", 
            "title": "3.4 - Overview of Docker Hub System"
        }, 
        {
            "location": "/3_dev_guide/3_4_docker_images/dev-docker-build-images/", 
            "text": "", 
            "title": "3.4 - Docker Build Images"
        }, 
        {
            "location": "/3_dev_guide/3_4_docker_images/dev-docker-update-build-images/", 
            "text": "", 
            "title": "3.4 - How to update Docker build images"
        }, 
        {
            "location": "/3_dev_guide/3_4_docker_images/dev-docker-tagging-policy/", 
            "text": "", 
            "title": "3.4 - Docker Tagging Policy"
        }, 
        {
            "location": "/4_nongit/demos/", 
            "text": "", 
            "title": "4.1 - Demos"
        }, 
        {
            "location": "/4_nongit/video-examples/", 
            "text": "", 
            "title": "4.2 - Video Examples"
        }
    ]
}